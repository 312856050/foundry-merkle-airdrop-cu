{"abi":null,"bytecode":{"object":""},"assembly":"\t.text\n\t.file\t\"TestMerkle.s.sol:MakeMerkle\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[32]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r4\n\tand\t@CPI0_0[0], r4, r3\n\tptr.add\tr1, r3, stack[@ptr_return_data]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tand\t@CPI0_0[0], r4, stack[@calldatasize]\n\tadd\t128, r0, r4\n\tst.1\t64, r4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_2\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI0_34[0], r1, r2\n\tjump.eq\t@.BB0_1068\n\tsub.s!\t@CPI0_35[0], r1, r2\n\tjump.eq\t@.BB0_350\n\tsub.s!\t@CPI0_36[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tr4, r0, stack-[19]\n\tadd\t22, r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_74[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI0_31[0], r1, r1\n\tadd\tr1, r0, stack-[18]\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_75[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_341\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tadd\tstack-[19], r0, r4\n\tjump.eq\t@.BB0_2\n\tadd\t@CPI0_79[0], r0, r1\n\tst.1\t128, r1\n\tcontext.gas_left\tr1\n\tadd\tstack-[18], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.eq\t@.BB0_349\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_80[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[19], r0, r4\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_345\n.BB0_349:\n\tst.1\t64, r4\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t12, r0, r2\n\tsload\tr2, r1\n\tand\t@CPI0_1[0], r1, r1\n\tor\t@CPI0_2[0], r1, r1\n\tadd\tr2, r0, stack-[19]\n\tsstore\tr2, r1\n\tadd\t@CPI0_3[0], r0, stack-[32]\n\tadd\t@CPI0_4[0], r0, r1\n\tst.1\t164, r1\n\tadd\t0, r0, stack-[31]\n\tadd\t@CPI0_5[0], r0, r1\n\tcontext.gas_left\tr2\n\tst.1\t128, r1\n\tst.1\t132, r0\n\tadd\t96, r0, r1\n\tadd\tr1, r0, stack-[18]\n\tst.1\t196, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_6[0], r1, r1\n\tst.1\t228, r0\n\tadd\t32774, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_4\n\tld\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_7\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tjump\t@.BB0_11\n.BB0_4:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI0_0[0], r2, stack[@returndatasize]\n\tand\t@CPI0_0[0], r2, r2\n.BB0_11:\n\tld.1\t64, r3\n\tand\t31, r2, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB0_1122\n\tadd\tr0, r0, r6\n.BB0_13:\n\tshl.s\t5, r6, r7\n\tadd\tr3, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_13\n.BB0_1122:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_15\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr3, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_15:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t96, r2, r1\n\tshl.s\t64, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_350:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t0, r0, stack-[24]\n\tadd\t192, r0, r1\n\tst.1\t64, r1\n\tadd\t30, r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_39[0], r0, r1\n\tst.1\t160, r1\n\tadd\t13, r0, r3\n\tsload\tr3, r2\n\tand!\t1, r2, r4\n\tshr.s\t1, r2, r5\n\tand\t127, r5, r1\n\tadd.ne\tr5, r0, r1\n\tsub.s!\t31, r1, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\txor\tr2, r5, r5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_8\n\tst.1\t192, r1\n\tsub!\tr4, r0, r4\n\tjump.eq\t@.BB0_355\n\tst.1\t0, r3\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_358\n\tadd\t32, r0, r3\n\tadd\t224, r0, r1\n\tjump\t@.BB0_360\n.BB0_1068:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t12, r0, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_37[0], r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_38[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_7:\n\tshl.s\t24, r1, r1\n\tand\t@CPI0_7[0], r1, r1\n\tadd\tstack-[19], r0, r3\n\tsload\tr3, r2\n\tand\t@CPI0_8[0], r2, r2\n\tor\tr2, r1, r1\n\tsstore\tr3, r1\n\tadd\t13, r0, r4\n\tsload\tr4, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r3\n\tadd.ne\tr1, r0, r3\n\tsub.s!\t31, r3, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_8\n\tadd\t31, r0, stack-[30]\n\tsub.s!\t31, r3, r1\n\tjump.le\t@.BB0_20\n\tadd\tr3, r0, stack-[17]\n\tadd\tr4, r0, stack-[19]\n\tst.1\t0, r4\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[17], r0, r2\n\tadd\t31, r2, r2\n\tshr.s\t5, r2, r2\n\tadd\tr1, r2, r2\n\tsub!\tr1, r2, r3\n\tadd\tstack-[19], r0, r4\n\tjump.ge\t@.BB0_20\n.BB0_19:\n\tsstore\tr1, r0\n\tadd\t1, r1, r1\n\tsub!\tr1, r2, r3\n\tjump.lt\t@.BB0_19\n.BB0_20:\n\tadd\t@CPI0_10[0], r0, r1\n\tsstore\tr4, r1\n\tadd\t14, r0, r5\n\tsload\tr5, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.eq\t@.BB0_21\n.BB0_8:\n\tadd\t@CPI0_27[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_48[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_21:\n\tadd\tr4, r0, stack-[19]\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_26\n\tadd\tr3, r0, stack-[16]\n\tadd\tr5, r0, stack-[17]\n\tst.1\t0, r5\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[16], r0, r2\n\tadd\t31, r2, r2\n\tshr.s\t5, r2, r2\n\tadd\tr1, r2, r2\n\tsub!\tr1, r2, r3\n\tadd\tstack-[17], r0, r5\n\tjump.ge\t@.BB0_26\n.BB0_25:\n\tsstore\tr1, r0\n\tadd\t1, r1, r1\n\tsub!\tr1, r2, r3\n\tjump.lt\t@.BB0_25\n.BB0_26:\n\tadd\t@CPI0_11[0], r0, r1\n\tsstore\tr5, r1\n\tadd\t@CPI0_12[0], r0, r1\n\tld.1\t64, r4\n\tst.1\tr4, r1\n\tadd\t4, r0, stack-[29]\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t@CPI0_14[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t31, r3, r4\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tshr.s\t5, r3, r5\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_27\n\tsub!\tr5, r0, r2\n\tadd\tstack-[17], r0, r8\n\tjump.eq\t@.BB0_1120\n\tadd\tr0, r0, r2\n.BB0_39:\n\tshl.s\t5, r2, r6\n\tadd\tr8, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r2, r2\n\tsub!\tr2, r5, r6\n\tjump.lt\t@.BB0_39\n.BB0_1120:\n\tsub!\tr4, r0, r2\n\tjump.eq\t@.BB0_41\n\tshl.s\t5, r5, r2\n\tptr.add\tr1, r2, r1\n\tadd\tr8, r2, r2\n\tshl.s\t3, r4, r4\n\tld.1\tr2, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr2, r1\n.BB0_41:\n\tadd\t31, r3, r1\n\tand\t@CPI0_15[0], r1, r2\n\tadd\tr2, r8, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_3[0], r1, r4\n\tjump.gt\t@.BB0_43\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_43\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[17], r0, r2\n\tld.1\tr2, r2\n\tsub.s!\t@CPI0_3[0], r2, r4\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[17], r3, r5\n\tadd\tstack-[17], r2, r2\n\tadd\t31, r2, r3\n\tadd\t@CPI0_16[0], r0, r4\n\tsub!\tr3, r5, r6\n\tadd\tr0, r0, r6\n\tadd.ge\tr4, r0, r6\n\tand\t@CPI0_16[0], r3, r3\n\tand\t@CPI0_16[0], r5, r7\n\tsub!\tr3, r7, r8\n\tadd.ge\tr0, r0, r4\n\txor\tr3, r7, r3\n\tsub.s!\t@CPI0_16[0], r3, r3\n\tadd.ne\tr6, r0, r4\n\tsub!\tr4, r0, r3\n\tjump.ne\t@.BB0_2\n\tld.1.inc\tr2, r3, r4\n\tsub.s!\t@CPI0_3[0], r3, r2\n\tjump.gt\t@.BB0_43\n\tadd\t31, r3, r2\n\tsub.s\t32, r0, stack-[17]\n\tand\tstack-[17], r2, r2\n\tadd\t63, r2, r2\n\tand\tstack-[17], r2, r2\n\tadd\tr2, r1, r2\n\tsub.s!\t@CPI0_3[0], r2, r6\n\tjump.gt\t@.BB0_43\n\tst.1\t64, r2\n\tst.1.inc\tr1, r3, r2\n\tadd\tr3, r4, r6\n\tsub!\tr6, r5, r5\n\tjump.le\t@.BB0_50\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_355:\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tst.1\t224, r2\n\tsub!\tr1, r0, r1\n\tadd\t32, r0, r2\n\tadd.eq\t0, r0, r2\n\tjump\t@.BB0_353\n.BB0_27:\n\tld.1\t64, r2\n\tsub!\tr5, r0, r6\n\tjump.eq\t@.BB0_1121\n\tadd\tr0, r0, r6\n.BB0_29:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_29\n.BB0_1121:\n\tsub!\tr4, r0, r6\n\tjump.ne\t@.BB0_30\n\tjump\t@.BB0_31\n.BB0_358:\n\tadd\t@CPI0_40[0], r0, r3\n\tadd\tr0, r0, r2\n.BB0_359:\n\tsload\tr3, r4\n\tadd\t224, r2, r5\n\tst.1\tr5, r4\n\tadd\t1, r3, r3\n\tadd\t32, r2, r2\n\tsub!\tr2, r1, r4\n\tjump.lt\t@.BB0_359\n.BB0_353:\n\tadd\t63, r2, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r3\n\tsub.s!\t@CPI0_41[0], r3, r1\n\tjump.gt\t@.BB0_43\n\tadd\t192, r3, r1\n.BB0_360:\n\tst.1\t64, r1\n\tadd\t224, r3, r2\n\tadd\t@CPI0_42[0], r0, r4\n\tst.1\tr2, r4\n\tadd\t228, r3, r4\n\tadd\t64, r0, r5\n\tadd\tr5, r0, stack-[8]\n\tst.1\tr4, r5\n\tadd\t292, r3, r5\n\tld.1\t128, r6\n\tst.1\tr5, r6\n\tadd\t324, r3, r5\n\tsub!\tr6, r0, r7\n\tjump.eq\t@.BB0_363\n\tadd\tr0, r0, r7\n.BB0_362:\n\tadd\tr7, r5, r8\n\tadd\t160, r7, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tadd\t32, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_362\n.BB0_363:\n\tadd\tr6, r5, r7\n\tst.1\tr7, r0\n\tadd\t31, r6, r6\n\tsub.s\t32, r0, stack-[19]\n\tand\tstack-[19], r6, r6\n\tadd\tr6, r5, r5\n\tsub\tr5, r4, r4\n\tadd\t260, r3, r3\n\tst.1\tr3, r4\n\tld.1\t192, r3\n\tst.1.inc\tr5, r3, r4\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB0_366\n\tadd\tr0, r0, r5\n.BB0_365:\n\tadd\tr5, r4, r6\n\tadd\t224, r5, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_365\n.BB0_366:\n\tadd\tr3, r4, r5\n\tst.1\tr5, r0\n\tsub\tr4, r1, r4\n\tadd\t31, r3, r3\n\tand\tstack-[19], r3, r3\n\tadd\tr3, r4, r3\n\tsub.s\t32, r3, r4\n\tst.1\tr1, r4\n\tadd\t31, r3, r3\n\tand\tstack-[19], r3, r4\n\tadd\tr4, r1, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_3[0], r3, r5\n\tjump.gt\t@.BB0_43\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_43\n\tst.1\t64, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tadd\t@CPI0_43[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI0_0[0], r2, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\t0, r0, stack-[23]\n\tadd\t17, r0, r1\n\tadd\tr1, r0, stack-[7]\n\tsload\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_369\n.BB0_735:\n\tadd\t20, r0, r1\n\tsload\tr1, r5\n\tsub.s!\t@CPI0_3[0], r5, r2\n\tjump.le\t@.BB0_736\n.BB0_43:\n\tadd\t@CPI0_27[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_48[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_369:\n\tadd\t16, r0, stack-[17]\n\tadd\tr0, r0, stack-[16]\n\tjump\t@.BB0_372\n.BB0_473:\n\tshl.s\t1, r7, r1\n\tor\t1, r1, r1\n\tadd\tstack-[12], r0, r4\n.BB0_478:\n\tsstore\tr4, r1\n\tadd\t1, r12, stack-[23]\n\tadd\tstack-[7], r0, r1\n\tsload\tr1, r1\n\tadd\t1, r12, r2\n\tsub!\tr2, r1, r2\n\tjump.ge\t@.BB0_370\n.BB0_372:\n\tadd\tstack-[17], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[22]\n\tadd\tr1, r0, stack-[11]\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tjump.gt\t@.BB0_43\n\tadd\tstack-[11], r0, r1\n\tshl.s\t5, r1, r1\n\tadd\t63, r1, r2\n\tand\t@CPI0_22[0], r2, r2\n\tld.1\t64, r4\n\tadd\tr4, r2, r3\n\tadd\tr4, r0, stack-[15]\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_3[0], r3, r5\n\tjump.gt\t@.BB0_43\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_43\n\tst.1\t64, r3\n\tadd\tstack-[15], r0, r3\n\tadd\tstack-[11], r0, r4\n\tst.1.inc\tr3, r4, r3\n\tsub!\tr4, r0, r4\n\tjump.eq\t@.BB0_378\n\tadd\tr0, r0, r4\n.BB0_377:\n\tadd\tr3, r4, r5\n\tadd\t96, r0, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_377\n.BB0_378:\n\tadd\tstack-[15], r0, stack-[21]\n\tld.1\t64, r3\n\tadd\tr3, r2, r2\n\tadd\tr3, r0, stack-[10]\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI0_3[0], r2, r4\n\tjump.gt\t@.BB0_43\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_43\n\tst.1\t64, r2\n\tadd\tstack-[10], r0, r2\n\tadd\tstack-[11], r0, r3\n\tst.1.inc\tr2, r3, r2\n\tshr.s!\t5, r1, r3\n\tjump.eq\t@.BB0_1111\n\tadd\tstack[@calldatasize], r0, r4\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tadd\tr0, r0, r5\n.BB0_382:\n\tshl.s\t5, r5, r6\n\tadd\tr2, r6, r7\n\tptr.add\tr4, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_382\n.BB0_1111:\n\tand!\t31, r1, r1\n\tjump.eq\t@.BB0_384\n.BB0_384:\n\tadd\tstack-[10], r0, r4\n\tadd\tr4, r0, stack-[20]\n\tadd\tstack-[16], r0, r3\n\tsub.s!\tstack-[11], r3, r1\n\tjump.ge\t@.BB0_413\n\tjump\t@.BB0_386\n.BB0_505:\n\tadd\tstack-[18], r0, r3\n.BB0_479:\n\tadd\t1, r3, r3\n\tsub.s!\tstack-[11], r3, r1\n\tjump.ge\t@.BB0_412\n.BB0_386:\n\tadd\tstack-[17], r0, r1\n\tsload\tr1, r1\n\tsub!\tr1, r3, r1\n\tjump.le\t@.BB0_387\n\tadd\tstack-[17], r0, r1\n\tst.1\t0, r1\n\tadd\tr3, r0, stack-[18]\n\tadd\t@CPI0_44[0], r3, r4\n\tsload\tr4, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r3\n\tand\t127, r3, r6\n\tadd.ne\tr3, r0, r6\n\tsub.s!\t31, r6, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\txor\tr1, r3, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_8\n\tld.1\t64, r5\n\tst.1.inc\tr5, r6, r7\n\tsub!\tr2, r0, r2\n\tadd\tr4, r0, stack-[9]\n\tjump.eq\t@.BB0_392\n\tadd\tr6, r0, stack-[12]\n\tadd\tr5, r0, stack-[13]\n\tadd\tr7, r0, stack-[14]\n\tst.1\t0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[12], r0, r6\n\tsub!\tr6, r0, r2\n\tjump.eq\t@.BB0_395\n\tld\tr1, r2\n\tadd\tr0, r0, r1\n\tadd\tstack-[14], r0, r7\n\tadd\tstack-[13], r0, r5\n.BB0_397:\n\tadd\tr7, r1, r3\n\tsload\tr2, r4\n\tst.1\tr3, r4\n\tadd\t1, r2, r2\n\tadd\t32, r1, r1\n\tsub!\tr1, r6, r3\n\tjump.lt\t@.BB0_397\n\tjump\t@.BB0_390\n.BB0_392:\n\tsub.s\t256, r0, r2\n\tand\tr1, r2, r1\n\tst.1\tr7, r1\n\tsub!\tr6, r0, r1\n\tadd\t32, r0, r1\n\tadd.eq\t0, r0, r1\n\tjump\t@.BB0_390\n.BB0_395:\n\tadd\tr0, r0, r1\n\tadd\tstack-[14], r0, r7\n\tadd\tstack-[13], r0, r5\n.BB0_390:\n\tadd\t63, r1, r1\n\tand\tstack-[19], r1, r1\n\tadd\tr1, r5, r8\n\tsub!\tr8, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI0_3[0], r8, r2\n\tjump.gt\t@.BB0_43\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_43\n\tst.1\t64, r8\n\tsub.s!\t@CPI0_19[0], r8, r1\n\tjump.gt\t@.BB0_43\n\tadd\t64, r8, r1\n\tst.1\t64, r1\n\tadd\t7, r0, r1\n\tst.1.inc\tr8, r1, r2\n\tadd\t@CPI0_45[0], r0, r1\n\tadd\tr2, r0, stack-[14]\n\tst.1\tr2, r1\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tld.1\tr5, r3\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB0_402\n\tadd\tr0, r0, r4\n.BB0_401:\n\tadd\tr4, r2, r5\n\tadd\tr7, r4, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_401\n.BB0_402:\n\tadd\tr3, r2, r4\n\tst.1\tr4, r0\n\tst.1\tr1, r3\n\tadd\t63, r3, r3\n\tand\tstack-[19], r3, r4\n\tadd\tr4, r1, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_3[0], r3, r5\n\tjump.gt\t@.BB0_43\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_43\n\tadd\tr8, r0, stack-[13]\n\tst.1\t64, r3\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_28[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r2\n\tadd\t32, r2, r3\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[12]\n\tadd\tstack-[13], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r4\n\tadd\tstack-[14], r0, r7\n\tjump.eq\t@.BB0_408\n\tadd\tr0, r0, r4\n.BB0_407:\n\tadd\tr4, r3, r5\n\tadd\tr4, r7, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_407\n.BB0_408:\n\tadd\tr1, r3, r4\n\tst.1\tr4, r0\n\tst.1\tr2, r1\n\tadd\t63, r1, r1\n\tand\tstack-[19], r1, r4\n\tadd\tr4, r2, r1\n\tsub!\tr1, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_3[0], r1, r5\n\tjump.gt\t@.BB0_43\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_43\n\tst.1\t64, r1\n\tsub.s!\t@CPI0_0[0], r3, r1\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r3\n\tshl.s\t64, r3, r1\n\tld.1\tr2, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_28[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsub!\tstack-[12], r1, r1\n\tjump.ne\t@.BB0_480\n\tadd\t15, r0, r3\n\tsload\tr3, r2\n\tand!\t1, r2, r4\n\tshr.s\t1, r2, r5\n\tand\t127, r5, r1\n\tadd.ne\tr5, r0, r1\n\tsub.s!\t31, r1, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\txor\tr2, r5, r5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_8\n\tld.1\t64, r7\n\tst.1.inc\tr7, r1, r6\n\tsub!\tr4, r0, r4\n\tjump.eq\t@.BB0_635\n\tst.1\t0, r3\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB0_637\n\tadd\t@CPI0_18[0], r0, r3\n\tadd\tr0, r0, r2\n.BB0_639:\n\tadd\tr6, r2, r4\n\tsload\tr3, r5\n\tst.1\tr4, r5\n\tadd\t1, r3, r3\n\tadd\t32, r2, r2\n\tsub!\tr2, r1, r4\n\tjump.lt\t@.BB0_639\n\tjump\t@.BB0_633\n.BB0_480:\n\tadd\tstack-[17], r0, r1\n\tsload\tr1, r1\n\tsub.s!\tstack-[18], r1, r1\n\tjump.le\t@.BB0_387\n\tadd\tstack-[17], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[9], r0, r4\n\tsload\tr4, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r3\n\tand\t127, r3, r6\n\tadd.ne\tr3, r0, r6\n\tsub.s!\t31, r6, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\txor\tr1, r3, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_8\n\tld.1\t64, r5\n\tst.1.inc\tr5, r6, r7\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_485\n\tadd\tr6, r0, stack-[12]\n\tadd\tr5, r0, stack-[13]\n\tadd\tr7, r0, stack-[14]\n\tst.1\t0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[12], r0, r6\n\tsub!\tr6, r0, r2\n\tjump.eq\t@.BB0_488\n\tld\tr1, r2\n\tadd\tr0, r0, r1\n\tadd\tstack-[14], r0, r7\n\tadd\tstack-[13], r0, r5\n.BB0_490:\n\tadd\tr7, r1, r3\n\tsload\tr2, r4\n\tst.1\tr3, r4\n\tadd\t1, r2, r2\n\tadd\t32, r1, r1\n\tsub!\tr1, r6, r3\n\tjump.lt\t@.BB0_490\n\tjump\t@.BB0_483\n.BB0_635:\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tst.1\tr6, r2\n\tsub!\tr1, r0, r1\n\tadd\t32, r0, r2\n\tadd.eq\t0, r0, r2\n\tjump\t@.BB0_633\n.BB0_485:\n\tsub.s\t256, r0, r2\n\tand\tr1, r2, r1\n\tst.1\tr7, r1\n\tsub!\tr6, r0, r1\n\tadd\t32, r0, r1\n\tadd.eq\t0, r0, r1\n\tjump\t@.BB0_483\n.BB0_637:\n\tadd\tr0, r0, r2\n.BB0_633:\n\tadd\t63, r2, r1\n\tand\tstack-[19], r1, r1\n\tadd\tr7, r0, stack-[14]\n\tadd\tr1, r7, r4\n\tsub!\tr4, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI0_3[0], r4, r2\n\tjump.gt\t@.BB0_43\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_43\n\tadd\tr6, r0, stack-[15]\n\tst.1\t64, r4\n\tadd\tstack-[23], r0, r1\n\tadd\t@CPI0_47[0], r0, r2\n\tst.1\tr4, r2\n\tadd\t4, r4, r2\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r2\n\tadd\tr4, r0, stack-[16]\n\tadd\tr3, r0, r2\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_48[0], r1, r1\n\tadd\t@CPI0_14[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t31, r3, r4\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tshr.s\t5, r3, r5\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_641\n\tsub!\tr5, r0, r2\n\tadd\tstack-[16], r0, r8\n\tjump.eq\t@.BB0_1078\n\tadd\tr0, r0, r2\n.BB0_647:\n\tshl.s\t5, r2, r6\n\tadd\tr8, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r2, r2\n\tsub!\tr2, r5, r6\n\tjump.lt\t@.BB0_647\n.BB0_1078:\n\tsub!\tr4, r0, r2\n\tjump.eq\t@.BB0_649\n\tshl.s\t5, r5, r2\n\tptr.add\tr1, r2, r1\n\tadd\tr8, r2, r2\n\tshl.s\t3, r4, r4\n\tld.1\tr2, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr2, r1\n.BB0_649:\n\tadd\t31, r3, r1\n\tand\t@CPI0_15[0], r1, r1\n\tadd\tr1, r8, r6\n\tsub.s!\t@CPI0_3[0], r6, r1\n\tjump.gt\t@.BB0_43\n\tst.1\t64, r6\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tld.1\tr8, r1\n\tsub.s!\t@CPI0_3[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tadd\tr3, r8, r3\n\tadd\tr1, r8, r1\n\tadd\t31, r1, r2\n\tsub!\tr2, r3, r2\n\tjump.ge\t@.BB0_2\n\tld.1.inc\tr1, r1, r2\n\tsub.s!\t@CPI0_3[0], r1, r4\n\tjump.gt\t@.BB0_43\n\tadd\t31, r1, r4\n\tand\tstack-[19], r4, r4\n\tadd\t63, r4, r4\n\tand\tstack-[19], r4, r4\n\tadd\tr4, r6, r4\n\tsub.s!\t@CPI0_3[0], r4, r5\n\tjump.gt\t@.BB0_43\n\tst.1\t64, r4\n\tst.1.inc\tr6, r1, r7\n\tadd\tr1, r2, r4\n\tsub!\tr4, r3, r3\n\tjump.gt\t@.BB0_2\n\tadd\tr6, r0, stack-[16]\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB0_659\n\tadd\tr0, r0, r3\n.BB0_658:\n\tadd\tr3, r7, r4\n\tadd\tr3, r2, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB0_658\n.BB0_659:\n\tadd\tr7, r0, stack-[13]\n\tadd\tr1, r7, r1\n\tst.1\tr1, r0\n\tld.1\t64, r4\n\tadd\t@CPI0_47[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tstack-[18], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r2\n\tadd\tr4, r0, stack-[12]\n\tadd\tr3, r0, r2\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_48[0], r1, r1\n\tadd\t@CPI0_14[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t31, r3, r4\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tshr.s\t5, r3, r5\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_660\n\tsub!\tr5, r0, r2\n\tadd\tstack-[15], r0, r10\n\tadd\tstack-[12], r0, r8\n\tjump.eq\t@.BB0_1076\n\tadd\tr0, r0, r2\n.BB0_666:\n\tshl.s\t5, r2, r6\n\tadd\tr8, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r2, r2\n\tsub!\tr2, r5, r6\n\tjump.lt\t@.BB0_666\n.BB0_1076:\n\tsub!\tr4, r0, r2\n\tadd\tstack-[16], r0, r9\n\tadd\tstack-[13], r0, r11\n\tjump.eq\t@.BB0_668\n\tshl.s\t5, r5, r2\n\tptr.add\tr1, r2, r1\n\tadd\tr8, r2, r2\n\tshl.s\t3, r4, r4\n\tld.1\tr2, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr2, r1\n.BB0_668:\n\tadd\t31, r3, r1\n\tand\t@CPI0_15[0], r1, r1\n\tadd\tr1, r8, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI0_3[0], r2, r4\n\tjump.gt\t@.BB0_43\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_43\n\tst.1\t64, r2\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tld.1\tr8, r1\n\tsub.s!\t@CPI0_3[0], r1, r4\n\tjump.gt\t@.BB0_2\n\tadd\tr3, r8, r5\n\tadd\tr1, r8, r1\n\tadd\t31, r1, r3\n\tsub!\tr3, r5, r4\n\tadd\t@CPI0_16[0], r0, r8\n\tadd\tr0, r0, r4\n\tadd.ge\tr8, r0, r4\n\tand\t@CPI0_16[0], r3, r3\n\tand\t@CPI0_16[0], r5, r6\n\tsub!\tr3, r6, r7\n\tadd\tr0, r0, r7\n\tadd.lt\tr8, r0, r7\n\txor\tr3, r6, r3\n\tsub.s!\t@CPI0_16[0], r3, r3\n\tadd.ne\tr4, r0, r7\n\tsub!\tr7, r0, r3\n\tjump.ne\t@.BB0_2\n\tld.1.inc\tr1, r1, r3\n\tsub.s!\t@CPI0_3[0], r1, r4\n\tjump.gt\t@.BB0_43\n\tadd\t31, r1, r4\n\tand\tstack-[19], r4, r4\n\tadd\t63, r4, r4\n\tand\tstack-[19], r4, r4\n\tadd\tr4, r2, r4\n\tsub.s!\t@CPI0_3[0], r4, r6\n\tjump.gt\t@.BB0_43\n\tst.1\t64, r4\n\tst.1.inc\tr2, r1, r4\n\tadd\tr1, r3, r6\n\tsub!\tr6, r5, r5\n\tjump.gt\t@.BB0_2\n\tsub!\tr1, r0, r5\n\tjump.eq\t@.BB0_679\n\tadd\tr0, r0, r5\n.BB0_678:\n\tadd\tr5, r4, r6\n\tadd\tr5, r3, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r5, r5\n\tsub!\tr5, r1, r6\n\tjump.lt\t@.BB0_678\n.BB0_679:\n\tadd\tr1, r4, r1\n\tst.1\tr1, r0\n\tld.1\t64, r3\n\tadd\t32, r3, r1\n\tadd\t@CPI0_49[0], r0, r5\n\tst.1\tr1, r5\n\tadd\t40, r3, r6\n\tld.1\tr9, r5\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_682\n\tadd\tr0, r0, r7\n.BB0_681:\n\tadd\tr7, r6, r8\n\tadd\tr7, r11, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tadd\t32, r7, r7\n\tsub!\tr7, r5, r8\n\tjump.lt\t@.BB0_681\n.BB0_682:\n\tadd\tr5, r6, r6\n\tst.1\tr6, r0\n\tadd\tr5, r3, r6\n\tadd\t40, r6, r7\n\tadd\t@CPI0_50[0], r0, r8\n\tst.1\tr7, r8\n\tadd\t41, r6, r6\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r7\n\tjump.eq\t@.BB0_685\n\tadd\tr0, r0, r7\n.BB0_684:\n\tadd\tr7, r6, r8\n\tadd\tr7, r4, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tadd\t32, r7, r7\n\tsub!\tr7, r2, r8\n\tjump.lt\t@.BB0_684\n.BB0_685:\n\tadd\tr2, r6, r4\n\tst.1\tr4, r0\n\tadd\tr2, r5, r2\n\tadd\t9, r2, r4\n\tst.1\tr3, r4\n\tadd\t72, r2, r2\n\tand\tstack-[19], r2, r2\n\tadd\tr2, r3, r9\n\tsub!\tr9, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_3[0], r9, r4\n\tjump.gt\t@.BB0_43\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_43\n\tst.1\t64, r9\n\tadd\t@CPI0_53[0], r0, r2\n\tst.1\tr9, r2\n\tadd\t4, r9, r2\n\tadd\tstack-[8], r0, r4\n\tst.1\tr2, r4\n\tadd\t68, r9, r5\n\tadd\tstack-[14], r0, r4\n\tld.1\tr4, r4\n\tst.1\tr5, r4\n\tadd\t100, r9, r5\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_690\n\tadd\tr0, r0, r6\n.BB0_689:\n\tadd\tr6, r5, r7\n\tadd\tr10, r6, r8\n\tld.1\tr8, r8\n\tst.1\tr7, r8\n\tadd\t32, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB0_689\n.BB0_690:\n\tadd\tr4, r5, r6\n\tst.1\tr6, r0\n\tadd\t31, r4, r4\n\tand\tstack-[19], r4, r4\n\tadd\tr4, r5, r4\n\tsub\tr4, r2, r2\n\tadd\t36, r9, r5\n\tst.1\tr5, r2\n\tld.1\tr3, r3\n\tst.1.inc\tr4, r3, r2\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB0_693\n\tadd\tr0, r0, r4\n.BB0_692:\n\tadd\tr4, r2, r5\n\tadd\tr4, r1, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_692\n.BB0_693:\n\tadd\t31, r3, r1\n\tand\tstack-[19], r1, r1\n\tadd\tr3, r2, r3\n\tst.1\tr3, r0\n\tsub\tr2, r9, r2\n\tadd\tr2, r1, r1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tsub.s!\t@CPI0_0[0], r9, r2\n\tadd\tr4, r0, r2\n\tadd.lt\tr9, r0, r2\n\tshl.s\t64, r2, r2\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tadd\t@CPI0_14[0], r0, r2\n\tadd\tr9, r0, stack-[16]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[16], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tshr.s!\t5, r4, r5\n\tjump.eq\t@.BB0_1075\n\tadd\tr0, r0, r6\n.BB0_695:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_695\n.BB0_1075:\n\tand!\t31, r4, r6\n\tjump.eq\t@.BB0_697\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r7\n\tadd\tr9, r5, r5\n\tshl.s\t3, r6, r6\n\tld.1\tr5, r8\n\tshl\tr8, r6, r8\n\tshr\tr8, r6, r8\n\tld\tr7, r7\n\tsub\t256, r6, r6\n\tshr\tr7, r6, r7\n\tshl\tr7, r6, r6\n\tor\tr6, r8, r6\n\tst.1\tr5, r6\n.BB0_697:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_698\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_3[0], r1, r4\n\tjump.gt\t@.BB0_43\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_43\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tld.1\tr9, r1\n\tsub.s!\t@CPI0_31[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[20], r0, r2\n\tadd\tr2, r0, stack-[10]\n\tld.1\tr2, r2\n\tadd\tstack-[18], r0, r3\n\tsub!\tr2, r3, r2\n\tjump.le\t@.BB0_387\n\tshl.s\t5, r3, r2\n\tadd\t32, r2, r3\n\tadd\tr3, r0, stack-[14]\n\tadd\tstack-[10], r3, r2\n\tst.1\tr2, r1\n\tld.1\t64, r4\n\tadd\tr4, r0, stack-[15]\n\tadd\t@CPI0_54[0], r0, r2\n\tst.1\tr4, r2\n\tadd\t4, r4, r2\n\tadd\tstack-[24], r0, stack-[16]\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r2\n\tadd\tr3, r0, r2\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_48[0], r1, r1\n\tadd\t@CPI0_14[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[15], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\tstack-[16], r3, r4\n\tadd\tstack-[16], r0, r5\n\tadd.lt\tr3, r0, r5\n\tshr.s!\t5, r5, r4\n\tjump.eq\t@.BB0_1073\n\tadd\tr0, r0, r6\n.BB0_709:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB0_709\n.BB0_1073:\n\tand!\t31, r5, r5\n\tjump.eq\t@.BB0_711\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r6\n\tadd\tr9, r4, r4\n\tshl.s\t3, r5, r5\n\tld.1\tr4, r7\n\tshl\tr7, r5, r7\n\tshr\tr7, r5, r7\n\tld\tr6, r6\n\tsub\t256, r5, r5\n\tshr\tr6, r5, r6\n\tshl\tr6, r5, r5\n\tor\tr5, r7, r5\n\tst.1\tr4, r5\n.BB0_711:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_712\n\tadd\tstack-[16], r3, r2\n\tsub!\tr2, r3, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\tstack-[16], r1, r1\n\tshr.s!\t5, r3, r2\n\tjump.eq\t@.BB0_1071\n\tadd\tr0, r0, r4\n.BB0_722:\n\tshl.s\t5, r4, r5\n\tadd\tr9, r5, r6\n\tptr.add\tr1, r5, r5\n\tld\tr5, r5\n\tst.1\tr6, r5\n\tadd\t1, r4, r4\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB0_722\n.BB0_1071:\n\tand!\t31, r3, r4\n\tjump.eq\t@.BB0_724\n\tshl.s\t5, r2, r2\n\tptr.add\tr1, r2, r1\n\tadd\tr9, r2, r2\n\tshl.s\t3, r4, r4\n\tld.1\tr2, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr2, r1\n.BB0_724:\n\tadd\t31, r3, r1\n\tand\t@CPI0_15[0], r1, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_3[0], r1, r4\n\tjump.gt\t@.BB0_43\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_43\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tld.1\tr9, r2\n\tsub.s!\t@CPI0_3[0], r2, r4\n\tjump.gt\t@.BB0_2\n\tadd\tr3, r9, r4\n\tadd\tr2, r9, r2\n\tadd\t31, r2, r3\n\tsub!\tr3, r4, r5\n\tadd\t@CPI0_16[0], r0, r8\n\tadd\tr0, r0, r5\n\tadd.ge\tr8, r0, r5\n\tand\t@CPI0_16[0], r3, r3\n\tand\t@CPI0_16[0], r4, r6\n\tsub!\tr3, r6, r7\n\tadd\tr0, r0, r7\n\tadd.lt\tr8, r0, r7\n\txor\tr3, r6, r3\n\tsub.s!\t@CPI0_16[0], r3, r3\n\tadd.ne\tr5, r0, r7\n\tsub!\tr7, r0, r3\n\tjump.ne\t@.BB0_2\n\tld.1.inc\tr2, r2, r3\n\tsub.s!\t@CPI0_3[0], r2, r5\n\tjump.gt\t@.BB0_43\n\tadd\t31, r2, r5\n\tand\tstack-[19], r5, r5\n\tadd\t63, r5, r5\n\tand\tstack-[19], r5, r5\n\tadd\tr5, r1, r5\n\tsub.s!\t@CPI0_3[0], r5, r6\n\tjump.gt\t@.BB0_43\n\tst.1\t64, r5\n\tst.1.inc\tr1, r2, r5\n\tadd\tr2, r3, r6\n\tsub!\tr6, r4, r4\n\tjump.gt\t@.BB0_2\n\tsub!\tr2, r0, r4\n\tjump.eq\t@.BB0_717\n\tadd\tr0, r0, r4\n.BB0_734:\n\tadd\tr4, r5, r6\n\tadd\tr4, r3, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r4, r4\n\tsub!\tr4, r2, r6\n\tjump.lt\t@.BB0_734\n.BB0_717:\n\tadd\tr2, r5, r2\n\tst.1\tr2, r0\n\tadd\tstack-[21], r0, r2\n\tadd\tr2, r0, stack-[15]\n\tld.1\tr2, r2\n\tadd\tstack-[18], r0, r3\n\tsub!\tr2, r3, r2\n\tjump.le\t@.BB0_387\n\tadd\tstack-[15], r0, r4\n\tadd\tstack-[14], r4, r2\n\tst.1\tr2, r1\n\tld.1\tr4, r1\n\tsub!\tr1, r3, r1\n\tjump.le\t@.BB0_387\n\tadd\tstack-[22], r0, stack-[11]\n\tjump\t@.BB0_479\n.BB0_488:\n\tadd\tr0, r0, r1\n\tadd\tstack-[14], r0, r7\n\tadd\tstack-[13], r0, r5\n.BB0_483:\n\tadd\t63, r1, r1\n\tand\tstack-[19], r1, r1\n\tadd\tr1, r5, r8\n\tsub!\tr8, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI0_3[0], r8, r2\n\tjump.gt\t@.BB0_43\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_43\n\tst.1\t64, r8\n\tsub.s!\t@CPI0_19[0], r8, r1\n\tjump.gt\t@.BB0_43\n\tadd\t64, r8, r1\n\tst.1\t64, r1\n\tadd\t4, r0, r1\n\tst.1.inc\tr8, r1, r2\n\tadd\t@CPI0_46[0], r0, r1\n\tadd\tr2, r0, stack-[14]\n\tst.1\tr2, r1\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tld.1\tr5, r3\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB0_495\n\tadd\tr0, r0, r4\n.BB0_494:\n\tadd\tr4, r2, r5\n\tadd\tr7, r4, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_494\n.BB0_495:\n\tadd\tr3, r2, r4\n\tst.1\tr4, r0\n\tst.1\tr1, r3\n\tadd\t63, r3, r3\n\tand\tstack-[19], r3, r4\n\tadd\tr4, r1, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_3[0], r3, r5\n\tjump.gt\t@.BB0_43\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_43\n\tadd\tr8, r0, stack-[13]\n\tst.1\t64, r3\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_28[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r2\n\tadd\t32, r2, r3\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[12]\n\tadd\tstack-[13], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r4\n\tadd\tstack-[14], r0, r7\n\tjump.eq\t@.BB0_501\n\tadd\tr0, r0, r4\n.BB0_500:\n\tadd\tr4, r3, r5\n\tadd\tr4, r7, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_500\n.BB0_501:\n\tadd\tr1, r3, r4\n\tst.1\tr4, r0\n\tst.1\tr2, r1\n\tadd\t63, r1, r1\n\tand\tstack-[19], r1, r4\n\tadd\tr4, r2, r1\n\tsub!\tr1, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_3[0], r1, r5\n\tjump.gt\t@.BB0_43\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_43\n\tst.1\t64, r1\n\tsub.s!\t@CPI0_0[0], r3, r1\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r3\n\tshl.s\t64, r3, r1\n\tld.1\tr2, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_28[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsub!\tstack-[12], r1, r1\n\tjump.ne\t@.BB0_505\n\tadd\t15, r0, r3\n\tsload\tr3, r2\n\tand!\t1, r2, r4\n\tshr.s\t1, r2, r5\n\tand\t127, r5, r1\n\tadd.ne\tr5, r0, r1\n\tsub.s!\t31, r1, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\txor\tr2, r5, r5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_8\n\tld.1\t64, r7\n\tst.1.inc\tr7, r1, r6\n\tsub!\tr4, r0, r4\n\tjump.eq\t@.BB0_510\n\tst.1\t0, r3\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB0_512\n\tadd\t@CPI0_18[0], r0, r3\n\tadd\tr0, r0, r2\n.BB0_514:\n\tadd\tr6, r2, r4\n\tsload\tr3, r5\n\tst.1\tr4, r5\n\tadd\t1, r3, r3\n\tadd\t32, r2, r2\n\tsub!\tr2, r1, r4\n\tjump.lt\t@.BB0_514\n\tjump\t@.BB0_508\n.BB0_510:\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tst.1\tr6, r2\n\tsub!\tr1, r0, r1\n\tadd\t32, r0, r2\n\tadd.eq\t0, r0, r2\n\tjump\t@.BB0_508\n.BB0_512:\n\tadd\tr0, r0, r2\n.BB0_508:\n\tadd\t63, r2, r1\n\tand\tstack-[19], r1, r1\n\tadd\tr7, r0, stack-[13]\n\tadd\tr1, r7, r4\n\tsub!\tr4, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI0_3[0], r4, r2\n\tjump.gt\t@.BB0_43\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_43\n\tadd\tr6, r0, stack-[14]\n\tst.1\t64, r4\n\tadd\tstack-[23], r0, r1\n\tadd\t@CPI0_47[0], r0, r2\n\tst.1\tr4, r2\n\tadd\t4, r4, r2\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r2\n\tadd\tr4, r0, stack-[16]\n\tadd\tr3, r0, r2\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_48[0], r1, r1\n\tadd\t@CPI0_14[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t31, r3, r4\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tshr.s\t5, r3, r5\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_516\n\tsub!\tr5, r0, r2\n\tadd\tstack-[16], r0, r8\n\tjump.eq\t@.BB0_1089\n\tadd\tr0, r0, r2\n.BB0_522:\n\tshl.s\t5, r2, r6\n\tadd\tr8, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r2, r2\n\tsub!\tr2, r5, r6\n\tjump.lt\t@.BB0_522\n.BB0_1089:\n\tsub!\tr4, r0, r2\n\tjump.eq\t@.BB0_524\n\tshl.s\t5, r5, r2\n\tptr.add\tr1, r2, r1\n\tadd\tr8, r2, r2\n\tshl.s\t3, r4, r4\n\tld.1\tr2, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr2, r1\n.BB0_524:\n\tadd\t31, r3, r1\n\tand\t@CPI0_15[0], r1, r1\n\tadd\tr1, r8, r6\n\tsub.s!\t@CPI0_3[0], r6, r1\n\tjump.gt\t@.BB0_43\n\tst.1\t64, r6\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tld.1\tr8, r1\n\tsub.s!\t@CPI0_3[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tadd\tr3, r8, r3\n\tadd\tr1, r8, r1\n\tadd\t31, r1, r2\n\tsub!\tr2, r3, r2\n\tjump.ge\t@.BB0_2\n\tld.1.inc\tr1, r1, r2\n\tsub.s!\t@CPI0_3[0], r1, r4\n\tjump.gt\t@.BB0_43\n\tadd\t31, r1, r4\n\tand\tstack-[19], r4, r4\n\tadd\t63, r4, r4\n\tand\tstack-[19], r4, r4\n\tadd\tr4, r6, r4\n\tsub.s!\t@CPI0_3[0], r4, r5\n\tjump.gt\t@.BB0_43\n\tst.1\t64, r4\n\tst.1.inc\tr6, r1, r7\n\tadd\tr1, r2, r4\n\tsub!\tr4, r3, r3\n\tjump.gt\t@.BB0_2\n\tadd\tr6, r0, stack-[16]\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB0_534\n\tadd\tr0, r0, r3\n.BB0_533:\n\tadd\tr3, r7, r4\n\tadd\tr3, r2, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB0_533\n.BB0_534:\n\tadd\tr7, r0, stack-[12]\n\tadd\tr1, r7, r1\n\tst.1\tr1, r0\n\tld.1\t64, r4\n\tadd\t@CPI0_47[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tstack-[18], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r2\n\tadd\tr4, r0, stack-[9]\n\tadd\tr3, r0, r2\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_48[0], r1, r1\n\tadd\t@CPI0_14[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t31, r3, r4\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tshr.s\t5, r3, r5\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_535\n\tsub!\tr5, r0, r2\n\tadd\tstack-[14], r0, r10\n\tadd\tstack-[9], r0, r8\n\tjump.eq\t@.BB0_1087\n\tadd\tr0, r0, r2\n.BB0_541:\n\tshl.s\t5, r2, r6\n\tadd\tr8, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r2, r2\n\tsub!\tr2, r5, r6\n\tjump.lt\t@.BB0_541\n.BB0_1087:\n\tsub!\tr4, r0, r2\n\tadd\tstack-[16], r0, r9\n\tadd\tstack-[12], r0, r11\n\tjump.eq\t@.BB0_543\n\tshl.s\t5, r5, r2\n\tptr.add\tr1, r2, r1\n\tadd\tr8, r2, r2\n\tshl.s\t3, r4, r4\n\tld.1\tr2, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr2, r1\n.BB0_543:\n\tadd\t31, r3, r1\n\tand\t@CPI0_15[0], r1, r1\n\tadd\tr1, r8, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI0_3[0], r2, r4\n\tjump.gt\t@.BB0_43\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_43\n\tst.1\t64, r2\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tld.1\tr8, r1\n\tsub.s!\t@CPI0_3[0], r1, r4\n\tjump.gt\t@.BB0_2\n\tadd\tr3, r8, r5\n\tadd\tr1, r8, r1\n\tadd\t31, r1, r3\n\tsub!\tr3, r5, r4\n\tadd\t@CPI0_16[0], r0, r8\n\tadd\tr0, r0, r4\n\tadd.ge\tr8, r0, r4\n\tand\t@CPI0_16[0], r3, r3\n\tand\t@CPI0_16[0], r5, r6\n\tsub!\tr3, r6, r7\n\tadd\tr0, r0, r7\n\tadd.lt\tr8, r0, r7\n\txor\tr3, r6, r3\n\tsub.s!\t@CPI0_16[0], r3, r3\n\tadd.ne\tr4, r0, r7\n\tsub!\tr7, r0, r3\n\tjump.ne\t@.BB0_2\n\tld.1.inc\tr1, r1, r3\n\tsub.s!\t@CPI0_3[0], r1, r4\n\tjump.gt\t@.BB0_43\n\tadd\t31, r1, r4\n\tand\tstack-[19], r4, r4\n\tadd\t63, r4, r4\n\tand\tstack-[19], r4, r4\n\tadd\tr4, r2, r4\n\tsub.s!\t@CPI0_3[0], r4, r6\n\tjump.gt\t@.BB0_43\n\tst.1\t64, r4\n\tst.1.inc\tr2, r1, r4\n\tadd\tr1, r3, r6\n\tsub!\tr6, r5, r5\n\tjump.gt\t@.BB0_2\n\tsub!\tr1, r0, r5\n\tjump.eq\t@.BB0_554\n\tadd\tr0, r0, r5\n.BB0_553:\n\tadd\tr5, r4, r6\n\tadd\tr5, r3, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r5, r5\n\tsub!\tr5, r1, r6\n\tjump.lt\t@.BB0_553\n.BB0_554:\n\tadd\tr1, r4, r1\n\tst.1\tr1, r0\n\tld.1\t64, r3\n\tadd\t32, r3, r1\n\tadd\t@CPI0_49[0], r0, r5\n\tst.1\tr1, r5\n\tadd\t40, r3, r6\n\tld.1\tr9, r5\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_557\n\tadd\tr0, r0, r7\n.BB0_556:\n\tadd\tr7, r6, r8\n\tadd\tr7, r11, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tadd\t32, r7, r7\n\tsub!\tr7, r5, r8\n\tjump.lt\t@.BB0_556\n.BB0_557:\n\tadd\tr5, r6, r6\n\tst.1\tr6, r0\n\tadd\tr5, r3, r6\n\tadd\t40, r6, r7\n\tadd\t@CPI0_50[0], r0, r8\n\tst.1\tr7, r8\n\tadd\t41, r6, r6\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r7\n\tjump.eq\t@.BB0_560\n\tadd\tr0, r0, r7\n.BB0_559:\n\tadd\tr7, r6, r8\n\tadd\tr7, r4, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tadd\t32, r7, r7\n\tsub!\tr7, r2, r8\n\tjump.lt\t@.BB0_559\n.BB0_560:\n\tadd\tr2, r6, r4\n\tst.1\tr4, r0\n\tadd\tr2, r5, r2\n\tadd\t9, r2, r4\n\tst.1\tr3, r4\n\tadd\t72, r2, r2\n\tand\tstack-[19], r2, r2\n\tadd\tr2, r3, r9\n\tsub!\tr9, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_3[0], r9, r4\n\tjump.gt\t@.BB0_43\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_43\n\tst.1\t64, r9\n\tadd\t@CPI0_51[0], r0, r2\n\tst.1\tr9, r2\n\tadd\t4, r9, r2\n\tadd\tstack-[8], r0, r4\n\tst.1\tr2, r4\n\tadd\t68, r9, r5\n\tadd\tstack-[13], r0, r4\n\tld.1\tr4, r4\n\tst.1\tr5, r4\n\tadd\t100, r9, r5\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_565\n\tadd\tr0, r0, r6\n.BB0_564:\n\tadd\tr6, r5, r7\n\tadd\tr10, r6, r8\n\tld.1\tr8, r8\n\tst.1\tr7, r8\n\tadd\t32, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB0_564\n.BB0_565:\n\tadd\tr4, r5, r6\n\tst.1\tr6, r0\n\tadd\t31, r4, r4\n\tand\tstack-[19], r4, r4\n\tadd\tr4, r5, r4\n\tsub\tr4, r2, r2\n\tadd\t36, r9, r5\n\tst.1\tr5, r2\n\tld.1\tr3, r3\n\tst.1.inc\tr4, r3, r2\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB0_568\n\tadd\tr0, r0, r4\n.BB0_567:\n\tadd\tr4, r2, r5\n\tadd\tr4, r1, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_567\n.BB0_568:\n\tadd\t31, r3, r1\n\tand\tstack-[19], r1, r1\n\tadd\tr3, r2, r3\n\tst.1\tr3, r0\n\tsub\tr2, r9, r2\n\tadd\tr2, r1, r1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tsub.s!\t@CPI0_0[0], r9, r2\n\tadd\tr9, r0, stack-[16]\n\tadd\tr4, r0, r2\n\tadd.lt\tr9, r0, r2\n\tshl.s\t64, r2, r2\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tadd\t@CPI0_14[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t31, r3, r4\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tshr.s\t5, r3, r5\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_569\n\tsub!\tr5, r0, r2\n\tadd\tstack-[16], r0, r8\n\tjump.eq\t@.BB0_1085\n\tadd\tr0, r0, r2\n.BB0_575:\n\tshl.s\t5, r2, r6\n\tadd\tr8, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r2, r2\n\tsub!\tr2, r5, r6\n\tjump.lt\t@.BB0_575\n.BB0_1085:\n\tsub!\tr4, r0, r2\n\tjump.eq\t@.BB0_577\n\tshl.s\t5, r5, r2\n\tptr.add\tr1, r2, r1\n\tadd\tr8, r2, r2\n\tshl.s\t3, r4, r4\n\tld.1\tr2, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr2, r1\n.BB0_577:\n\tadd\t31, r3, r1\n\tand\t@CPI0_15[0], r1, r2\n\tadd\tr2, r8, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_3[0], r1, r4\n\tjump.gt\t@.BB0_43\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_43\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tld.1\tr8, r2\n\tsub.s!\t@CPI0_3[0], r2, r4\n\tjump.gt\t@.BB0_2\n\tadd\tr3, r8, r5\n\tadd\tr2, r8, r2\n\tadd\t31, r2, r3\n\tsub!\tr3, r5, r4\n\tadd\t@CPI0_16[0], r0, r8\n\tadd\tr0, r0, r4\n\tadd.ge\tr8, r0, r4\n\tand\t@CPI0_16[0], r3, r3\n\tand\t@CPI0_16[0], r5, r6\n\tsub!\tr3, r6, r7\n\tadd\tr0, r0, r7\n\tadd.lt\tr8, r0, r7\n\txor\tr3, r6, r3\n\tsub.s!\t@CPI0_16[0], r3, r3\n\tadd.ne\tr4, r0, r7\n\tsub!\tr7, r0, r3\n\tjump.ne\t@.BB0_2\n\tld.1.inc\tr2, r3, r4\n\tsub.s!\t@CPI0_3[0], r3, r2\n\tjump.gt\t@.BB0_43\n\tadd\t31, r3, r2\n\tand\tstack-[19], r2, r2\n\tadd\t63, r2, r2\n\tand\tstack-[19], r2, r2\n\tadd\tr2, r1, r2\n\tsub.s!\t@CPI0_3[0], r2, r6\n\tjump.gt\t@.BB0_43\n\tst.1\t64, r2\n\tst.1.inc\tr1, r3, r2\n\tadd\tr3, r4, r6\n\tsub!\tr6, r5, r5\n\tjump.gt\t@.BB0_2\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB0_588\n\tadd\tr0, r0, r5\n.BB0_587:\n\tadd\tr5, r2, r6\n\tadd\tr5, r4, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_587\n.BB0_588:\n\tadd\tr3, r2, r3\n\tst.1\tr3, r0\n\tld.1\t64, r7\n\tadd\t@CPI0_52[0], r0, r3\n\tst.1\tr7, r3\n\tadd\t4, r7, r3\n\tadd\t32, r0, r4\n\tst.1\tr3, r4\n\tld.1\tr1, r1\n\tadd\t36, r7, r3\n\tst.1\tr3, r1\n\tadd\t68, r7, r3\n\tsub!\tr1, r0, r4\n\tjump.eq\t@.BB0_591\n\tadd\tr0, r0, r4\n.BB0_590:\n\tadd\tr4, r3, r5\n\tadd\tr4, r2, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_590\n.BB0_591:\n\tadd\tr1, r3, r2\n\tst.1\tr2, r0\n\tadd\t31, r1, r1\n\tand\tstack-[19], r1, r1\n\tsub.s!\t@CPI0_0[0], r7, r2\n\tadd\t@CPI0_0[0], r0, r4\n\tadd\tr4, r0, r2\n\tadd.lt\tr7, r0, r2\n\tshl.s\t64, r2, r2\n\tadd\t68, r1, r1\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tadd\t@CPI0_14[0], r0, r2\n\tadd\tr7, r0, stack-[14]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tshr.s!\t5, r4, r5\n\tjump.eq\t@.BB0_1084\n\tadd\tr0, r0, r6\n.BB0_593:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_593\n.BB0_1084:\n\tand!\t31, r4, r6\n\tjump.eq\t@.BB0_595\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r7\n\tadd\tr9, r5, r5\n\tshl.s\t3, r6, r6\n\tld.1\tr5, r8\n\tshl\tr8, r6, r8\n\tshr\tr8, r6, r8\n\tld\tr7, r7\n\tsub\t256, r6, r6\n\tshr\tr7, r6, r7\n\tshl\tr7, r6, r6\n\tor\tr6, r8, r6\n\tst.1\tr5, r6\n.BB0_595:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_596\n\tadd\tstack-[24], r0, stack-[16]\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_3[0], r1, r4\n\tjump.gt\t@.BB0_43\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_43\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[10], r0, r1\n\tld.1\tr1, r1\n\tadd\tstack-[18], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB0_387\n\tshl.s\t5, r2, r2\n\tadd\tr2, r0, stack-[13]\n\tadd\tstack-[10], r2, r1\n\tadd\t32, r1, r1\n\tld.1\tr9, r2\n\tst.1\tr1, r2\n\tld.1\t64, r4\n\tadd\tr4, r0, stack-[14]\n\tadd\t@CPI0_47[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r2\n\tadd\tr3, r0, r2\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_48[0], r1, r1\n\tadd\t@CPI0_14[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\tstack-[16], r3, r4\n\tadd\tstack-[16], r0, r5\n\tadd.lt\tr3, r0, r5\n\tshr.s!\t5, r5, r4\n\tjump.eq\t@.BB0_1082\n\tadd\tr0, r0, r6\n.BB0_606:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB0_606\n.BB0_1082:\n\tand!\t31, r5, r5\n\tjump.eq\t@.BB0_608\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r6\n\tadd\tr9, r4, r4\n\tshl.s\t3, r5, r5\n\tld.1\tr4, r7\n\tshl\tr7, r5, r7\n\tshr\tr7, r5, r7\n\tld\tr6, r6\n\tsub\t256, r5, r5\n\tshr\tr6, r5, r6\n\tshl\tr6, r5, r5\n\tor\tr5, r7, r5\n\tst.1\tr4, r5\n.BB0_608:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_609\n\tadd\tstack-[16], r3, r2\n\tsub!\tr2, r3, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\tstack-[16], r1, r1\n\tshr.s!\t5, r3, r2\n\tjump.eq\t@.BB0_1080\n\tadd\tr0, r0, r4\n.BB0_618:\n\tshl.s\t5, r4, r5\n\tadd\tr9, r5, r6\n\tptr.add\tr1, r5, r5\n\tld\tr5, r5\n\tst.1\tr6, r5\n\tadd\t1, r4, r4\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB0_618\n.BB0_1080:\n\tand!\t31, r3, r4\n\tjump.eq\t@.BB0_620\n\tshl.s\t5, r2, r2\n\tptr.add\tr1, r2, r1\n\tadd\tr9, r2, r2\n\tshl.s\t3, r4, r4\n\tld.1\tr2, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr2, r1\n.BB0_620:\n\tadd\t31, r3, r1\n\tand\t@CPI0_15[0], r1, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_3[0], r1, r4\n\tjump.gt\t@.BB0_43\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_43\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tld.1\tr9, r2\n\tsub.s!\t@CPI0_3[0], r2, r4\n\tjump.gt\t@.BB0_2\n\tadd\tr3, r9, r4\n\tadd\tr2, r9, r2\n\tadd\t31, r2, r3\n\tsub!\tr3, r4, r5\n\tadd\t@CPI0_16[0], r0, r8\n\tadd\tr0, r0, r5\n\tadd.ge\tr8, r0, r5\n\tand\t@CPI0_16[0], r3, r3\n\tand\t@CPI0_16[0], r4, r6\n\tsub!\tr3, r6, r7\n\tadd\tr0, r0, r7\n\tadd.lt\tr8, r0, r7\n\txor\tr3, r6, r3\n\tsub.s!\t@CPI0_16[0], r3, r3\n\tadd.ne\tr5, r0, r7\n\tsub!\tr7, r0, r3\n\tjump.ne\t@.BB0_2\n\tld.1.inc\tr2, r2, r3\n\tsub.s!\t@CPI0_3[0], r2, r5\n\tjump.gt\t@.BB0_43\n\tadd\t31, r2, r5\n\tand\tstack-[19], r5, r5\n\tadd\t63, r5, r5\n\tand\tstack-[19], r5, r5\n\tadd\tr5, r1, r5\n\tsub.s!\t@CPI0_3[0], r5, r6\n\tjump.gt\t@.BB0_43\n\tst.1\t64, r5\n\tst.1.inc\tr1, r2, r5\n\tadd\tr2, r3, r6\n\tsub!\tr6, r4, r4\n\tjump.gt\t@.BB0_2\n\tsub!\tr2, r0, r4\n\tjump.eq\t@.BB0_614\n\tadd\tr0, r0, r4\n.BB0_630:\n\tadd\tr4, r5, r6\n\tadd\tr4, r3, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r4, r4\n\tsub!\tr4, r2, r6\n\tjump.lt\t@.BB0_630\n.BB0_614:\n\tadd\tr2, r5, r2\n\tst.1\tr2, r0\n\tadd\tstack-[15], r0, r2\n\tld.1\tr2, r2\n\tadd\tstack-[18], r0, r3\n\tsub!\tr2, r3, r2\n\tjump.le\t@.BB0_387\n\tadd\tstack-[15], r0, r4\n\tadd\tstack-[13], r4, r2\n\tadd\t32, r2, r2\n\tst.1\tr2, r1\n\tld.1\tr4, r1\n\tsub!\tr1, r3, r1\n\tjump.gt\t@.BB0_479\n\tjump\t@.BB0_387\n.BB0_412:\n\tadd\tstack-[10], r0, r4\n.BB0_413:\n\tld.1\t64, r3\n\tadd\t32, r3, r1\n\tadd\t32, r0, r2\n\tadd\tr2, r0, stack-[14]\n\tst.1\tr1, r2\n\tadd\t96, r3, r1\n\tadd\t64, r3, r2\n\tadd\tr4, r0, r7\n\tld.1\tr4, r4\n\tst.1\tr2, r4\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB0_416\n\tadd\tr0, r0, r5\n.BB0_415:\n\tadd\t32, r7, r7\n\tld.1\tr7, r6\n\tst.1.inc\tr1, r6, r1\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_415\n.BB0_416:\n\tsub\tr1, r3, r1\n\tsub.s\t32, r1, r4\n\tst.1\tr3, r4\n\tadd\t31, r1, r1\n\tand\tstack-[19], r1, r4\n\tadd\tr4, r3, r1\n\tsub!\tr1, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_3[0], r1, r5\n\tjump.gt\t@.BB0_43\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_43\n\tst.1\t64, r1\n\tld.1\tr3, r4\n\tsub.s!\t63, r4, r3\n\tjump.le\t@.BB0_419\n\tsub.s!\t64, r4, r3\n\tjump.eq\t@.BB0_425\n\tand!\t31, r4, r6\n\tadd\t0, r0, r7\n\tadd.eq\t32, r0, r7\n\tor\tr7, r6, r4\n\tadd\tr4, r1, r4\n\tadd\tr4, r3, r5\n\tsub!\tr4, r5, r8\n\tjump.ge\t@.BB0_424\n\tadd\tr6, r2, r2\n\tadd\tr2, r7, r2\n.BB0_423:\n\tld.1.inc\tr2, r6, r2\n\tst.1.inc\tr4, r6, r4\n\tsub!\tr4, r5, r6\n\tjump.lt\t@.BB0_423\n.BB0_424:\n\tst.1.inc\tr1, r3, r2\n\tadd\t31, r4, r3\n\tand\tstack-[19], r3, r3\n\tjump\t@.BB0_426\n.BB0_425:\n\tst.1.inc\tr1, r0, r2\n\tadd\tr2, r0, r3\n.BB0_426:\n\tst.1\t64, r3\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_28[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r3\n\tld.1\t64, r1\n\tadd\tstack-[14], r0, r2\n\tst.1.inc\tr1, r2, r2\n\tst.1\tr2, r3\n\tsub.s!\t@CPI0_19[0], r1, r3\n\tjump.gt\t@.BB0_43\n\tadd\t64, r1, r3\n\tst.1\t64, r3\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_28[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\t18, r0, r2\n\tadd\tr2, r0, stack-[18]\n\tsload\tr2, r2\n\tadd\tstack-[23], r0, r12\n\tsub!\tr2, r12, r2\n\tjump.le\t@.BB0_387\n\tld\tr1, r1\n\tadd\tstack-[18], r0, r2\n\tst.1\t0, r2\n\tadd\t@CPI0_55[0], r12, r2\n\tsstore\tr2, r1\n\tld.1\t64, r6\n\tsub.s!\t@CPI0_19[0], r6, r1\n\tjump.gt\t@.BB0_43\n\tadd\t64, r6, r1\n\tst.1\t64, r1\n\tadd\t32, r6, r5\n\tadd\t@CPI0_56[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[10]\n\tst.1\tr6, r1\n\tld.1\t64, r7\n\tadd\tstack-[15], r0, r1\n\tld.1.inc\tr1, r8, r1\n\tsub!\tr8, r0, r2\n\tjump.eq\t@.BB0_434\n\tadd\tr0, r0, r2\n.BB0_439:\n\tadd\tr7, r0, r3\n\tshl.s\t5, r2, r4\n\tadd\tr1, r4, r9\n\tadd\t32, r3, r4\n\tld.1\tr6, r7\n\tld.1\tr9, r6\n\tsub.s\t1, r8, r8\n\tsub!\tr2, r8, r8\n\tjump.ne\t@.BB0_450\n\tsub!\tr7, r0, r8\n\tjump.eq\t@.BB0_444\n\tadd\tr0, r0, r8\n.BB0_443:\n\tadd\tr8, r4, r9\n\tadd\tr8, r5, r10\n\tld.1\tr10, r10\n\tst.1\tr9, r10\n\tadd\t32, r8, r8\n\tsub!\tr8, r7, r9\n\tjump.lt\t@.BB0_443\n.BB0_444:\n\tadd\tr7, r4, r5\n\tst.1\tr5, r0\n\tadd\tr7, r3, r5\n\tadd\t32, r5, r7\n\tadd\t@CPI0_57[0], r0, r8\n\tst.1\tr7, r8\n\tadd\t33, r5, r7\n\tld.1.inc\tr6, r6, r8\n\tsub!\tr6, r0, r9\n\tjump.eq\t@.BB0_447\n\tadd\tr0, r0, r9\n.BB0_446:\n\tadd\tr9, r7, r10\n\tadd\tr8, r9, r11\n\tld.1\tr11, r11\n\tst.1\tr10, r11\n\tadd\t32, r9, r9\n\tsub!\tr9, r6, r10\n\tjump.lt\t@.BB0_446\n.BB0_447:\n\tadd\tr6, r7, r7\n\tst.1\tr7, r0\n\tadd\tr6, r5, r5\n\tadd\t33, r5, r6\n\tadd\t@CPI0_57[0], r0, r7\n\tst.1\tr6, r7\n\tsub\tr5, r3, r5\n\tadd\t2, r5, r6\n\tst.1\tr3, r6\n\tadd\t65, r5, r5\n\tjump\t@.BB0_448\n.BB0_450:\n\tsub!\tr7, r0, r8\n\tjump.eq\t@.BB0_453\n\tadd\tr0, r0, r8\n.BB0_452:\n\tadd\tr8, r4, r9\n\tadd\tr8, r5, r10\n\tld.1\tr10, r10\n\tst.1\tr9, r10\n\tadd\t32, r8, r8\n\tsub!\tr8, r7, r9\n\tjump.lt\t@.BB0_452\n.BB0_453:\n\tadd\tr7, r4, r5\n\tst.1\tr5, r0\n\tadd\tr7, r3, r5\n\tadd\t32, r5, r7\n\tadd\t@CPI0_57[0], r0, r8\n\tst.1\tr7, r8\n\tadd\t33, r5, r7\n\tld.1.inc\tr6, r6, r8\n\tsub!\tr6, r0, r9\n\tjump.eq\t@.BB0_456\n\tadd\tr0, r0, r9\n.BB0_455:\n\tadd\tr9, r7, r10\n\tadd\tr8, r9, r11\n\tld.1\tr11, r11\n\tst.1\tr10, r11\n\tadd\t32, r9, r9\n\tsub!\tr9, r6, r10\n\tjump.lt\t@.BB0_455\n.BB0_456:\n\tadd\tr6, r7, r7\n\tst.1\tr7, r0\n\tadd\tr6, r5, r5\n\tadd\t33, r5, r6\n\tadd\t@CPI0_58[0], r0, r7\n\tst.1\tr6, r7\n\tsub\tr5, r3, r5\n\tadd\t3, r5, r6\n\tst.1\tr3, r6\n\tadd\t66, r5, r5\n.BB0_448:\n\tand\tstack-[19], r5, r5\n\tadd\tr5, r3, r7\n\tsub!\tr7, r5, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_3[0], r7, r6\n\tjump.gt\t@.BB0_43\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_43\n\tst.1\t64, r7\n\tadd\t1, r2, r2\n\tadd\tstack-[15], r0, r5\n\tld.1\tr5, r8\n\tsub!\tr2, r8, r5\n\tadd\tr4, r0, r5\n\tadd\tr3, r0, r6\n\tjump.lt\t@.BB0_439\n\tadd\tr4, r0, r5\n\tadd\tr3, r0, r6\n.BB0_434:\n\tadd\t32, r7, r8\n\tld.1\tr6, r1\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB0_437\n\tadd\tr0, r0, r2\n.BB0_436:\n\tadd\tr2, r8, r3\n\tadd\tr2, r5, r4\n\tld.1\tr4, r4\n\tst.1\tr3, r4\n\tadd\t32, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_436\n.BB0_437:\n\tadd\tr1, r8, r2\n\tadd\t@CPI0_59[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t1, r1, r2\n\tst.1\tr7, r2\n\tand\tstack-[19], r1, r1\n\tadd\tr7, r1, r1\n\tadd\t64, r1, r1\n\tsub.s!\t@CPI0_3[0], r1, r2\n\tjump.gt\t@.BB0_43\n\tsub!\tr1, r7, r2\n\tjump.lt\t@.BB0_43\n\tst.1\t64, r1\n\tadd\t19, r0, r2\n\tsload\tr2, r1\n\tsub!\tr1, r12, r1\n\tjump.le\t@.BB0_387\n\tadd\tr2, r0, stack-[9]\n\tst.1\t0, r2\n\tadd\t@CPI0_60[0], r12, r4\n\tld.1\tr7, r5\n\tsub.s!\t@CPI0_3[0], r5, r1\n\tjump.gt\t@.BB0_43\n\tsload\tr4, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_8\n\tsub.s!\t32, r3, r1\n\tadd\tr12, r0, stack-[13]\n\tadd\tr7, r0, stack-[15]\n\tadd\tr4, r0, stack-[12]\n\tadd\tr5, r0, stack-[11]\n\tjump.lt\t@.BB0_465\n\tadd\tr3, r0, stack-[5]\n\tadd\tr8, r0, stack-[6]\n\tst.1\t0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[11], r0, r5\n\tadd\t31, r5, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r5, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[5], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[13], r0, r12\n\tadd\tstack-[12], r0, r4\n\tadd\tstack-[6], r0, r8\n\tjump.ge\t@.BB0_465\n.BB0_464:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_464\n.BB0_465:\n\tsub.s!\t32, r5, r1\n\tjump.lt\t@.BB0_474\n\tst.1\t0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[11], r0, r7\n\tand!\tstack-[19], r7, r3\n\tld\tr1, r1\n\tjump.eq\t@.BB0_468\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n\tadd\tstack-[13], r0, r12\n\tadd\tstack-[15], r0, r6\n.BB0_470:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_470\n\tsub!\tr3, r7, r3\n\tjump.ge\t@.BB0_473\n\tjump\t@.BB0_472\n.BB0_474:\n\tsub!\tr5, r0, r1\n\tjump.eq\t@.BB0_475\n\tld.1\tr8, r1\n\tjump\t@.BB0_477\n.BB0_475:\n\tadd\tr0, r0, r1\n.BB0_477:\n\tshl.s\t3, r5, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r5, r2\n\tor\tr1, r2, r1\n\tjump\t@.BB0_478\n.BB0_468:\n\tadd\t32, r0, r2\n\tadd\tstack-[13], r0, r12\n\tadd\tstack-[15], r0, r6\n\tsub!\tr3, r7, r3\n\tjump.ge\t@.BB0_473\n.BB0_472:\n\tshl.s\t3, r7, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tr2, r6, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n\tjump\t@.BB0_473\n.BB0_345:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1070\n\tadd\tr0, r0, r6\n.BB0_347:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_347\n.BB0_1070:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_31\n.BB0_30:\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_31:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_736:\n\tshl.s\t5, r5, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_22[0], r2, r2\n\tld.1\t64, r3\n\tadd\tr3, r2, r2\n\tadd\tr3, r0, stack-[12]\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI0_3[0], r2, r4\n\tjump.gt\t@.BB0_43\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_43\n\tst.1\t64, r2\n\tadd\tstack-[12], r0, r2\n\tst.1.inc\tr2, r5, r2\n\tadd\tr2, r0, stack-[11]\n\tst.1\t0, r1\n\tsub!\tr5, r0, r1\n\tjump.eq\t@.BB0_751\n\tadd\t@CPI0_71[0], r0, r6\n\tadd\tr0, r0, r7\n\tadd\tstack-[12], r0, r8\n\tadd\tr5, r0, stack-[10]\n.BB0_740:\n\tsload\tr6, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r3\n\tand\t127, r3, r4\n\tadd.ne\tr3, r0, r4\n\tsub.s!\t31, r4, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\txor\tr1, r3, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_8\n\tld.1\t64, r9\n\tst.1.inc\tr9, r4, r3\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_744\n\tadd\tr3, r0, stack-[13]\n\tadd\tr4, r0, stack-[16]\n\tadd\tr9, r0, stack-[14]\n\tadd\tr8, r0, stack-[17]\n\tadd\tr7, r0, stack-[18]\n\tadd\tr6, r0, stack-[15]\n\tst.1\t0, r6\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[16], r0, r10\n\tsub!\tr10, r0, r2\n\tadd\tstack-[10], r0, r5\n\tadd\tstack-[18], r0, r7\n\tadd\tstack-[17], r0, r8\n\tjump.eq\t@.BB0_747\n\tld\tr1, r2\n\tadd\tr0, r0, r1\n\tadd\tstack-[15], r0, r6\n\tadd\tstack-[14], r0, r9\n\tadd\tstack-[13], r0, r11\n.BB0_749:\n\tadd\tr11, r1, r3\n\tsload\tr2, r4\n\tst.1\tr3, r4\n\tadd\t1, r2, r2\n\tadd\t32, r1, r1\n\tsub!\tr1, r10, r3\n\tjump.lt\t@.BB0_749\n\tjump\t@.BB0_742\n.BB0_744:\n\tsub.s\t256, r0, r2\n\tand\tr1, r2, r1\n\tst.1\tr3, r1\n\tsub!\tr4, r0, r1\n\tadd\t32, r0, r1\n\tadd.eq\t0, r0, r1\n\tjump\t@.BB0_742\n.BB0_747:\n\tadd\tr0, r0, r1\n\tadd\tstack-[15], r0, r6\n\tadd\tstack-[14], r0, r9\n.BB0_742:\n\tadd\t63, r1, r1\n\tand\tstack-[19], r1, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_3[0], r1, r3\n\tjump.gt\t@.BB0_43\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_43\n\tadd\t32, r8, r8\n\tst.1\t64, r1\n\tst.1\tr8, r9\n\tadd\t1, r6, r6\n\tadd\t1, r7, r7\n\tsub!\tr7, r5, r1\n\tjump.lt\t@.BB0_740\n.BB0_751:\n\tld.1\t64, r7\n\tsub.s!\t@CPI0_19[0], r7, r1\n\tjump.gt\t@.BB0_43\n\tadd\t64, r7, r1\n\tst.1\t64, r1\n\tadd\t32, r7, r6\n\tadd\t@CPI0_56[0], r0, r1\n\tst.1\tr6, r1\n\tadd\t1, r0, r1\n\tst.1\tr7, r1\n\tld.1\t64, r1\n\tadd\tstack-[12], r0, r2\n\tld.1\tr2, r8\n\tsub!\tr8, r0, r2\n\tjump.ne\t@.BB0_754\n\tadd\tr6, r0, r2\n\tadd\tr7, r0, r3\n\tjump\t@.BB0_756\n.BB0_754:\n\tadd\t@CPI0_66[0], r0, r4\n\tadd\tr0, r0, r5\n\tjump\t@.BB0_761\n.BB0_762:\n\tst.1\t64, r1\n\tadd\t1, r5, r5\n\tadd\tstack-[12], r0, r6\n\tld.1\tr6, r8\n\tsub!\tr5, r8, r6\n\tadd\tr2, r0, r6\n\tadd\tr3, r0, r7\n\tjump.ge\t@.BB0_755\n.BB0_761:\n\tadd\tr1, r0, r3\n\tshl.s\t5, r5, r1\n\tadd\tstack-[11], r1, r9\n\tadd\t32, r3, r2\n\tld.1\tr7, r1\n\tld.1\tr9, r7\n\tsub.s\t1, r8, r8\n\tsub!\tr5, r8, r8\n\tjump.ne\t@.BB0_771\n\tsub!\tr1, r0, r8\n\tjump.eq\t@.BB0_766\n\tadd\tr0, r0, r8\n.BB0_765:\n\tadd\tr8, r2, r9\n\tadd\tr8, r6, r10\n\tld.1\tr10, r10\n\tst.1\tr9, r10\n\tadd\t32, r8, r8\n\tsub!\tr8, r1, r9\n\tjump.lt\t@.BB0_765\n.BB0_766:\n\tadd\tr1, r2, r6\n\tst.1\tr6, r0\n\tld.1.inc\tr7, r7, r8\n\tsub!\tr7, r0, r9\n\tjump.eq\t@.BB0_769\n\tadd\tr0, r0, r9\n.BB0_768:\n\tadd\tr9, r6, r10\n\tadd\tr8, r9, r11\n\tld.1\tr11, r11\n\tst.1\tr10, r11\n\tadd\t32, r9, r9\n\tsub!\tr9, r7, r10\n\tjump.lt\t@.BB0_768\n.BB0_769:\n\tadd\tr7, r6, r6\n\tst.1\tr6, r0\n\tadd\tr7, r1, r1\n\tst.1\tr3, r1\n\tadd\t63, r1, r1\n\tand\tstack-[19], r1, r6\n\tadd\tr6, r3, r1\n\tsub!\tr1, r6, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI0_3[0], r1, r7\n\tjump.gt\t@.BB0_43\n\tand!\t1, r6, r6\n\tjump.eq\t@.BB0_762\n\tjump\t@.BB0_43\n.BB0_771:\n\tsub!\tr1, r0, r8\n\tjump.eq\t@.BB0_774\n\tadd\tr0, r0, r8\n.BB0_773:\n\tadd\tr8, r2, r9\n\tadd\tr8, r6, r10\n\tld.1\tr10, r10\n\tst.1\tr9, r10\n\tadd\t32, r8, r8\n\tsub!\tr8, r1, r9\n\tjump.lt\t@.BB0_773\n.BB0_774:\n\tadd\tr1, r2, r6\n\tst.1\tr6, r0\n\tadd\tr1, r3, r1\n\tadd\t32, r1, r8\n\tld.1.inc\tr7, r6, r7\n\tsub!\tr6, r0, r9\n\tjump.eq\t@.BB0_777\n\tadd\tr0, r0, r9\n.BB0_776:\n\tadd\tr9, r8, r10\n\tadd\tr7, r9, r11\n\tld.1\tr11, r11\n\tst.1\tr10, r11\n\tadd\t32, r9, r9\n\tsub!\tr9, r6, r10\n\tjump.lt\t@.BB0_776\n.BB0_777:\n\tadd\tr6, r8, r7\n\tst.1\tr7, r0\n\tadd\tr6, r1, r1\n\tadd\t32, r1, r6\n\tst.1\tr6, r4\n\tsub\tr1, r3, r1\n\tadd\t1, r1, r6\n\tst.1\tr3, r6\n\tand\tstack-[19], r1, r1\n\tadd\tr3, r1, r1\n\tadd\t64, r1, r1\n\tsub.s!\t@CPI0_3[0], r1, r6\n\tjump.gt\t@.BB0_43\n\tsub!\tr1, r3, r6\n\tjump.ge\t@.BB0_762\n\tjump\t@.BB0_43\n.BB0_755:\n.BB0_756:\n\tadd\t32, r1, r4\n\tld.1\tr3, r3\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB0_759\n\tadd\tr0, r0, r5\n.BB0_758:\n\tadd\tr5, r4, r6\n\tadd\tr5, r2, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_758\n.BB0_759:\n\tadd\tr3, r4, r2\n\tadd\t@CPI0_59[0], r0, r5\n\tst.1\tr2, r5\n\tadd\t1, r3, r2\n\tst.1\tr1, r2\n\tand\tstack-[19], r3, r2\n\tadd\tr1, r2, r2\n\tadd\t64, r2, r2\n\tadd\tr2, r0, stack-[18]\n\tsub.s!\t@CPI0_3[0], r2, r2\n\tjump.gt\t@.BB0_43\n\tsub!\tstack-[18], r1, r2\n\tjump.lt\t@.BB0_43\n\tadd\tstack-[18], r0, r2\n\tst.1\t64, r2\n\tld.1\tr1, r2\n\tsub.s!\t@CPI0_3[0], r2, r3\n\tjump.gt\t@.BB0_43\n\tadd\t21, r0, r3\n\tadd\tr3, r0, stack-[17]\n\tsload\tr3, r5\n\tand!\t1, r5, r3\n\tshr.s\t1, r5, r6\n\tand\t127, r6, r3\n\tadd.ne\tr6, r0, r3\n\tsub.s!\t31, r3, r6\n\tadd\t0, r0, r6\n\tadd.gt\t1, r0, r6\n\txor\tr5, r6, r5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_8\n\tsub.s!\t32, r3, r5\n\tjump.lt\t@.BB0_785\n\tadd\t31, r2, r5\n\tshr.s\t5, r5, r5\n\tadd\t@CPI0_72[0], r5, r6\n\tadd\t@CPI0_72[0], r0, r5\n\tsub.s!\t32, r2, r7\n\tadd.ge\tr6, r0, r5\n\tadd\tstack-[17], r0, r6\n\tst.1\t0, r6\n\tadd\t31, r3, r3\n\tshr.s\t5, r3, r3\n\tadd\t@CPI0_72[0], r3, r3\n\tsub!\tr5, r3, r6\n\tjump.ge\t@.BB0_785\n.BB0_784:\n\tsstore\tr5, r0\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_784\n.BB0_785:\n\tsub.s!\t32, r2, r3\n\tjump.lt\t@.BB0_793\n\tadd\tstack-[17], r0, r3\n\tst.1\t0, r3\n\tand!\tstack-[19], r2, r5\n\tjump.ne\t@.BB0_788\n\tadd\t32, r0, r4\n\tadd\t@CPI0_72[0], r0, r3\n\tjump\t@.BB0_790\n.BB0_50:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB0_32\n\tadd\tr0, r0, r5\n.BB0_52:\n\tadd\tr5, r2, r6\n\tadd\tr5, r4, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_52\n.BB0_32:\n\tadd\tr3, r2, r3\n\tst.1\tr3, r0\n\tld.1\t64, r3\n\tadd\tr3, r0, stack-[16]\n\tadd\t32, r3, r5\n\tadd\t32, r0, stack-[28]\n\tld.1\tr1, r6\n\tsub!\tr6, r0, r1\n\tjump.eq\t@.BB0_35\n\tadd\tr0, r0, r1\n.BB0_34:\n\tadd\tr1, r5, r3\n\tadd\tr1, r2, r4\n\tld.1\tr4, r4\n\tst.1\tr3, r4\n\tadd\t32, r1, r1\n\tsub!\tr1, r6, r3\n\tjump.lt\t@.BB0_34\n.BB0_35:\n\tadd\tr5, r0, stack-[13]\n\tadd\tr6, r0, stack-[15]\n\tadd\tr6, r5, r1\n\tst.1\tr1, r0\n\tadd\tstack-[19], r0, r1\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r3\n\tand\t127, r3, r4\n\tadd.ne\tr3, r0, r4\n\tadd\tr4, r0, stack-[14]\n\tsub.s!\t31, r4, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\txor\tr1, r3, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_8\n\tadd\tstack-[15], r0, r4\n\tadd\tstack-[16], r4, stack-[12]\n\tadd\t1, r0, stack-[27]\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_58\n\tadd\tstack-[19], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[14], r0, r6\n\tsub!\tr6, r0, r2\n\tjump.eq\t@.BB0_53\n\tadd\tstack-[12], r0, r2\n\tadd\t32, r2, r2\n\tld\tr1, r1\n\tadd\tr0, r0, r3\n.BB0_62:\n\tadd\tr2, r3, r4\n\tsload\tr1, r5\n\tst.1\tr4, r5\n\tadd\t1, r1, r1\n\tadd\t32, r3, r3\n\tsub!\tr3, r6, r4\n\tjump.lt\t@.BB0_62\n\tjump\t@.BB0_53\n.BB0_698:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1074\n\tadd\tr0, r0, r6\n.BB0_700:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_700\n.BB0_1074:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_31\n\tjump\t@.BB0_30\n.BB0_641:\n\tld.1\t64, r2\n\tsub!\tr5, r0, r6\n\tjump.eq\t@.BB0_1079\n\tadd\tr0, r0, r6\n.BB0_643:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_643\n.BB0_1079:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_31\n\tjump\t@.BB0_30\n.BB0_660:\n\tld.1\t64, r2\n\tsub!\tr5, r0, r6\n\tjump.eq\t@.BB0_1077\n\tadd\tr0, r0, r6\n.BB0_662:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_662\n.BB0_1077:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_31\n\tjump\t@.BB0_30\n.BB0_712:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1072\n\tadd\tr0, r0, r6\n.BB0_714:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_714\n.BB0_1072:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_31\n\tjump\t@.BB0_30\n.BB0_569:\n\tld.1\t64, r2\n\tsub!\tr5, r0, r6\n\tjump.eq\t@.BB0_1086\n\tadd\tr0, r0, r6\n.BB0_571:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_571\n.BB0_1086:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_31\n\tjump\t@.BB0_30\n.BB0_596:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1083\n\tadd\tr0, r0, r6\n.BB0_598:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_598\n.BB0_1083:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_31\n\tjump\t@.BB0_30\n.BB0_609:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1081\n\tadd\tr0, r0, r6\n.BB0_611:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_611\n.BB0_1081:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_31\n\tjump\t@.BB0_30\n.BB0_516:\n\tld.1\t64, r2\n\tsub!\tr5, r0, r6\n\tjump.eq\t@.BB0_1090\n\tadd\tr0, r0, r6\n.BB0_518:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_518\n.BB0_1090:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_31\n\tjump\t@.BB0_30\n.BB0_535:\n\tld.1\t64, r2\n\tsub!\tr5, r0, r6\n\tjump.eq\t@.BB0_1088\n\tadd\tr0, r0, r6\n.BB0_537:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_537\n.BB0_1088:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_31\n\tjump\t@.BB0_30\n.BB0_793:\n\tsub!\tr2, r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_795\n\tshl.s\t3, r2, r1\n\tsub.s\t1, r0, r3\n\tshr\tr3, r1, r1\n\txor\tr1, r3, r1\n\tld.1\tr4, r3\n\tand\tr3, r1, r1\n\tshl.s\t1, r2, r2\n\tor\tr1, r2, r1\n\tjump\t@.BB0_795\n.BB0_58:\n\tsub.s\t256, r0, r2\n\tand\tr1, r2, r1\n\tadd\tstack-[12], r0, r2\n\tadd\t32, r2, r2\n\tst.1\tr2, r1\n\tadd\tstack-[14], r0, r6\n.BB0_53:\n\tadd\tstack-[15], r6, r1\n\tadd\tstack-[17], r0, stack-[26]\n\tadd\tstack-[16], r0, r3\n\tst.1\tr3, r1\n\tadd\t63, r1, r1\n\tand\tstack-[17], r1, r1\n\tadd\tr1, r3, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tadd\tr2, r0, stack-[19]\n\tsub.s!\t@CPI0_3[0], r2, r2\n\tjump.gt\t@.BB0_43\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_43\n\tadd\tstack-[19], r0, r3\n\tst.1\t64, r3\n\tadd\t@CPI0_17[0], r0, r1\n\tst.1\tr3, r1\n\tadd\t36, r0, stack-[25]\n\tadd\t4, r3, r1\n\tadd\t32, r0, r2\n\tadd\tr2, r0, stack-[15]\n\tst.1\tr1, r2\n\tadd\tstack-[16], r0, r1\n\tld.1\tr1, r1\n\tadd\t36, r3, r2\n\tst.1\tr2, r1\n\tadd\t68, r3, r2\n\tsub!\tr1, r0, r3\n\tadd\tstack-[13], r0, r6\n\tjump.eq\t@.BB0_63\n\tadd\tr0, r0, r3\n.BB0_57:\n\tadd\tr3, r2, r4\n\tadd\tr3, r6, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB0_57\n.BB0_63:\n\tadd\tr1, r2, r2\n\tst.1\tr2, r0\n\tadd\t31, r1, r1\n\tand\tstack-[17], r1, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tadd\tstack-[19], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr2, r0, r3\n\tadd.lt\tr4, r0, r3\n\tshl.s\t64, r3, r3\n\tadd\t68, r1, r1\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r3, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tadd\t@CPI0_14[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t31, r3, r4\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tshr.s\t5, r3, r5\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_64\n\tsub!\tr5, r0, r2\n\tadd\tstack-[19], r0, r8\n\tjump.eq\t@.BB0_1118\n\tadd\tr0, r0, r2\n.BB0_71:\n\tshl.s\t5, r2, r6\n\tadd\tr8, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r2, r2\n\tsub!\tr2, r5, r6\n\tjump.lt\t@.BB0_71\n.BB0_1118:\n\tsub!\tr4, r0, r2\n\tjump.eq\t@.BB0_73\n\tshl.s\t5, r5, r2\n\tptr.add\tr1, r2, r1\n\tadd\tstack-[19], r2, r2\n\tshl.s\t3, r4, r4\n\tld.1\tr2, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr2, r1\n.BB0_73:\n\tadd\t31, r3, r1\n\tand\t@CPI0_15[0], r1, r1\n\tadd\tstack-[19], r1, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tadd\tr2, r0, stack-[16]\n\tsub.s!\t@CPI0_3[0], r2, r2\n\tjump.gt\t@.BB0_43\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_43\n\tadd\tstack-[16], r0, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[19], r0, r1\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_3[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[19], r3, r3\n\tadd\tstack-[19], r1, r1\n\tadd\t31, r1, r2\n\tadd\t@CPI0_16[0], r0, r4\n\tsub!\tr2, r3, r5\n\tadd\tr0, r0, r5\n\tadd.ge\tr4, r0, r5\n\tand\t@CPI0_16[0], r2, r2\n\tand\t@CPI0_16[0], r3, r6\n\tsub!\tr2, r6, r7\n\tadd.ge\tr0, r0, r4\n\txor\tr2, r6, r2\n\tsub.s!\t@CPI0_16[0], r2, r2\n\tadd.ne\tr5, r0, r4\n\tsub!\tr4, r0, r2\n\tjump.ne\t@.BB0_2\n\tld.1.inc\tr1, r1, r2\n\tsub.s!\t@CPI0_3[0], r1, r4\n\tjump.gt\t@.BB0_43\n\tadd\t31, r1, r4\n\tand\tstack-[17], r4, r4\n\tadd\t63, r4, r4\n\tand\tstack-[17], r4, r4\n\tadd\tstack-[16], r4, r4\n\tsub.s!\t@CPI0_3[0], r4, r5\n\tjump.gt\t@.BB0_43\n\tst.1\t64, r4\n\tadd\tstack-[16], r0, r4\n\tst.1.inc\tr4, r1, r4\n\tadd\tr4, r0, stack-[19]\n\tadd\tr1, r2, r4\n\tsub!\tr4, r3, r3\n\tjump.gt\t@.BB0_2\n\tsub!\tr1, r0, r3\n\tadd\tstack-[19], r0, r6\n\tjump.eq\t@.BB0_68\n\tadd\tr0, r0, r3\n.BB0_83:\n\tadd\tr3, r6, r4\n\tadd\tr3, r2, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB0_83\n.BB0_68:\n\tadd\tr1, r6, r1\n\tst.1\tr1, r0\n\tadd\tstack-[16], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tjump.gt\t@.BB0_43\n\tadd\t15, r0, r1\n\tadd\tr1, r0, stack-[8]\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tadd\tr3, r0, stack-[13]\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_8\n\tadd\tstack-[13], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_89\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[14], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[13], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_89\n.BB0_90:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_90\n.BB0_89:\n\tadd\tstack-[14], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_114\n\tadd\tstack-[8], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[14], r0, r3\n\tand!\tstack-[17], r3, r3\n\tld\tr1, r1\n\tjump.ne\t@.BB0_109\n\tadd\t32, r0, r2\n\tjump\t@.BB0_111\n.BB0_788:\n\tadd\t@CPI0_72[0], r0, r3\n\tadd\t32, r0, r4\n\tadd\tr0, r0, r6\n.BB0_789:\n\tadd\tr4, r1, r7\n\tld.1\tr7, r7\n\tsstore\tr3, r7\n\tadd\t32, r4, r4\n\tadd\t1, r3, r3\n\tadd\t32, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_789\n.BB0_790:\n\tsub!\tr5, r2, r5\n\tjump.ge\t@.BB0_792\n\tshl.s\t3, r2, r5\n\tand\t248, r5, r5\n\tsub.s\t1, r0, r6\n\tshr\tr6, r5, r5\n\txor\tr5, r6, r5\n\tadd\tr4, r1, r1\n\tld.1\tr1, r1\n\tand\tr1, r5, r1\n\tsstore\tr3, r1\n.BB0_792:\n\tshl.s\t1, r2, r1\n\tor\t1, r1, r1\n.BB0_795:\n\tadd\tstack-[17], r0, r2\n\tsstore\tr2, r1\n\tadd\t@CPI0_12[0], r0, r1\n\tadd\tstack-[18], r0, r4\n\tst.1\tr4, r1\n\tadd\tstack-[24], r0, stack-[16]\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t@CPI0_14[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[18], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\tstack-[16], r3, r4\n\tadd\tstack-[16], r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB0_1110\n\tadd\tr0, r0, r6\n.BB0_797:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_797\n.BB0_1110:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_799\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tstack-[18], r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB0_799:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1011\n\tadd\tstack-[16], r3, r2\n\tsub!\tr2, r3, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\tstack-[16], r1, r2\n\tand\t31, r3, r1\n\tshr.s!\t5, r3, r4\n\tadd\tstack-[18], r0, r8\n\tjump.eq\t@.BB0_1108\n\tadd\tr0, r0, r5\n.BB0_1031:\n\tshl.s\t5, r5, r6\n\tadd\tr8, r6, r7\n\tptr.add\tr2, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_1031\n.BB0_1108:\n\tsub!\tr1, r0, r5\n\tjump.eq\t@.BB0_1033\n\tshl.s\t5, r4, r4\n\tptr.add\tr2, r4, r2\n\tadd\tstack-[18], r4, r4\n\tshl.s\t3, r1, r1\n\tld.1\tr4, r5\n\tshl\tr5, r1, r5\n\tshr\tr5, r1, r5\n\tld\tr2, r2\n\tsub\t256, r1, r1\n\tshr\tr2, r1, r2\n\tshl\tr2, r1, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_1033:\n\tadd\t31, r3, r1\n\tand\t@CPI0_15[0], r1, r2\n\tadd\tstack-[18], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_3[0], r1, r4\n\tjump.gt\t@.BB0_43\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_43\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[18], r0, r2\n\tld.1\tr2, r2\n\tsub.s!\t@CPI0_3[0], r2, r4\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[18], r3, r5\n\tadd\tstack-[18], r2, r2\n\tadd\t31, r2, r3\n\tadd\t@CPI0_16[0], r0, r4\n\tsub!\tr3, r5, r6\n\tadd\tr0, r0, r6\n\tadd.ge\tr4, r0, r6\n\tand\t@CPI0_16[0], r3, r3\n\tand\t@CPI0_16[0], r5, r7\n\tsub!\tr3, r7, r8\n\tadd.ge\tr0, r0, r4\n\txor\tr3, r7, r3\n\tsub.s!\t@CPI0_16[0], r3, r3\n\tadd.ne\tr6, r0, r4\n\tsub!\tr4, r0, r3\n\tjump.ne\t@.BB0_2\n\tld.1.inc\tr2, r3, r4\n\tsub.s!\t@CPI0_3[0], r3, r2\n\tjump.gt\t@.BB0_43\n\tadd\t31, r3, r2\n\tand\tstack-[19], r2, r2\n\tadd\t63, r2, r2\n\tand\tstack-[19], r2, r2\n\tadd\tr2, r1, r2\n\tsub.s!\t@CPI0_3[0], r2, r6\n\tjump.gt\t@.BB0_43\n\tst.1\t64, r2\n\tst.1.inc\tr1, r3, r2\n\tadd\tr3, r4, r6\n\tsub!\tr6, r5, r5\n\tjump.gt\t@.BB0_2\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB0_1016\n\tadd\tr0, r0, r5\n.BB0_1043:\n\tadd\tr5, r2, r6\n\tadd\tr5, r4, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_1043\n.BB0_1016:\n\tadd\tr3, r2, r3\n\tst.1\tr3, r0\n\tld.1\t64, r3\n\tadd\tr3, r0, stack-[18]\n\tadd\t32, r3, r6\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB0_1019\n\tadd\tr0, r0, r3\n.BB0_1018:\n\tadd\tr3, r6, r4\n\tadd\tr3, r2, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB0_1018\n.BB0_1019:\n\tadd\tr6, r0, stack-[15]\n\tadd\tr1, r6, r2\n\tst.1\tr2, r0\n\tadd\t14, r0, r4\n\tsload\tr4, r3\n\tand!\t1, r3, r6\n\tshr.s\t1, r3, r5\n\tand\t127, r5, r2\n\tadd.ne\tr5, r0, r2\n\tsub.s!\t31, r2, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\txor\tr3, r5, r5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_8\n\tadd\tstack-[18], r1, r5\n\tsub!\tr6, r0, r6\n\tjump.eq\t@.BB0_1023\n\tst.1\t0, r4\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB0_1021\n\tadd\t@CPI0_73[0], r0, r3\n\tadd\t32, r5, r4\n\tadd\tr0, r0, r5\n.BB0_1026:\n\tadd\tr4, r5, r6\n\tsload\tr3, r7\n\tst.1\tr6, r7\n\tadd\t1, r3, r3\n\tadd\t32, r5, r5\n\tsub!\tr5, r2, r6\n\tjump.lt\t@.BB0_1026\n\tjump\t@.BB0_1021\n.BB0_1011:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1109\n\tadd\tr0, r0, r6\n.BB0_1013:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1013\n.BB0_1109:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_31\n\tjump\t@.BB0_30\n.BB0_419:\n\tadd\t@CPI0_27[0], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[7], r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_48[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_370:\n\tadd\tstack-[24], r0, stack-[11]\n\tsub!\tstack-[24], r1, r1\n\tjump.ge\t@.BB0_735\n\tadd\t12, r0, stack-[3]\n\tadd\t@CPI0_0[0], r0, r11\n\tadd\tstack-[11], r0, r6\n\tjump\t@.BB0_800\n.BB0_990:\n\tshl.s\t1, r8, r1\n\tor\t1, r1, r1\n\tadd\tstack-[16], r0, r4\n.BB0_995:\n\tsstore\tr4, r1\n\tadd\t1, r6, r6\n\tadd\tstack-[7], r0, r1\n\tsload\tr1, r1\n\tsub!\tr6, r1, r1\n\tjump.ge\t@.BB0_735\n.BB0_800:\n\tadd\tstack-[3], r0, r1\n\tsload\tr1, r3\n\tld.1\t64, r8\n\tadd\t@CPI0_61[0], r0, r1\n\tst.1\tr8, r1\n\tadd\t4, r8, r1\n\tadd\tstack-[8], r0, r2\n\tst.1\tr1, r2\n\tadd\t68, r8, r1\n\tadd\tstack-[18], r0, r4\n\tsload\tr4, r7\n\tst.1\tr1, r7\n\tst.1\t0, r4\n\tadd\t100, r8, r1\n\tshr.s\t24, r3, r3\n\tand\t@CPI0_31[0], r3, r2\n\tsub!\tr7, r0, r3\n\tjump.eq\t@.BB0_803\n\tadd\t@CPI0_55[0], r0, r3\n\tadd\tr0, r0, r4\n.BB0_802:\n\tsload\tr3, r5\n\tst.1.inc\tr1, r5, r1\n\tadd\t1, r3, r3\n\tadd\t1, r4, r4\n\tsub!\tr4, r7, r5\n\tjump.lt\t@.BB0_802\n.BB0_803:\n\tadd\t36, r8, r3\n\tst.1\tr3, r6\n\tcontext.gas_left\tr5\n\tsub.s!\t4, r2, r3\n\tadd\tr6, r0, stack-[6]\n\tadd\tr8, r0, stack-[17]\n\tadd\tr2, r0, stack-[5]\n\tjump.ne\t@.BB0_805\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB0_814\n.BB0_805:\n\tsub\tr1, r8, r1\n\tsub.s!\t@CPI0_0[0], r8, r3\n\tadd\tr11, r0, r3\n\tadd.lt\tr8, r0, r3\n\tshl.s\t64, r3, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr11, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r3, r1\n\tsub.s!\t@CPI0_0[0], r5, r3\n\tadd.ge\tr11, r0, r5\n\tshl.s\t192, r5, r3\n\tor\tr1, r3, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\tstack-[11], r3, r4\n\tadd\tstack-[11], r0, r5\n\tadd.lt\tr3, r0, r5\n\tshr.s!\t5, r5, r4\n\tjump.eq\t@.BB0_1105\n\tadd\tr0, r0, r6\n.BB0_807:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB0_807\n.BB0_1105:\n\tand!\t31, r5, r5\n\tjump.eq\t@.BB0_809\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r6\n\tadd\tr9, r4, r4\n\tshl.s\t3, r5, r5\n\tld.1\tr4, r7\n\tshl\tr7, r5, r7\n\tshr\tr7, r5, r7\n\tld\tr6, r6\n\tsub\t256, r5, r5\n\tshr\tr6, r5, r6\n\tshl\tr6, r5, r5\n\tor\tr5, r7, r5\n\tst.1\tr4, r5\n.BB0_809:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tadd\t@CPI0_0[0], r0, r11\n\tjump.eq\t@.BB0_810\n.BB0_814:\n\tadd\tstack-[11], r3, r1\n\tsub!\tr1, r3, r1\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[11], r0, r1\n\tptr.add\tstack[@ptr_return_data], r1, r1\n\tshr.s!\t5, r3, r2\n\tadd\tstack-[17], r0, r7\n\tjump.eq\t@.BB0_1103\n\tadd\tr0, r0, r4\n.BB0_889:\n\tshl.s\t5, r4, r5\n\tadd\tr7, r5, r6\n\tptr.add\tr1, r5, r5\n\tld\tr5, r5\n\tst.1\tr6, r5\n\tadd\t1, r4, r4\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB0_889\n.BB0_1103:\n\tand!\t31, r3, r4\n\tjump.eq\t@.BB0_891\n\tshl.s\t5, r2, r2\n\tptr.add\tr1, r2, r1\n\tadd\tr7, r2, r2\n\tshl.s\t3, r4, r4\n\tld.1\tr2, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr2, r1\n.BB0_891:\n\tadd\t31, r3, r1\n\tand\tstack-[19], r1, r1\n\tadd\tr1, r7, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tadd\tr2, r0, stack-[13]\n\tsub.s!\t@CPI0_3[0], r2, r2\n\tjump.gt\t@.BB0_43\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_43\n\tsub.s!\t32, r3, r1\n\tadd\t@CPI0_16[0], r0, r5\n\tadd\tr0, r0, r1\n\tadd.lt\tr5, r0, r1\n\tand\t@CPI0_16[0], r3, r2\n\tsub!\tr2, r0, r4\n\tadd\tr0, r0, r4\n\tadd.gt\tr5, r0, r4\n\tsub.s!\t@CPI0_16[0], r2, r2\n\tadd.ne\tr1, r0, r4\n\tadd\tstack-[13], r0, r1\n\tst.1\t64, r1\n\tsub!\tr4, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_3[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[17], r3, r2\n\tadd\tstack-[17], r1, r1\n\tadd\t31, r1, r4\n\tsub!\tr4, r2, r5\n\tadd\t@CPI0_16[0], r0, r8\n\tadd\tr0, r0, r5\n\tadd.ge\tr8, r0, r5\n\tand\t@CPI0_16[0], r4, r4\n\tand\t@CPI0_16[0], r2, r6\n\tsub!\tr4, r6, r7\n\tadd\tr0, r0, r7\n\tadd.lt\tr8, r0, r7\n\txor\tr4, r6, r4\n\tsub.s!\t@CPI0_16[0], r4, r4\n\tadd.ne\tr5, r0, r7\n\tsub!\tr7, r0, r4\n\tjump.ne\t@.BB0_2\n\tld.1.inc\tr1, r4, r1\n\tsub.s!\t@CPI0_3[0], r4, r5\n\tjump.gt\t@.BB0_43\n\tshl.s\t5, r4, r5\n\tadd\t63, r5, r6\n\tand\t@CPI0_22[0], r6, r6\n\tadd\tstack-[13], r6, r6\n\tsub.s!\t@CPI0_3[0], r6, r7\n\tjump.gt\t@.BB0_43\n\tst.1\t64, r6\n\tadd\tstack-[13], r0, r6\n\tst.1\tr6, r4\n\tadd\tr5, r1, r4\n\tsub!\tr4, r2, r2\n\tjump.gt\t@.BB0_2\n\tsub!\tr1, r4, r2\n\tjump.ge\t@.BB0_815\n\tadd\tstack-[13], r0, r2\n.BB0_901:\n\tadd\t32, r2, r2\n\tld.1.inc\tr1, r5, r1\n\tst.1\tr2, r5\n\tsub!\tr1, r4, r5\n\tjump.lt\t@.BB0_901\n.BB0_815:\n\tld.1\t64, r6\n\tsub.s!\t@CPI0_19[0], r6, r1\n\tjump.gt\t@.BB0_43\n\tadd\t64, r6, r1\n\tst.1\t64, r1\n\tadd\t32, r6, r1\n\tadd\t@CPI0_56[0], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[10], r0, r2\n\tst.1\tr6, r2\n\tld.1\t64, r7\n\tadd\tstack-[13], r0, r2\n\tld.1.inc\tr2, r2, r4\n\tadd\tr4, r0, stack-[12]\n\tsub!\tr2, r0, r4\n\tjump.eq\t@.BB0_819\n\tadd\tr0, r0, r5\n.BB0_824:\n\tadd\tr6, r0, stack-[16]\n\tshl.s\t5, r5, r1\n\tadd\tstack-[12], r1, r1\n\tld.1\tr1, r1\n\tadd\t@CPI0_62[0], r0, r3\n\tst.1\tr7, r3\n\tadd\t4, r7, r3\n\tst.1\tr3, r1\n\tsub.s!\t@CPI0_0[0], r7, r1\n\tadd\tr7, r0, stack-[17]\n\tadd\tr11, r0, r1\n\tadd.lt\tr7, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s\t1, r2, r2\n\tadd\tr5, r0, stack-[15]\n\tsub!\tr5, r2, r2\n\tjump.ne\t@.BB0_855\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr11, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_48[0], r1, r1\n\tadd\t@CPI0_14[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t31, r3, r4\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tshr.s\t5, r3, r5\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_827\n\tsub!\tr5, r0, r2\n\tadd\tstack-[17], r0, r8\n\tadd\tstack-[16], r0, r10\n\tjump.eq\t@.BB0_1091\n\tadd\tr0, r0, r2\n.BB0_842:\n\tshl.s\t5, r2, r6\n\tadd\tr8, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r2, r2\n\tsub!\tr2, r5, r6\n\tjump.lt\t@.BB0_842\n.BB0_1091:\n\tsub!\tr4, r0, r2\n\tadd\t@CPI0_0[0], r0, r11\n\tjump.eq\t@.BB0_844\n\tshl.s\t5, r5, r2\n\tptr.add\tr1, r2, r1\n\tadd\tr8, r2, r2\n\tshl.s\t3, r4, r4\n\tld.1\tr2, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr2, r1\n.BB0_844:\n\tadd\t31, r3, r1\n\tand\t@CPI0_15[0], r1, r1\n\tadd\tr1, r8, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI0_3[0], r2, r4\n\tjump.gt\t@.BB0_43\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_43\n\tst.1\t64, r2\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tld.1\tr8, r1\n\tsub.s!\t@CPI0_3[0], r1, r4\n\tjump.gt\t@.BB0_2\n\tadd\tr3, r8, r6\n\tadd\tr1, r8, r1\n\tadd\t31, r1, r4\n\tsub!\tr4, r6, r5\n\tadd\t@CPI0_16[0], r0, r9\n\tadd\tr0, r0, r5\n\tadd.ge\tr9, r0, r5\n\tand\t@CPI0_16[0], r4, r4\n\tand\t@CPI0_16[0], r6, r7\n\tsub!\tr4, r7, r8\n\tadd\tr0, r0, r8\n\tadd.lt\tr9, r0, r8\n\txor\tr4, r7, r4\n\tsub.s!\t@CPI0_16[0], r4, r4\n\tadd.ne\tr5, r0, r8\n\tsub!\tr8, r0, r4\n\tjump.ne\t@.BB0_2\n\tld.1.inc\tr1, r1, r5\n\tsub.s!\t@CPI0_3[0], r1, r4\n\tjump.gt\t@.BB0_43\n\tadd\t31, r1, r4\n\tand\tstack-[19], r4, r4\n\tadd\t63, r4, r4\n\tand\tstack-[19], r4, r4\n\tadd\tr4, r2, r4\n\tsub.s!\t@CPI0_3[0], r4, r7\n\tjump.gt\t@.BB0_43\n\tst.1\t64, r4\n\tst.1.inc\tr2, r1, r4\n\tadd\tr1, r5, r7\n\tsub!\tr7, r6, r6\n\tjump.gt\t@.BB0_2\n\tsub!\tr1, r0, r6\n\tjump.eq\t@.BB0_831\n\tadd\tr0, r0, r6\n.BB0_854:\n\tadd\tr6, r4, r7\n\tadd\tr6, r5, r8\n\tld.1\tr8, r8\n\tst.1\tr7, r8\n\tadd\t32, r6, r6\n\tsub!\tr6, r1, r7\n\tjump.lt\t@.BB0_854\n.BB0_831:\n\tadd\tr1, r4, r1\n\tst.1\tr1, r0\n\tld.1\t64, r5\n\tadd\t32, r5, r1\n\tld.1.inc\tr10, r6, r7\n\tsub!\tr6, r0, r8\n\tjump.eq\t@.BB0_834\n\tadd\tr0, r0, r8\n.BB0_833:\n\tadd\tr8, r1, r9\n\tadd\tr7, r8, r10\n\tld.1\tr10, r10\n\tst.1\tr9, r10\n\tadd\t32, r8, r8\n\tsub!\tr8, r6, r9\n\tjump.lt\t@.BB0_833\n.BB0_834:\n\tadd\tr6, r1, r7\n\tst.1\tr7, r0\n\tadd\tr6, r5, r6\n\tadd\t32, r6, r7\n\tadd\t@CPI0_57[0], r0, r8\n\tst.1\tr7, r8\n\tadd\t33, r6, r7\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r8\n\tjump.eq\t@.BB0_837\n\tadd\tr0, r0, r8\n.BB0_836:\n\tadd\tr8, r7, r9\n\tadd\tr8, r4, r10\n\tld.1\tr10, r10\n\tst.1\tr9, r10\n\tadd\t32, r8, r8\n\tsub!\tr8, r2, r9\n\tjump.lt\t@.BB0_836\n.BB0_837:\n\tadd\tr2, r7, r4\n\tst.1\tr4, r0\n\tadd\tr2, r6, r2\n\tadd\t33, r2, r4\n\tadd\t@CPI0_57[0], r0, r6\n\tst.1\tr4, r6\n\tsub\tr2, r5, r2\n\tadd\t2, r2, r4\n\tst.1\tr5, r4\n\tadd\t65, r2, r2\n\tjump\t@.BB0_838\n.BB0_855:\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr11, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_48[0], r1, r1\n\tadd\t@CPI0_14[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t31, r3, r4\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tshr.s\t5, r3, r5\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_856\n\tsub!\tr5, r0, r2\n\tadd\tstack-[17], r0, r8\n\tadd\tstack-[16], r0, r10\n\tjump.eq\t@.BB0_1101\n\tadd\tr0, r0, r2\n.BB0_869:\n\tshl.s\t5, r2, r6\n\tadd\tr8, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r2, r2\n\tsub!\tr2, r5, r6\n\tjump.lt\t@.BB0_869\n.BB0_1101:\n\tsub!\tr4, r0, r2\n\tadd\t@CPI0_0[0], r0, r11\n\tjump.eq\t@.BB0_871\n\tshl.s\t5, r5, r2\n\tptr.add\tr1, r2, r1\n\tadd\tr8, r2, r2\n\tshl.s\t3, r4, r4\n\tld.1\tr2, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr2, r1\n.BB0_871:\n\tadd\t31, r3, r1\n\tand\t@CPI0_15[0], r1, r1\n\tadd\tr1, r8, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI0_3[0], r2, r4\n\tjump.gt\t@.BB0_43\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_43\n\tst.1\t64, r2\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tld.1\tr8, r1\n\tsub.s!\t@CPI0_3[0], r1, r4\n\tjump.gt\t@.BB0_2\n\tadd\tr3, r8, r6\n\tadd\tr1, r8, r1\n\tadd\t31, r1, r4\n\tsub!\tr4, r6, r5\n\tadd\t@CPI0_16[0], r0, r9\n\tadd\tr0, r0, r5\n\tadd.ge\tr9, r0, r5\n\tand\t@CPI0_16[0], r4, r4\n\tand\t@CPI0_16[0], r6, r7\n\tsub!\tr4, r7, r8\n\tadd\tr0, r0, r8\n\tadd.lt\tr9, r0, r8\n\txor\tr4, r7, r4\n\tsub.s!\t@CPI0_16[0], r4, r4\n\tadd.ne\tr5, r0, r8\n\tsub!\tr8, r0, r4\n\tjump.ne\t@.BB0_2\n\tld.1.inc\tr1, r1, r5\n\tsub.s!\t@CPI0_3[0], r1, r4\n\tjump.gt\t@.BB0_43\n\tadd\t31, r1, r4\n\tand\tstack-[19], r4, r4\n\tadd\t63, r4, r4\n\tand\tstack-[19], r4, r4\n\tadd\tr4, r2, r4\n\tsub.s!\t@CPI0_3[0], r4, r7\n\tjump.gt\t@.BB0_43\n\tst.1\t64, r4\n\tst.1.inc\tr2, r1, r4\n\tadd\tr1, r5, r7\n\tsub!\tr7, r6, r6\n\tjump.gt\t@.BB0_2\n\tsub!\tr1, r0, r6\n\tjump.eq\t@.BB0_860\n\tadd\tr0, r0, r6\n.BB0_881:\n\tadd\tr6, r4, r7\n\tadd\tr6, r5, r8\n\tld.1\tr8, r8\n\tst.1\tr7, r8\n\tadd\t32, r6, r6\n\tsub!\tr6, r1, r7\n\tjump.lt\t@.BB0_881\n.BB0_860:\n\tadd\tr1, r4, r1\n\tst.1\tr1, r0\n\tld.1\t64, r5\n\tadd\t32, r5, r1\n\tld.1.inc\tr10, r6, r7\n\tsub!\tr6, r0, r8\n\tjump.eq\t@.BB0_863\n\tadd\tr0, r0, r8\n.BB0_862:\n\tadd\tr8, r1, r9\n\tadd\tr7, r8, r10\n\tld.1\tr10, r10\n\tst.1\tr9, r10\n\tadd\t32, r8, r8\n\tsub!\tr8, r6, r9\n\tjump.lt\t@.BB0_862\n.BB0_863:\n\tadd\tr6, r1, r7\n\tst.1\tr7, r0\n\tadd\tr6, r5, r6\n\tadd\t32, r6, r7\n\tadd\t@CPI0_57[0], r0, r8\n\tst.1\tr7, r8\n\tadd\t33, r6, r7\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r8\n\tjump.eq\t@.BB0_866\n\tadd\tr0, r0, r8\n.BB0_865:\n\tadd\tr8, r7, r9\n\tadd\tr8, r4, r10\n\tld.1\tr10, r10\n\tst.1\tr9, r10\n\tadd\t32, r8, r8\n\tsub!\tr8, r2, r9\n\tjump.lt\t@.BB0_865\n.BB0_866:\n\tadd\tr2, r7, r4\n\tst.1\tr4, r0\n\tadd\tr2, r6, r2\n\tadd\t33, r2, r4\n\tadd\t@CPI0_58[0], r0, r6\n\tst.1\tr4, r6\n\tsub\tr2, r5, r2\n\tadd\t3, r2, r4\n\tst.1\tr5, r4\n\tadd\t66, r2, r2\n.BB0_838:\n\tand\tstack-[19], r2, r2\n\tadd\tr2, r5, r7\n\tsub!\tr7, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_3[0], r7, r4\n\tjump.gt\t@.BB0_43\n\tand!\t1, r2, r2\n\tadd\tr5, r0, r6\n\tjump.ne\t@.BB0_43\n\tst.1\t64, r7\n\tadd\tstack-[15], r0, r5\n\tadd\t1, r5, r5\n\tadd\tstack-[13], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr5, r2, r4\n\tjump.lt\t@.BB0_824\n.BB0_819:\n\tadd\t32, r7, r8\n\tld.1\tr6, r2\n\tsub!\tr2, r0, r4\n\tjump.eq\t@.BB0_822\n\tadd\tr0, r0, r4\n.BB0_821:\n\tadd\tr4, r8, r5\n\tadd\tr4, r1, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB0_821\n.BB0_822:\n\tadd\tr8, r0, stack-[4]\n\tadd\tr2, r8, r1\n\tadd\t@CPI0_59[0], r0, r4\n\tst.1\tr1, r4\n\tadd\t1, r2, r1\n\tst.1\tr7, r1\n\tand\tstack-[19], r2, r1\n\tadd\tr7, r1, r1\n\tadd\t64, r1, r1\n\tadd\tr1, r0, stack-[15]\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tjump.gt\t@.BB0_43\n\tsub!\tstack-[15], r7, r1\n\tjump.lt\t@.BB0_43\n\tadd\tstack-[15], r0, r9\n\tst.1\t64, r9\n\tadd\t@CPI0_63[0], r0, r1\n\tst.1\tr9, r1\n\tadd\t4, r9, r1\n\tadd\tstack-[14], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r9, r1\n\tadd\tstack-[18], r0, r4\n\tsload\tr4, r8\n\tst.1\tr1, r8\n\tst.1\t0, r4\n\tadd\t68, r9, r1\n\tsub!\tr8, r0, r4\n\tadd\tstack-[5], r0, r2\n\tjump.eq\t@.BB0_885\n\tadd\t@CPI0_55[0], r0, r4\n\tadd\tr0, r0, r5\n.BB0_884:\n\tsload\tr4, r6\n\tst.1.inc\tr1, r6, r1\n\tadd\t1, r4, r4\n\tadd\t1, r5, r5\n\tsub!\tr5, r8, r6\n\tjump.lt\t@.BB0_884\n.BB0_885:\n\tcontext.gas_left\tr5\n\tsub.s!\t4, r2, r4\n\tadd\tr7, r0, stack-[17]\n\tjump.ne\t@.BB0_902\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_911\n.BB0_902:\n\tsub\tr1, r9, r1\n\tsub.s!\t@CPI0_0[0], r9, r3\n\tadd\tr11, r0, r3\n\tadd.lt\tr9, r0, r3\n\tshl.s\t64, r3, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr11, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r3, r1\n\tsub.s!\t@CPI0_0[0], r5, r3\n\tadd.ge\tr11, r0, r5\n\tshl.s\t192, r5, r3\n\tor\tr1, r3, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[15], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tshr.s!\t5, r4, r5\n\tjump.eq\t@.BB0_1100\n\tadd\tr0, r0, r6\n.BB0_904:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_904\n.BB0_1100:\n\tand!\t31, r4, r6\n\tjump.eq\t@.BB0_906\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r7\n\tadd\tr9, r5, r5\n\tshl.s\t3, r6, r6\n\tld.1\tr5, r8\n\tshl\tr8, r6, r8\n\tshr\tr8, r6, r8\n\tld\tr7, r7\n\tsub\t256, r6, r6\n\tshr\tr7, r6, r7\n\tshl\tr7, r6, r6\n\tor\tr6, r8, r6\n\tst.1\tr5, r6\n.BB0_906:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tadd\t@CPI0_0[0], r0, r11\n\tjump.eq\t@.BB0_907\n.BB0_911:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tr1, r9, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tadd\tr2, r0, stack-[16]\n\tsub.s!\t@CPI0_3[0], r2, r2\n\tjump.gt\t@.BB0_43\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_43\n\tadd\tstack-[16], r0, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[15], r0, r1\n\tld.1\tr1, r1\n\tadd\t@CPI0_62[0], r0, r2\n\tadd\tstack-[16], r0, r3\n\tst.1\tr3, r2\n\tadd\t4, r3, r2\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr11, r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd\tr11, r0, r2\n\tadd.lt\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_48[0], r1, r1\n\tadd\t@CPI0_14[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[16], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\tstack-[11], r3, r4\n\tadd\tstack-[11], r0, r5\n\tadd.lt\tr3, r0, r5\n\tshr.s!\t5, r5, r4\n\tjump.eq\t@.BB0_1098\n\tadd\tr0, r0, r6\n.BB0_916:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB0_916\n.BB0_1098:\n\tand!\t31, r5, r5\n\tjump.eq\t@.BB0_918\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r6\n\tadd\tr9, r4, r4\n\tshl.s\t3, r5, r5\n\tld.1\tr4, r7\n\tshl\tr7, r5, r7\n\tshr\tr7, r5, r7\n\tld\tr6, r6\n\tsub\t256, r5, r5\n\tshr\tr6, r5, r6\n\tshl\tr6, r5, r5\n\tor\tr5, r7, r5\n\tst.1\tr4, r5\n.BB0_918:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tadd\t@CPI0_0[0], r0, r7\n\tjump.eq\t@.BB0_919\n\tadd\tstack-[11], r3, r2\n\tsub!\tr2, r3, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\tstack-[11], r1, r1\n\tshr.s!\t5, r3, r2\n\tadd\tstack-[16], r0, r8\n\tjump.eq\t@.BB0_1096\n\tadd\tr0, r0, r4\n.BB0_927:\n\tshl.s\t5, r4, r5\n\tadd\tr8, r5, r6\n\tptr.add\tr1, r5, r5\n\tld\tr5, r5\n\tst.1\tr6, r5\n\tadd\t1, r4, r4\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB0_927\n.BB0_1096:\n\tand!\t31, r3, r4\n\tjump.eq\t@.BB0_929\n\tshl.s\t5, r2, r2\n\tptr.add\tr1, r2, r1\n\tadd\tr8, r2, r2\n\tshl.s\t3, r4, r4\n\tld.1\tr2, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr2, r1\n.BB0_929:\n\tadd\t31, r3, r1\n\tand\t@CPI0_15[0], r1, r1\n\tadd\tr1, r8, r1\n\tadd\tr1, r0, stack-[15]\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tjump.gt\t@.BB0_43\n\tadd\tstack-[15], r0, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[16], r0, r1\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_3[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[16], r3, r3\n\tadd\tstack-[16], r1, r1\n\tadd\t31, r1, r2\n\tsub!\tr2, r3, r2\n\tjump.ge\t@.BB0_2\n\tld.1.inc\tr1, r1, r2\n\tsub.s!\t@CPI0_3[0], r1, r4\n\tjump.gt\t@.BB0_43\n\tadd\t31, r1, r4\n\tand\tstack-[19], r4, r4\n\tadd\t63, r4, r4\n\tand\tstack-[19], r4, r4\n\tadd\tstack-[15], r4, r4\n\tsub.s!\t@CPI0_3[0], r4, r5\n\tjump.gt\t@.BB0_43\n\tst.1\t64, r4\n\tadd\tstack-[15], r0, r4\n\tst.1.inc\tr4, r1, r4\n\tadd\tr4, r0, stack-[13]\n\tadd\tr1, r2, r4\n\tsub!\tr4, r3, r3\n\tjump.gt\t@.BB0_2\n\tsub!\tr1, r0, r3\n\tadd\tstack-[13], r0, r6\n\tjump.eq\t@.BB0_924\n\tadd\tr0, r0, r3\n.BB0_938:\n\tadd\tr3, r6, r4\n\tadd\tr3, r2, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB0_938\n.BB0_924:\n\tadd\tr1, r6, r1\n\tst.1\tr1, r0\n\tadd\tstack-[18], r0, r1\n\tsload\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tsub!\tr1, r2, r1\n\tjump.le\t@.BB0_387\n\tadd\tstack-[18], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_55[0], r2, r1\n\tsload\tr1, r1\n\tld.1\t64, r3\n\tadd\tr3, r0, stack-[12]\n\tadd\t@CPI0_62[0], r0, r2\n\tst.1\tr3, r2\n\tadd\t4, r3, r2\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr7, r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd\tr7, r0, r2\n\tadd.lt\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_48[0], r1, r1\n\tadd\t@CPI0_14[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[12], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\tstack-[11], r3, r4\n\tadd\tstack-[11], r0, r5\n\tadd.lt\tr3, r0, r5\n\tshr.s!\t5, r5, r4\n\tjump.eq\t@.BB0_1095\n\tadd\tr0, r0, r6\n.BB0_941:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB0_941\n.BB0_1095:\n\tand!\t31, r5, r5\n\tadd\tstack-[17], r0, r8\n\tjump.eq\t@.BB0_943\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r6\n\tadd\tr9, r4, r4\n\tshl.s\t3, r5, r5\n\tld.1\tr4, r7\n\tshl\tr7, r5, r7\n\tshr\tr7, r5, r7\n\tld\tr6, r6\n\tsub\t256, r5, r5\n\tshr\tr6, r5, r6\n\tshl\tr6, r5, r5\n\tor\tr5, r7, r5\n\tst.1\tr4, r5\n.BB0_943:\n\tadd\tr9, r0, r7\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tadd\t@CPI0_0[0], r0, r11\n\tjump.eq\t@.BB0_944\n\tadd\tstack-[11], r3, r2\n\tsub!\tr2, r3, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\tstack-[11], r1, r1\n\tshr.s!\t5, r3, r2\n\tadd\tr7, r0, r9\n\tjump.eq\t@.BB0_1093\n\tadd\tr0, r0, r4\n.BB0_998:\n\tshl.s\t5, r4, r5\n\tadd\tr9, r5, r6\n\tptr.add\tr1, r5, r5\n\tld\tr5, r5\n\tst.1\tr6, r5\n\tadd\t1, r4, r4\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB0_998\n.BB0_1093:\n\tand!\t31, r3, r4\n\tjump.eq\t@.BB0_1000\n\tshl.s\t5, r2, r2\n\tptr.add\tr1, r2, r1\n\tadd\tr9, r2, r2\n\tshl.s\t3, r4, r4\n\tld.1\tr2, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr2, r1\n.BB0_1000:\n\tadd\t31, r3, r1\n\tand\t@CPI0_15[0], r1, r1\n\tadd\tr1, r9, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tadd\tr2, r0, stack-[16]\n\tsub.s!\t@CPI0_3[0], r2, r2\n\tjump.gt\t@.BB0_43\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_43\n\tadd\tstack-[16], r0, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tld.1\tr7, r1\n\tsub.s!\t@CPI0_3[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tadd\tr3, r7, r3\n\tadd\tr1, r7, r1\n\tadd\t31, r1, r2\n\tsub!\tr2, r3, r4\n\tadd\t@CPI0_16[0], r0, r7\n\tadd\tr0, r0, r4\n\tadd.ge\tr7, r0, r4\n\tand\t@CPI0_16[0], r2, r2\n\tand\t@CPI0_16[0], r3, r5\n\tsub!\tr2, r5, r6\n\tadd\tr0, r0, r6\n\tadd.lt\tr7, r0, r6\n\txor\tr2, r5, r2\n\tsub.s!\t@CPI0_16[0], r2, r2\n\tadd.ne\tr4, r0, r6\n\tsub!\tr6, r0, r2\n\tjump.ne\t@.BB0_2\n\tld.1.inc\tr1, r1, r2\n\tsub.s!\t@CPI0_3[0], r1, r4\n\tjump.gt\t@.BB0_43\n\tadd\t31, r1, r4\n\tand\tstack-[19], r4, r4\n\tadd\t63, r4, r4\n\tand\tstack-[19], r4, r4\n\tadd\tstack-[16], r4, r4\n\tsub.s!\t@CPI0_3[0], r4, r5\n\tjump.gt\t@.BB0_43\n\tst.1\t64, r4\n\tadd\tstack-[16], r0, r4\n\tst.1.inc\tr4, r1, r4\n\tadd\tr4, r0, stack-[12]\n\tadd\tr1, r2, r4\n\tsub!\tr4, r3, r3\n\tjump.gt\t@.BB0_2\n\tsub!\tr1, r0, r3\n\tadd\tstack-[12], r0, r6\n\tjump.eq\t@.BB0_949\n\tadd\tr0, r0, r3\n.BB0_1010:\n\tadd\tr3, r6, r4\n\tadd\tr3, r2, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB0_1010\n.BB0_949:\n\tadd\tr1, r6, r1\n\tst.1\tr1, r0\n\tadd\tstack-[9], r0, r2\n\tsload\tr2, r1\n\tadd\tstack-[6], r0, r3\n\tsub!\tr1, r3, r1\n\tjump.le\t@.BB0_387\n\tst.1\t0, r2\n\tadd\t@CPI0_60[0], r3, r1\n\tsload\tr1, r2\n\tand!\t1, r2, r3\n\tshr.s\t1, r2, r4\n\tand\t127, r4, r7\n\tadd.ne\tr4, r0, r7\n\tsub.s!\t31, r7, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\txor\tr2, r4, r4\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_8\n\tld.1\t64, r6\n\tst.1.inc\tr6, r7, r5\n\tsub!\tr3, r0, r3\n\tjump.eq\t@.BB0_954\n\tadd\tr7, r0, stack-[1]\n\tadd\tr6, r0, stack-[2]\n\tadd\tr5, r0, stack-[5]\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr11, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r8\n\tadd\t@CPI0_0[0], r0, r11\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[1], r0, r7\n\tsub!\tr7, r0, r2\n\tjump.eq\t@.BB0_957\n\tld\tr1, r2\n\tadd\tr0, r0, r1\n\tadd\tstack-[5], r0, r5\n\tadd\tstack-[2], r0, r6\n.BB0_959:\n\tadd\tr5, r1, r3\n\tsload\tr2, r4\n\tst.1\tr3, r4\n\tadd\t1, r2, r2\n\tadd\t32, r1, r1\n\tsub!\tr1, r7, r3\n\tjump.lt\t@.BB0_959\n\tjump\t@.BB0_952\n.BB0_954:\n\tsub.s\t256, r0, r1\n\tand\tr2, r1, r1\n\tst.1\tr5, r1\n\tsub!\tr7, r0, r1\n\tadd\t32, r0, r1\n\tadd.eq\t0, r0, r1\n\tjump\t@.BB0_952\n.BB0_957:\n\tadd\tr0, r0, r1\n\tadd\tstack-[5], r0, r5\n\tadd\tstack-[2], r0, r6\n.BB0_952:\n\tadd\t63, r1, r1\n\tand\tstack-[19], r1, r1\n\tadd\tr6, r0, r3\n\tadd\tr1, r6, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tadd\tr2, r0, stack-[17]\n\tsub.s!\t@CPI0_3[0], r2, r2\n\tjump.gt\t@.BB0_43\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_43\n\tadd\tstack-[17], r0, r9\n\tst.1\t64, r9\n\tadd\t32, r9, r2\n\tadd\t@CPI0_64[0], r0, r1\n\tadd\tr2, r0, stack-[5]\n\tst.1\tr2, r1\n\tadd\t33, r9, r1\n\tadd\t@CPI0_65[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t42, r9, r2\n\tld.1\tr3, r1\n\tsub!\tr1, r0, r3\n\tadd\tr5, r0, r6\n\tjump.eq\t@.BB0_963\n\tadd\tr0, r0, r3\n.BB0_962:\n\tadd\tr3, r2, r4\n\tadd\tr6, r3, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB0_962\n.BB0_963:\n\tadd\tr1, r2, r2\n\tst.1\tr2, r0\n\tadd\tr1, r9, r1\n\tadd\t42, r1, r2\n\tadd\t@CPI0_66[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t43, r1, r2\n\tadd\t@CPI0_67[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t51, r1, r3\n\tld.1\tr8, r2\n\tsub!\tr2, r0, r4\n\tadd\tstack-[4], r0, r7\n\tjump.eq\t@.BB0_966\n\tadd\tr0, r0, r4\n.BB0_965:\n\tadd\tr4, r3, r5\n\tadd\tr4, r7, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB0_965\n.BB0_966:\n\tadd\tr2, r3, r3\n\tst.1\tr3, r0\n\tadd\tr2, r1, r1\n\tadd\t51, r1, r2\n\tadd\t@CPI0_66[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t52, r1, r2\n\tadd\t@CPI0_68[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t60, r1, r1\n\tadd\tstack-[15], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r3\n\tadd\tstack-[13], r0, r6\n\tjump.eq\t@.BB0_969\n\tadd\tr0, r0, r3\n.BB0_968:\n\tadd\tr3, r1, r4\n\tadd\tr3, r6, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB0_968\n.BB0_969:\n\tadd\tr2, r1, r1\n\tadd\t@CPI0_58[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t2, r1, r2\n\tadd\t@CPI0_69[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t10, r1, r1\n\tadd\tstack-[16], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r3\n\tadd\tstack-[12], r0, r6\n\tjump.eq\t@.BB0_972\n\tadd\tr0, r0, r3\n.BB0_971:\n\tadd\tr3, r1, r4\n\tadd\tr3, r6, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB0_971\n.BB0_972:\n\tadd\tr2, r1, r1\n\tadd\t@CPI0_57[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t1, r1, r2\n\tadd\t@CPI0_70[0], r0, r3\n\tst.1\tr2, r3\n\tsub\tr1, r9, r1\n\tsub.s\t30, r1, r2\n\tst.1\tr9, r2\n\tadd\t33, r1, r1\n\tand\tstack-[19], r1, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_3[0], r1, r3\n\tjump.gt\t@.BB0_43\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_43\n\tst.1\t64, r1\n\tadd\t20, r0, r1\n\tsload\tr1, r2\n\tadd\tstack-[6], r0, r3\n\tsub!\tr2, r3, r2\n\tjump.le\t@.BB0_387\n\tst.1\t0, r1\n\tadd\t@CPI0_71[0], r3, stack-[16]\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tjump.gt\t@.BB0_43\n\tadd\tstack-[16], r0, r4\n\tsload\tr4, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tadd\tstack-[6], r0, r6\n\tjump.ne\t@.BB0_8\n\tsub.s!\t32, r3, r1\n\tadd\tstack-[15], r0, r5\n\tjump.lt\t@.BB0_982\n\tadd\tr3, r0, stack-[13]\n\tst.1\t0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr11, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r11\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[15], r0, r5\n\tadd\t31, r5, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r5, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[13], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[6], r0, r6\n\tadd\tstack-[16], r0, r4\n\tjump.ge\t@.BB0_982\n.BB0_981:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_981\n.BB0_982:\n\tsub.s!\t32, r5, r1\n\tjump.lt\t@.BB0_991\n\tst.1\t0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr11, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r11\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[15], r0, r8\n\tand!\tstack-[19], r8, r3\n\tld\tr1, r1\n\tadd\tstack-[17], r0, r7\n\tjump.eq\t@.BB0_985\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n\tadd\tstack-[6], r0, r6\n.BB0_987:\n\tadd\tr2, r7, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_987\n\tjump\t@.BB0_988\n.BB0_991:\n\tsub!\tr5, r0, r1\n\tjump.eq\t@.BB0_992\n\tadd\tstack-[5], r0, r1\n\tld.1\tr1, r1\n\tjump\t@.BB0_994\n.BB0_992:\n\tadd\tr0, r0, r1\n.BB0_994:\n\tshl.s\t3, r5, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r5, r2\n\tor\tr1, r2, r1\n\tjump\t@.BB0_995\n.BB0_985:\n\tadd\tstack-[14], r0, r2\n\tadd\tstack-[6], r0, r6\n.BB0_988:\n\tsub!\tr3, r8, r3\n\tjump.ge\t@.BB0_990\n\tshl.s\t3, r8, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tr2, r7, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n\tjump\t@.BB0_990\n.BB0_387:\n\tadd\t@CPI0_27[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_48[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_64:\n\tld.1\t64, r2\n\tsub!\tr5, r0, r6\n\tjump.eq\t@.BB0_1119\n\tadd\tr0, r0, r6\n.BB0_66:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_66\n.BB0_1119:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_31\n\tjump\t@.BB0_30\n.BB0_827:\n\tld.1\t64, r2\n\tsub!\tr5, r0, r6\n\tjump.eq\t@.BB0_1092\n\tadd\tr0, r0, r6\n.BB0_829:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_829\n.BB0_1092:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_31\n\tjump\t@.BB0_30\n.BB0_856:\n\tld.1\t64, r2\n\tsub!\tr5, r0, r6\n\tjump.eq\t@.BB0_1102\n\tadd\tr0, r0, r6\n.BB0_858:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_858\n.BB0_1102:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_31\n\tjump\t@.BB0_30\n.BB0_1023:\n\tsub.s\t256, r0, r4\n\tand\tr3, r4, r3\n\tadd\t32, r5, r4\n\tst.1\tr4, r3\n.BB0_1021:\n\tadd\tr2, r1, r1\n\tadd\tstack-[18], r0, r3\n\tst.1\tr3, r1\n\tadd\t63, r1, r1\n\tand\tstack-[19], r1, r2\n\tadd\tr2, r3, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_3[0], r1, r3\n\tjump.gt\t@.BB0_43\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_43\n\tst.1\t64, r1\n\tadd\t@CPI0_74[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_14[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_75[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_341\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_1045\n\tadd\t@CPI0_0[0], r0, r1\n\tadd\tstack-[16], r0, r3\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.ge\tr1, r0, r3\n\tmul\t@CPI0_78[0], r3, r1, r2\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_341:\n\trevert\n.BB0_919:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1097\n\tadd\tr0, r0, r6\n.BB0_921:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_921\n.BB0_1097:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_31\n\tjump\t@.BB0_30\n.BB0_944:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1094\n\tadd\tr0, r0, r6\n.BB0_946:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_946\n.BB0_1094:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_31\n\tjump\t@.BB0_30\n.BB0_810:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1104\n\tadd\tr0, r0, r6\n.BB0_812:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_812\n.BB0_1104:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_31\n\tjump\t@.BB0_30\n.BB0_907:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1099\n\tadd\tr0, r0, r6\n.BB0_909:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_909\n.BB0_1099:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_31\n\tjump\t@.BB0_30\n.BB0_114:\n\tsub!\tstack-[14], r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_116\n\tadd\tstack-[19], r0, r1\n\tld.1\tr1, r1\n.BB0_116:\n\tadd\tstack-[14], r0, r4\n\tshl.s\t3, r4, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r4, r2\n\tor\tr1, r2, r4\n\tjump\t@.BB0_91\n.BB0_1045:\n\tld.1\t64, r4\n\tadd\t@CPI0_76[0], r0, r1\n\tst.1.inc\tr4, r1, r1\n\tadd\tr1, r0, stack-[13]\n\tadd\t4, r4, r1\n\tadd\tstack-[8], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[18], r0, r2\n\tld.1\tr2, r2\n\tadd\t68, r4, r3\n\tst.1\tr3, r2\n\tadd\tr4, r0, stack-[14]\n\tadd\t100, r4, r3\n\tsub!\tr2, r0, r4\n\tadd\tstack-[15], r0, r7\n\tjump.eq\t@.BB0_1048\n\tadd\tr0, r0, r4\n.BB0_1047:\n\tadd\tr4, r3, r5\n\tadd\tr4, r7, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB0_1047\n.BB0_1048:\n\tadd\tr2, r3, r4\n\tst.1\tr4, r0\n\tadd\t31, r2, r2\n\tand\tstack-[19], r2, r2\n\tadd\tr2, r3, r2\n\tsub\tr2, r1, r1\n\tadd\tstack-[14], r0, r3\n\tadd\t36, r3, r3\n\tst.1\tr3, r1\n\tadd\tstack-[17], r0, r1\n\tsload\tr1, r3\n\tand!\t1, r3, r4\n\tshr.s\t1, r3, r5\n\tand\t127, r5, r1\n\tadd.ne\tr5, r0, r1\n\tsub.s!\t31, r1, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\txor\tr3, r5, r5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_8\n\tst.1.inc\tr2, r1, r2\n\tsub!\tr4, r0, r4\n\tjump.eq\t@.BB0_1050\n\tadd\tstack-[17], r0, r3\n\tst.1\t0, r3\n\tsub!\tr1, r0, r3\n\tadd\tr0, r0, r3\n\tjump.eq\t@.BB0_1054\n\tadd\t@CPI0_72[0], r0, r4\n\tadd\tr0, r0, r3\n.BB0_1053:\n\tadd\tr3, r2, r5\n\tsload\tr4, r6\n\tst.1\tr5, r6\n\tadd\t1, r4, r4\n\tadd\t32, r3, r3\n\tsub!\tr3, r1, r5\n\tjump.lt\t@.BB0_1053\n\tjump\t@.BB0_1054\n.BB0_109:\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n\tadd\tstack-[16], r0, r6\n.BB0_110:\n\tadd\tr2, r6, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_110\n.BB0_111:\n\tsub.s!\tstack-[14], r3, r3\n\tjump.ge\t@.BB0_113\n\tadd\tstack-[14], r0, r3\n\tshl.s\t3, r3, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[16], r2, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_113:\n\tadd\tstack-[14], r0, r1\n\tshl.s\t1, r1, r1\n\tor\t1, r1, r4\n.BB0_91:\n\tadd\tstack-[8], r0, r1\n\tsstore\tr1, r4\n\tand!\t1, r4, r5\n\tshr.s\t1, r4, r1\n\tand\t127, r1, r3\n\tadd.ne\tr1, r0, r3\n\tsub.s!\t31, r3, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\txor\tr4, r1, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_8\n\tld.1\t64, r2\n\tst.1.inc\tr2, r3, r1\n\tsub!\tr5, r0, r5\n\tjump.eq\t@.BB0_95\n\tadd\tstack-[8], r0, r4\n\tst.1\t0, r4\n\tsub!\tr3, r0, r4\n\tadd\tr0, r0, r4\n\tjump.eq\t@.BB0_93\n\tadd\t@CPI0_18[0], r0, r5\n\tadd\tr0, r0, r4\n.BB0_98:\n\tadd\tr1, r4, r6\n\tsload\tr5, r7\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r6\n\tjump.lt\t@.BB0_98\n\tjump\t@.BB0_93\n.BB0_95:\n\tsub.s\t256, r0, r5\n\tand\tr4, r5, r4\n\tst.1\tr1, r4\n\tsub!\tr3, r0, r3\n\tadd\t32, r0, r4\n\tadd.eq\t0, r0, r4\n.BB0_93:\n\tadd\t63, r4, r3\n\tand\tstack-[17], r3, r4\n\tadd\tr4, r2, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_3[0], r3, r5\n\tjump.gt\t@.BB0_43\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_43\n\tst.1\t64, r3\n\tsub.s!\t@CPI0_19[0], r3, r4\n\tjump.gt\t@.BB0_43\n\tadd\t64, r3, r4\n\tst.1\t64, r4\n\tadd\t6, r0, r4\n\tadd\tr4, r0, stack-[7]\n\tst.1.inc\tr3, r4, r4\n\tadd\t@CPI0_20[0], r0, r5\n\tst.1\tr4, r5\n\tadd\t@CPI0_21[0], r0, r5\n\tld.1\t64, r7\n\tst.1\tr7, r5\n\tadd\t4, r7, r5\n\tadd\t64, r0, r6\n\tadd\tr6, r0, stack-[6]\n\tst.1\tr5, r6\n\tadd\t68, r7, r6\n\tld.1\tr2, r2\n\tst.1\tr6, r2\n\tadd\tr7, r0, stack-[19]\n\tadd\t100, r7, r6\n\tsub!\tr2, r0, r7\n\tjump.eq\t@.BB0_103\n\tadd\tr0, r0, r7\n.BB0_102:\n\tadd\tr7, r6, r8\n\tadd\tr1, r7, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tadd\t32, r7, r7\n\tsub!\tr7, r2, r8\n\tjump.lt\t@.BB0_102\n.BB0_103:\n\tadd\tr2, r6, r1\n\tst.1\tr1, r0\n\tadd\t31, r2, r1\n\tand\tstack-[17], r1, r1\n\tadd\tr1, r6, r1\n\tsub\tr1, r5, r2\n\tadd\tstack-[19], r0, r5\n\tadd\t36, r5, r5\n\tst.1\tr5, r2\n\tld.1\tr3, r2\n\tst.1.inc\tr1, r2, r1\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB0_117\n\tadd\tr0, r0, r3\n.BB0_105:\n\tadd\tr3, r1, r5\n\tadd\tr3, r4, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r3, r3\n\tsub!\tr3, r2, r5\n\tjump.lt\t@.BB0_105\n.BB0_117:\n\tadd\t31, r2, r3\n\tand\tstack-[17], r3, r3\n\tadd\tr2, r1, r2\n\tst.1\tr2, r0\n\tadd\tstack-[19], r0, r4\n\tsub\tr1, r4, r1\n\tadd\tr1, r3, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr2, r0, r3\n\tadd.lt\tr4, r0, r3\n\tshl.s\t64, r3, r3\n\tor\tr1, r3, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tadd\t@CPI0_14[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t31, r3, r4\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tshr.s\t5, r3, r5\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_118\n\tsub!\tr5, r0, r2\n\tadd\tstack-[19], r0, r8\n\tjump.eq\t@.BB0_1116\n\tadd\tr0, r0, r2\n.BB0_125:\n\tshl.s\t5, r2, r6\n\tadd\tr8, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r2, r2\n\tsub!\tr2, r5, r6\n\tjump.lt\t@.BB0_125\n.BB0_1116:\n\tsub!\tr4, r0, r2\n\tjump.eq\t@.BB0_127\n\tshl.s\t5, r5, r2\n\tptr.add\tr1, r2, r1\n\tadd\tstack-[19], r2, r2\n\tshl.s\t3, r4, r4\n\tld.1\tr2, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr2, r1\n.BB0_127:\n\tadd\t31, r3, r1\n\tand\t@CPI0_15[0], r1, r2\n\tadd\tstack-[19], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_3[0], r1, r4\n\tjump.gt\t@.BB0_43\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_43\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[19], r0, r2\n\tld.1\tr2, r4\n\tsub.s!\t@CPI0_3[0], r4, r2\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[19], r3, r2\n\tadd\tstack-[19], r4, r3\n\tadd\t31, r3, r4\n\tadd\t@CPI0_16[0], r0, r5\n\tsub!\tr4, r2, r6\n\tadd\tr0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI0_16[0], r4, r4\n\tand\t@CPI0_16[0], r2, r7\n\tsub!\tr4, r7, r8\n\tadd.ge\tr0, r0, r5\n\txor\tr4, r7, r4\n\tsub.s!\t@CPI0_16[0], r4, r4\n\tadd.ne\tr6, r0, r5\n\tsub!\tr5, r0, r4\n\tjump.ne\t@.BB0_2\n\tld.1.inc\tr3, r4, r3\n\tadd\tr4, r0, stack-[9]\n\tsub.s!\t@CPI0_3[0], r4, r4\n\tjump.gt\t@.BB0_43\n\tadd\tstack-[9], r0, r4\n\tshl.s\t5, r4, r4\n\tadd\t63, r4, r5\n\tand\t@CPI0_22[0], r5, r5\n\tadd\tr5, r1, r5\n\tsub.s!\t@CPI0_3[0], r5, r6\n\tjump.gt\t@.BB0_43\n\tst.1\t64, r5\n\tadd\tstack-[9], r0, r5\n\tst.1.inc\tr1, r5, r5\n\tadd\tr5, r0, stack-[12]\n\tadd\tr4, r3, r4\n\tsub!\tr4, r2, r5\n\tjump.gt\t@.BB0_2\n\tsub!\tr3, r4, r5\n\tjump.ge\t@.BB0_147\n\tadd\t@CPI0_16[0], r0, r5\n\tadd\tr3, r0, r6\n\tadd\tstack-[12], r0, r7\n\tjump\t@.BB0_137\n.BB0_146:\n\tadd\tr11, r8, r8\n\tst.1\tr8, r0\n\tst.1.inc\tr7, r10, r7\n\tsub!\tr6, r4, r8\n\tjump.ge\t@.BB0_122\n.BB0_137:\n\tld.1.inc\tr6, r8, r6\n\tsub.s!\t@CPI0_3[0], r8, r9\n\tjump.gt\t@.BB0_2\n\tadd\tr8, r3, r8\n\tadd\t31, r8, r9\n\tsub!\tr9, r2, r10\n\tadd\tr0, r0, r10\n\tadd.ge\tr5, r0, r10\n\tand\t@CPI0_16[0], r9, r9\n\tand\t@CPI0_16[0], r2, r11\n\tsub!\tr9, r11, r12\n\tadd\tr0, r0, r12\n\tadd.lt\tr5, r0, r12\n\txor\tr9, r11, r9\n\tsub.s!\t@CPI0_16[0], r9, r9\n\tadd.ne\tr10, r0, r12\n\tsub!\tr12, r0, r9\n\tjump.ne\t@.BB0_2\n\tld.1.inc\tr8, r8, r9\n\tsub.s!\t@CPI0_3[0], r8, r10\n\tjump.gt\t@.BB0_43\n\tadd\t31, r8, r10\n\tand\tstack-[17], r10, r10\n\tadd\t63, r10, r10\n\tand\tstack-[17], r10, r11\n\tld.1\t64, r10\n\tadd\tr10, r11, r11\n\tsub!\tr11, r10, r12\n\tadd\t0, r0, r12\n\tadd.lt\t1, r0, r12\n\tsub.s!\t@CPI0_3[0], r11, r13\n\tjump.gt\t@.BB0_43\n\tand!\t1, r12, r12\n\tjump.ne\t@.BB0_43\n\tst.1\t64, r11\n\tst.1.inc\tr10, r8, r11\n\tadd\tr8, r9, r12\n\tsub!\tr12, r2, r12\n\tjump.gt\t@.BB0_2\n\tsub!\tr8, r0, r12\n\tjump.eq\t@.BB0_146\n\tadd\tr0, r0, r12\n.BB0_145:\n\tadd\tr12, r11, r13\n\tadd\tr12, r9, r14\n\tld.1\tr14, r14\n\tst.1\tr13, r14\n\tadd\t32, r12, r12\n\tsub!\tr12, r8, r13\n\tjump.lt\t@.BB0_145\n\tjump\t@.BB0_146\n.BB0_1050:\n\tsub.s\t256, r0, r4\n\tand\tr3, r4, r3\n\tst.1\tr2, r3\n\tsub!\tr1, r0, r1\n\tadd\t32, r0, r3\n\tadd.eq\t0, r0, r3\n.BB0_1054:\n\tadd\tstack-[14], r0, r4\n\tsub\tr2, r4, r1\n\tadd\tr1, r3, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr2, r0, r3\n\tadd.lt\tr4, r0, r3\n\tshl.s\t64, r3, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r3, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tsub!\tstack-[16], r0, r2\n\tjump.ne\t@.BB0_1057\n\tadd\t@CPI0_14[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tjump\t@.BB0_1055\n.BB0_1057:\n\tor\t@CPI0_28[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\tstack-[16], r0, r3\n\tadd\t@CPI0_14[0], r0, r4\n\tadd\tr0, r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\tstack-[16], r3, r4\n\tadd\tstack-[16], r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tadd\tstack-[14], r0, r9\n\tjump.eq\t@.BB0_1107\n\tadd\tr0, r0, r6\n.BB0_1059:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1059\n.BB0_1107:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_1055\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tstack-[14], r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB0_1055:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1061\n\tadd\tstack-[14], r0, r1\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tjump.gt\t@.BB0_43\n\tadd\tstack-[14], r0, r1\n\tst.1\t64, r1\n\tsub.s!\t@CPI0_19[0], r1, r1\n\tjump.gt\t@.BB0_43\n\tadd\tstack-[14], r0, r3\n\tadd\t64, r3, r1\n\tst.1\t64, r1\n\tadd\t@CPI0_77[0], r0, r1\n\tadd\tstack-[13], r0, r2\n\tst.1\tr2, r1\n\tadd\t31, r0, r1\n\tst.1\tr3, r1\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string_6256, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tadd\tstack-[14], r0, r1\n\tnear_call\tr0, @fun_log, @DEFAULT_UNWIND\n\tadd\t@CPI0_0[0], r0, r1\n\tadd\tstack-[16], r0, r3\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.ge\tr1, r0, r3\n\tmul\t@CPI0_78[0], r3, r1, r2\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1061:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1106\n\tadd\tr0, r0, r6\n.BB0_1063:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1063\n.BB0_1106:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_31\n\tjump\t@.BB0_30\n.BB0_118:\n\tld.1\t64, r2\n\tsub!\tr5, r0, r6\n\tjump.eq\t@.BB0_1117\n\tadd\tr0, r0, r6\n.BB0_120:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_120\n.BB0_1117:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_31\n\tjump\t@.BB0_30\n.BB0_122:\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[9]\n\tsub.s!\t@CPI0_23[0], r1, r1\n\tjump.gt\t@.BB0_43\n.BB0_147:\n\tadd\t16, r0, r2\n\tsload\tr2, r3\n\tadd\tstack-[9], r0, r1\n\tadd\tr2, r0, stack-[13]\n\tsstore\tr2, r1\n\tadd\tr3, r0, stack-[19]\n\tsub!\tr1, r3, r1\n\tjump.ge\t@.BB0_150\n\tadd\tstack-[13], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[9], r1, r2\n\tadd\tstack-[19], r1, r1\n\tadd\tr2, r0, stack-[19]\n\tadd\tr1, r0, stack-[14]\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB0_153\n.BB0_150:\n\tadd\tstack-[13], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tsub!\tstack-[9], r0, r2\n\tjump.ne\t@.BB0_152\n.BB0_164:\n\tadd\tstack-[8], r0, r1\n\tsload\tr1, r4\n\tand!\t1, r4, r5\n\tshr.s\t1, r4, r1\n\tand\t127, r1, r3\n\tadd.ne\tr1, r0, r3\n\tsub.s!\t31, r3, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\txor\tr4, r1, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_8\n\tld.1\t64, r2\n\tst.1.inc\tr2, r3, r1\n\tsub!\tr5, r0, r5\n\tjump.eq\t@.BB0_168\n\tadd\tstack-[8], r0, r4\n\tst.1\t0, r4\n\tsub!\tr3, r0, r4\n\tadd\tr0, r0, r4\n\tjump.eq\t@.BB0_166\n\tadd\t@CPI0_18[0], r0, r5\n\tadd\tr0, r0, r4\n.BB0_171:\n\tadd\tr1, r4, r6\n\tsload\tr5, r7\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r6\n\tjump.lt\t@.BB0_171\n\tjump\t@.BB0_166\n.BB0_162:\n\tadd\tstack-[19], r0, r2\n\tsstore\tr2, r0\n.BB0_156:\n\tsstore\tr1, r0\n.BB0_157:\n\tadd\tstack-[19], r0, r1\n\tadd\t1, r1, r1\n\tadd\tr1, r0, stack-[19]\n\tsub.s!\tstack-[14], r1, r1\n\tjump.ge\t@.BB0_150\n.BB0_153:\n\tadd\tstack-[19], r0, r1\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tadd\tr3, r0, stack-[16]\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_8\n\tsub!\tstack-[16], r0, r1\n\tjump.eq\t@.BB0_157\n\tadd\tstack-[16], r0, r1\n\tsub.s!\t31, r1, r1\n\tadd\tstack-[19], r0, r1\n\tjump.le\t@.BB0_156\n\tadd\tstack-[19], r0, r1\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[16], r0, r2\n\tadd\t31, r2, r2\n\tshr.s\t5, r2, r2\n\tadd\tr1, r2, r2\n\tadd\t1, r1, r3\n\tsub!\tr3, r2, r4\n\tjump.ge\t@.BB0_162\n.BB0_161:\n\tsstore\tr3, r0\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB0_161\n\tjump\t@.BB0_162\n.BB0_152:\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\tr0, r0, stack-[11]\n\tjump\t@.BB0_163\n.BB0_194:\n\tadd\tstack-[16], r0, r1\n\tshl.s\t1, r1, r1\n\tor\t1, r1, r1\n.BB0_186:\n\tadd\tstack-[14], r0, r2\n\tsstore\tr2, r1\n\tadd\t1, r2, stack-[14]\n\tadd\tstack-[11], r0, r2\n\tadd\t1, r2, r2\n\tadd\tr2, r0, stack-[11]\n\tsub.s!\tstack-[9], r2, r1\n\tjump.ge\t@.BB0_164\n.BB0_163:\n\tadd\tstack-[12], r0, r1\n\tld.1.inc\tr1, r2, r1\n\tadd\tr1, r0, stack-[12]\n\tadd\tr2, r0, stack-[19]\n\tld.1.inc\tr2, r1, r2\n\tadd\tr2, r0, stack-[10]\n\tadd\tr1, r0, stack-[16]\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tjump.gt\t@.BB0_43\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tadd\tr3, r0, stack-[13]\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_8\n\tadd\tstack-[13], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_185\n\tadd\tstack-[14], r0, r1\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[16], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[13], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_185\n.BB0_184:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_184\n.BB0_185:\n\tadd\tstack-[16], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_195\n\tadd\tstack-[14], r0, r1\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[16], r0, r3\n\tand!\tstack-[17], r3, r3\n\tld\tr1, r1\n\tjump.eq\t@.BB0_189\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_191:\n\tadd\tstack-[19], r2, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_191\n\tjump\t@.BB0_192\n.BB0_195:\n\tsub!\tstack-[16], r0, r1\n\tjump.eq\t@.BB0_196\n\tadd\tstack-[10], r0, r1\n\tld.1\tr1, r1\n\tjump\t@.BB0_198\n.BB0_196:\n\tadd\tr0, r0, r1\n.BB0_198:\n\tadd\tstack-[16], r0, r4\n\tshl.s\t3, r4, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r4, r2\n\tor\tr1, r2, r1\n\tjump\t@.BB0_186\n.BB0_189:\n\tadd\tstack-[15], r0, r2\n.BB0_192:\n\tsub.s!\tstack-[16], r3, r3\n\tjump.ge\t@.BB0_194\n\tadd\tstack-[16], r0, r3\n\tshl.s\t3, r3, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[19], r2, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n\tjump\t@.BB0_194\n.BB0_168:\n\tsub.s\t256, r0, r5\n\tand\tr4, r5, r4\n\tst.1\tr1, r4\n\tsub!\tr3, r0, r3\n\tadd\t32, r0, r4\n\tadd.eq\t0, r0, r4\n.BB0_166:\n\tadd\t63, r4, r3\n\tand\tstack-[17], r3, r3\n\tadd\tr3, r2, r4\n\tsub!\tr4, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI0_3[0], r4, r5\n\tjump.gt\t@.BB0_43\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_43\n\tst.1\t64, r4\n\tsub.s!\t@CPI0_19[0], r4, r3\n\tjump.gt\t@.BB0_43\n\tadd\t64, r4, r3\n\tst.1\t64, r3\n\tadd\tstack-[7], r0, r3\n\tst.1.inc\tr4, r3, r3\n\tadd\t@CPI0_24[0], r0, r5\n\tst.1\tr3, r5\n\tadd\t@CPI0_25[0], r0, r5\n\tld.1\t64, r7\n\tst.1\tr7, r5\n\tadd\t4, r7, r5\n\tadd\tstack-[6], r0, r6\n\tst.1\tr5, r6\n\tadd\t68, r7, r6\n\tld.1\tr2, r2\n\tst.1\tr6, r2\n\tadd\tr7, r0, stack-[19]\n\tadd\t100, r7, r6\n\tsub!\tr2, r0, r7\n\tjump.eq\t@.BB0_176\n\tadd\tr0, r0, r7\n.BB0_175:\n\tadd\tr7, r6, r8\n\tadd\tr1, r7, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tadd\t32, r7, r7\n\tsub!\tr7, r2, r8\n\tjump.lt\t@.BB0_175\n.BB0_176:\n\tadd\tr2, r6, r1\n\tst.1\tr1, r0\n\tadd\t31, r2, r1\n\tand\tstack-[17], r1, r1\n\tadd\tr1, r6, r1\n\tsub\tr1, r5, r2\n\tadd\tstack-[19], r0, r5\n\tadd\t36, r5, r5\n\tst.1\tr5, r2\n\tld.1\tr4, r2\n\tst.1.inc\tr1, r2, r1\n\tsub!\tr2, r0, r4\n\tjump.eq\t@.BB0_199\n\tadd\tr0, r0, r4\n.BB0_178:\n\tadd\tr4, r1, r5\n\tadd\tr4, r3, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB0_178\n.BB0_199:\n\tadd\t31, r2, r3\n\tand\tstack-[17], r3, r3\n\tadd\tr2, r1, r2\n\tst.1\tr2, r0\n\tadd\tstack-[19], r0, r4\n\tsub\tr1, r4, r1\n\tadd\tr1, r3, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr2, r0, r3\n\tadd.lt\tr4, r0, r3\n\tshl.s\t64, r3, r3\n\tor\tr1, r3, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tadd\t@CPI0_14[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1115\n\tadd\tr0, r0, r7\n.BB0_201:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[19], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_201\n.BB0_1115:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_203\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[19], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_203:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_204\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[19], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_3[0], r1, r4\n\tjump.gt\t@.BB0_43\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_43\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[19], r0, r2\n\tld.1\tr2, r2\n\tadd\t17, r0, r3\n\tadd\tr3, r0, stack-[7]\n\tsstore\tr3, r2\n\tsub.s!\t@CPI0_3[0], r2, r3\n\tjump.gt\t@.BB0_43\n\tshl.s\t5, r2, r3\n\tadd\t63, r3, r4\n\tand\t@CPI0_22[0], r4, r4\n\tadd\tr4, r1, r4\n\tsub.s!\t@CPI0_3[0], r4, r5\n\tjump.gt\t@.BB0_43\n\tst.1\t64, r4\n\tst.1.inc\tr1, r2, r2\n\tadd\tr2, r0, stack-[19]\n\tand\t31, r3, r2\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB0_1113\n\tadd\tstack[@calldatasize], r0, r4\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tadd\tr0, r0, r5\n.BB0_215:\n\tshl.s\t5, r5, r6\n\tadd\tstack-[19], r6, r7\n\tptr.add\tr4, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_215\n.BB0_1113:\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_217\n.BB0_217:\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[16]\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tjump.gt\t@.BB0_43\n\tadd\t18, r0, r2\n\tsload\tr2, r3\n\tadd\tstack-[16], r0, r1\n\tadd\tr2, r0, stack-[15]\n\tsstore\tr2, r1\n\tadd\tr3, r0, stack-[14]\n\tsub!\tr1, r3, r1\n\tjump.ge\t@.BB0_222\n\tadd\tstack-[15], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r2\n\tadd\tstack-[16], r2, r1\n\tadd\tstack-[14], r2, r2\n\tsub!\tr1, r2, r3\n\tjump.ge\t@.BB0_222\n.BB0_225:\n\tsstore\tr1, r0\n\tadd\t1, r1, r1\n\tsub!\tr1, r2, r3\n\tjump.lt\t@.BB0_225\n.BB0_222:\n\tadd\tstack-[15], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsub!\tstack-[16], r0, r2\n\tjump.eq\t@.BB0_227\n\tadd\tr0, r0, r2\n.BB0_226:\n\tadd\tr2, r1, r3\n\tadd\tstack-[19], r0, r5\n\tld.1.inc\tr5, r4, r5\n\tadd\tr5, r0, stack-[19]\n\tsstore\tr3, r4\n\tadd\t1, r2, r2\n\tsub.s!\tstack-[16], r2, r3\n\tjump.lt\t@.BB0_226\n.BB0_227:\n\tadd\tstack-[7], r0, r1\n\tsload\tr1, r2\n\tsub.s!\t@CPI0_3[0], r2, r1\n\tjump.gt\t@.BB0_43\n\tshl.s\t5, r2, r1\n\tadd\t63, r1, r3\n\tand\t@CPI0_22[0], r3, r3\n\tld.1\t64, r4\n\tadd\tr4, r3, r3\n\tadd\tr4, r0, stack-[13]\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_3[0], r3, r5\n\tjump.gt\t@.BB0_43\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_43\n\tst.1\t64, r3\n\tadd\tstack-[13], r0, r3\n\tst.1.inc\tr3, r2, r3\n\tsub!\tr2, r0, r2\n\tadd\tr0, r0, stack-[10]\n\tjump.eq\t@.BB0_234\n\tadd\tr0, r0, r2\n.BB0_232:\n\tadd\tr3, r2, r4\n\tadd\tstack-[18], r0, r5\n\tst.1\tr4, r5\n\tadd\t32, r2, r2\n\tsub!\tr2, r1, r4\n\tjump.lt\t@.BB0_232\n\tadd\tstack-[13], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[10]\n\tsub.s!\t@CPI0_23[0], r1, r1\n\tjump.gt\t@.BB0_43\n.BB0_234:\n\tadd\t19, r0, r2\n\tsload\tr2, r3\n\tadd\tstack-[10], r0, r1\n\tadd\tr2, r0, stack-[14]\n\tsstore\tr2, r1\n\tadd\tr3, r0, stack-[19]\n\tsub!\tr1, r3, r1\n\tjump.ge\t@.BB0_237\n\tadd\tstack-[14], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[10], r1, r2\n\tadd\tstack-[19], r1, r1\n\tadd\tr2, r0, stack-[19]\n\tadd\tr1, r0, stack-[15]\n\tsub!\tr2, r1, r1\n\tjump.lt\t@.BB0_240\n.BB0_237:\n\tadd\tstack-[14], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tsub!\tstack-[10], r0, r2\n\tjump.ne\t@.BB0_239\n.BB0_251:\n\tadd\tstack-[7], r0, r1\n\tsload\tr1, r2\n\tsub.s!\t@CPI0_3[0], r2, r1\n\tjump.gt\t@.BB0_43\n\tshl.s\t5, r2, r1\n\tadd\t63, r1, r3\n\tand\t@CPI0_22[0], r3, r3\n\tld.1\t64, r4\n\tadd\tr4, r3, r3\n\tadd\tr4, r0, stack-[7]\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_3[0], r3, r5\n\tjump.gt\t@.BB0_43\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_43\n\tst.1\t64, r3\n\tadd\tstack-[7], r0, r3\n\tst.1.inc\tr3, r2, r3\n\tsub!\tr2, r0, r2\n\tadd\tr0, r0, stack-[9]\n\tjump.eq\t@.BB0_279\n\tadd\tr0, r0, r2\n.BB0_256:\n\tadd\tr3, r2, r4\n\tadd\tstack-[18], r0, r5\n\tst.1\tr4, r5\n\tadd\t32, r2, r2\n\tsub!\tr2, r1, r4\n\tjump.lt\t@.BB0_256\n\tadd\tstack-[7], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[9]\n\tsub.s!\t@CPI0_26[0], r1, r1\n\tjump.lt\t@.BB0_279\n.BB0_258:\n\tadd\t@CPI0_27[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tadd\tstack-[29], r0, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tadd\tstack-[25], r0, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t96, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_249:\n\tadd\tstack-[19], r0, r2\n\tsstore\tr2, r0\n.BB0_243:\n\tsstore\tr1, r0\n.BB0_244:\n\tadd\tstack-[19], r0, r1\n\tadd\t1, r1, r1\n\tadd\tr1, r0, stack-[19]\n\tsub.s!\tstack-[15], r1, r1\n\tjump.ge\t@.BB0_237\n.BB0_240:\n\tadd\tstack-[19], r0, r1\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tadd\tr3, r0, stack-[16]\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_8\n\tsub!\tstack-[16], r0, r1\n\tjump.eq\t@.BB0_244\n\tadd\tstack-[16], r0, r1\n\tsub.s!\t31, r1, r1\n\tadd\tstack-[19], r0, r1\n\tjump.le\t@.BB0_243\n\tadd\tstack-[19], r0, r1\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[16], r0, r2\n\tadd\t31, r2, r2\n\tshr.s\t5, r2, r2\n\tadd\tr1, r2, r2\n\tadd\t1, r1, r3\n\tsub!\tr3, r2, r4\n\tjump.ge\t@.BB0_249\n.BB0_248:\n\tsstore\tr3, r0\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB0_248\n\tjump\t@.BB0_249\n.BB0_204:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1114\n\tadd\tr0, r0, r6\n.BB0_206:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_206\n.BB0_1114:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_31\n\tjump\t@.BB0_30\n.BB0_239:\n\tadd\tstack-[30], r0, stack-[9]\n\tadd\tstack-[32], r0, stack-[8]\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tadd\tr0, r0, stack-[12]\n\tjump\t@.BB0_250\n.BB0_274:\n\tadd\tstack-[16], r0, r1\n\tshl.s\t1, r1, r1\n\tor\t1, r1, r1\n.BB0_266:\n\tadd\tstack-[15], r0, r2\n\tsstore\tr2, r1\n\tadd\t1, r2, stack-[15]\n\tadd\tstack-[12], r0, r2\n\tadd\t1, r2, r2\n\tadd\tr2, r0, stack-[12]\n\tsub.s!\tstack-[10], r2, r1\n\tjump.ge\t@.BB0_251\n.BB0_250:\n\tadd\tstack-[13], r0, r1\n\tadd\t32, r1, r1\n\tadd\tr1, r0, stack-[13]\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[19]\n\tld.1.inc\tr1, r2, r1\n\tadd\tr1, r0, stack-[11]\n\tadd\tr2, r0, stack-[16]\n\tsub.s!\tstack-[8], r2, r1\n\tjump.gt\t@.BB0_258\n\tadd\tstack-[15], r0, r1\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tadd\tr3, r0, stack-[14]\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_8\n\tadd\tstack-[14], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_265\n\tadd\tstack-[15], r0, r1\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[16], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[14], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_265\n.BB0_264:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_264\n.BB0_265:\n\tadd\tstack-[16], r0, r2\n\tsub.s!\tstack-[9], r2, r1\n\tjump.le\t@.BB0_275\n\tadd\tstack-[15], r0, r1\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[16], r0, r3\n\tand!\tstack-[17], r3, r3\n\tld\tr1, r1\n\tjump.eq\t@.BB0_269\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_271:\n\tadd\tstack-[19], r2, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_271\n\tjump\t@.BB0_272\n.BB0_275:\n\tsub!\tstack-[16], r0, r1\n\tjump.eq\t@.BB0_276\n\tadd\tstack-[11], r0, r1\n\tld.1\tr1, r1\n\tjump\t@.BB0_278\n.BB0_269:\n\tadd\t32, r0, r2\n.BB0_272:\n\tsub.s!\tstack-[16], r3, r3\n\tjump.ge\t@.BB0_274\n\tadd\tstack-[16], r0, r3\n\tshl.s\t3, r3, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\tstack-[19], r2, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n\tjump\t@.BB0_274\n.BB0_276:\n\tadd\tr0, r0, r1\n.BB0_278:\n\tadd\tstack-[16], r0, r5\n\tshl.s\t3, r5, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r4\n\txor\tr4, r3, r4\n\tsub.s!\t255, r2, r2\n\tadd.le\tr4, r0, r3\n\tand\tr1, r3, r1\n\tshl.s\t1, r5, r2\n\tor\tr1, r2, r1\n\tjump\t@.BB0_266\n.BB0_279:\n\tadd\t20, r0, r1\n\tsload\tr1, r5\n\tadd\tstack-[9], r0, r3\n\tadd\tr1, r0, stack-[8]\n\tsstore\tr1, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tadd\tstack-[28], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r1\n\tadd\tr4, r0, stack-[19]\n\tadd\tr2, r0, r1\n\tadd.lt\tr4, r0, r1\n\tadd\tr5, r0, stack-[17]\n\tsub!\tr3, r5, r3\n\tjump.ge\t@.BB0_280\n\tadd\tstack-[8], r0, r3\n\tst.1\t0, r3\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t192, r3, r2\n\tshl.s\t96, r1, stack-[11]\n\tor\tstack-[11], r2, r1\n\tor\t@CPI0_28[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[9], r1, r2\n\tadd\tstack-[17], r1, r1\n\tadd\tr2, r0, stack-[17]\n\tadd\tr1, r0, stack-[13]\n\tsub!\tr2, r1, r1\n\tjump.ge\t@.BB0_284\n\tadd\tstack-[27], r0, stack-[15]\n\tadd\t@CPI0_0[0], r0, r2\n\tadd\tstack-[31], r0, r3\n\tsub.s!\t@CPI0_0[0], r3, r1\n\tadd\tr3, r0, stack-[14]\n\tadd\tr2, r0, r1\n\tadd.lt\tr3, r0, r1\n\tadd\tstack-[30], r0, stack-[12]\n\tshl.s\t64, r1, stack-[10]\n\tjump\t@.BB0_287\n.BB0_296:\n\tadd\tstack-[17], r0, r2\n\tadd\tstack-[14], r0, r3\n\tsstore\tr2, r3\n.BB0_290:\n\tadd\tstack-[14], r0, r2\n\tsstore\tr1, r2\n.BB0_291:\n\tadd\tstack-[15], r0, r2\n\tadd\tstack-[17], r2, r1\n\tadd\tr1, r0, stack-[17]\n\tsub.s!\tstack-[13], r1, r1\n\tjump.ge\t@.BB0_284\n.BB0_287:\n\tadd\tstack-[17], r0, r1\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tadd\tr3, r0, stack-[16]\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_8\n\tsub!\tstack-[16], r0, r1\n\tjump.eq\t@.BB0_291\n\tadd\tstack-[16], r0, r2\n\tsub.s!\tstack-[12], r2, r1\n\tadd\tstack-[17], r0, r1\n\tjump.le\t@.BB0_290\n\tadd\tstack-[17], r0, r1\n\tadd\tstack-[14], r0, r2\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[10], r1, r1\n\tor\tstack-[11], r1, r1\n\tor\t@CPI0_28[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[16], r0, r3\n\tadd\tstack-[12], r3, r3\n\tld\tr1, r1\n\tadd\tstack-[15], r1, r2\n\tshr.s\t5, r3, r3\n\tadd\tr1, r3, r3\n\tsub!\tr2, r3, r4\n\tjump.ge\t@.BB0_296\n.BB0_295:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r3, r4\n\tjump.lt\t@.BB0_295\n\tjump\t@.BB0_296\n.BB0_280:\n\tshl.s\t96, r1, stack-[11]\n.BB0_284:\n\tadd\tstack-[31], r0, r4\n\tadd\tstack-[8], r0, r1\n\tst.1\tr4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[12]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tadd\tr1, r0, stack-[4]\n\tor\tstack-[11], r1, stack-[6]\n\tshl.s\t192, r2, r1\n\tor\tstack-[6], r1, r1\n\tor\t@CPI0_28[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[32], r0, stack-[8]\n\tadd\tstack-[12], r0, r3\n\tsub.s!\tstack-[9], r3, r2\n\tjump.ge\t@.BB0_298\n\tadd\tstack-[7], r0, r3\n\tadd\tstack-[19], r3, stack-[13]\n\tadd\tstack-[27], r0, stack-[17]\n\tadd\tstack-[26], r0, stack-[5]\n\tadd\tstack-[30], r0, stack-[7]\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\tstack-[12], r0, stack-[10]\n\tjump\t@.BB0_297\n.BB0_316:\n\tadd\tstack-[17], r0, r3\n\tshl\tstack-[15], r3, r1\n\tsub.s!\t255, r3, r2\n\tadd.gt\tr0, r0, r1\n\tadd\tr1, r3, r1\n.BB0_308:\n\tadd\tstack-[14], r0, r3\n\tsstore\tr3, r1\n\tadd\tstack-[13], r0, r2\n\tadd\tstack-[19], r2, stack-[13]\n\tadd\tstack-[17], r3, stack-[14]\n\tadd\tstack-[10], r0, r2\n\tadd\tstack-[17], r2, r2\n\tadd\tr2, r0, stack-[10]\n\tsub.s!\tstack-[9], r2, r1\n\tjump.ge\t@.BB0_298\n.BB0_297:\n\tadd\tstack-[13], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[16]\n\tld.1\tr1, r2\n\tadd\tr2, r0, stack-[15]\n\tsub.s!\tstack-[8], r2, r1\n\tjump.gt\t@.BB0_300\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tadd\tr3, r0, stack-[11]\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_8\n\tadd\tstack-[11], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_307\n\tadd\tstack-[14], r0, r1\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[15], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[11], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_307\n.BB0_306:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_306\n.BB0_307:\n\tadd\tstack-[15], r0, r2\n\tsub.s!\tstack-[7], r2, r1\n\tjump.le\t@.BB0_317\n\tadd\tstack-[12], r0, r1\n\tadd\tstack-[14], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[6], r1, r1\n\tor\t@CPI0_28[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[15], r0, r3\n\tand\tstack-[5], r3, r2\n\tld\tr1, r1\n\tsub!\tstack-[12], r2, r3\n\tjump.ge\t@.BB0_311\n\tadd\tstack-[12], r0, r4\n\tadd\tstack-[19], r0, r3\n.BB0_313:\n\tadd\tstack-[16], r3, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\tstack-[19], r3, r3\n\tadd\tstack-[19], r4, r4\n\tadd\tstack-[17], r1, r1\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB0_313\n\tjump\t@.BB0_314\n.BB0_317:\n\tsub!\tstack-[15], r0, r1\n\tadd\tstack-[12], r0, r1\n\tjump.eq\t@.BB0_319\n\tadd\tstack-[16], r0, r2\n\tadd\tstack-[19], r2, r1\n\tld.1\tr1, r1\n.BB0_319:\n\tadd\tstack-[15], r0, r5\n\tshl.s\t3, r5, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r4\n\txor\tr4, r3, r4\n\tsub.s!\t255, r2, r2\n\tadd.le\tr4, r0, r3\n\tand\tr1, r3, r1\n\tshl.s\t1, r5, r2\n\tor\tr1, r2, r1\n\tjump\t@.BB0_308\n.BB0_311:\n\tadd\tstack-[19], r0, r3\n.BB0_314:\n\tsub.s!\tstack-[15], r2, r2\n\tjump.ge\t@.BB0_316\n\tadd\tstack-[15], r0, r2\n\tshl.s\t3, r2, r2\n\tand\t248, r2, r2\n\tsub.s\t1, r0, r4\n\tshr\tr4, r2, r2\n\txor\tr2, r4, r2\n\tadd\tstack-[16], r3, r3\n\tld.1\tr3, r3\n\tand\tr3, r2, r2\n\tsstore\tr1, r2\n\tjump\t@.BB0_316\n.BB0_298:\n\tld.1\t64, r1\n\tsub.s\t133, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.gt\t@.BB0_300\n\tadd\t132, r1, r2\n\tsub.s!\tstack-[8], r2, r2\n\tjump.gt\t@.BB0_300\n\tadd\t36, r1, r2\n\tadd\t@CPI0_29[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tcontext.gas_left\tr3\n\tadd\tstack-[18], r0, r4\n\tst.1\tr2, r4\n\tadd\t@CPI0_5[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t100, r1, r2\n\tst.1\tr2, r0\n\tadd\t4, r1, r2\n\tst.1\tr2, r0\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tor\t@CPI0_30[0], r1, r1\n\tsub!\tstack-[12], r0, r2\n\tjump.ne\t@.BB0_323\n\tadd\t32774, r0, r2\n\tjump\t@.BB0_324\n.BB0_300:\n\tadd\t@CPI0_27[0], r0, r1\n\tadd\tstack-[12], r0, r2\n\tst.1\tr2, r1\n\tadd\t65, r0, r1\n\tadd\tstack-[29], r0, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tadd\tstack-[25], r0, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t96, r2, r1\n\tor\tstack-[4], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_323:\n\tadd\t32777, r0, r2\n\tadd\t32774, r0, r4\n\tadd\t1, r0, r5\n\tadd\tstack-[12], r0, r3\n.BB0_324:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_321\n\tld\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_329\n\tadd\tstack[@returndatasize], r0, r1\n\tjump\t@.BB0_328\n.BB0_321:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand\t@CPI0_0[0], r1, r1\n.BB0_328:\n\tadd\tstack-[12], r1, r2\n\tsub!\tr2, r1, r2\n\tjump.gt\t@.BB0_2\n\tld.1\t64, r2\n\tand\t31, r1, r3\n\tadd\tstack-[12], r0, r4\n\tptr.add\tstack[@ptr_return_data], r4, r4\n\tshr.s!\t5, r1, r5\n\tjump.eq\t@.BB0_1112\n\tadd\tr0, r0, r6\n.BB0_332:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr4, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_332\n.BB0_1112:\n\tsub!\tr3, r0, r6\n\tjump.eq\t@.BB0_334\n\tshl.s\t5, r5, r5\n\tptr.add\tr4, r5, r4\n\tadd\tr2, r5, r5\n\tshl.s\t3, r3, r3\n\tld.1\tr5, r6\n\tshl\tr6, r3, r6\n\tshr\tr6, r3, r6\n\tld\tr4, r4\n\tsub\t256, r3, r3\n\tshr\tr4, r3, r4\n\tshl\tr4, r3, r3\n\tor\tr3, r6, r3\n\tst.1\tr5, r3\n.BB0_334:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tshl.s\t64, r2, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_329:\n\tand\t@CPI0_31[0], r1, r1\n\tadd\t22, r0, r2\n\tsload\tr2, r3\n\tand\t@CPI0_32[0], r3, r3\n\tor\tr3, r1, r1\n\tsstore\tr2, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_33[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\ncopy_array_from_storage_to_memory_string_6256:\n.func_begin1:\n\tadd\t13, r0, r5\n\tsload\tr5, r4\n\tand!\t1, r4, r6\n\tshr.s\t1, r4, r1\n\tand\t127, r1, r2\n\tadd.ne\tr1, r0, r2\n\tsub.s!\t31, r2, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tsub!\tr6, r1, r1\n\tjump.ne\t@.BB1_1\n\tld.1\t64, r1\n\tst.1.inc\tr1, r2, r3\n\tsub!\tr6, r0, r6\n\tjump.eq\t@.BB1_8\n\tst.1\t0, r5\n\tsub!\tr2, r0, r4\n\tjump.eq\t@.BB1_10\n\tadd\t@CPI1_0[0], r0, r5\n\tadd\tr0, r0, r4\n.BB1_12:\n\tadd\tr3, r4, r6\n\tsload\tr5, r7\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tadd\t32, r4, r4\n\tsub!\tr4, r2, r6\n\tjump.lt\t@.BB1_12\n\tjump\t@.BB1_4\n.BB1_8:\n\tsub.s\t256, r0, r5\n\tand\tr4, r5, r4\n\tst.1\tr3, r4\n\tsub!\tr2, r0, r2\n\tadd\t32, r0, r4\n\tadd.eq\t0, r0, r4\n\tjump\t@.BB1_4\n.BB1_10:\n\tadd\tr0, r0, r4\n.BB1_4:\n\tadd\t63, r4, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r3\n\tadd\tr3, r1, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI1_1[0], r2, r4\n\tjump.gt\t@.BB1_6\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB1_6\n\tst.1\t64, r2\n\tret\n.BB1_1:\n\tadd\t@CPI1_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_6:\n\tadd\t@CPI1_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\nfun_log:\n.func_begin2:\n\tld.1\t64, r3\n\tadd\t32, r3, r4\n\tadd\t@CPI2_0[0], r0, r5\n\tst.1\tr4, r5\n\tadd\t36, r3, r5\n\tadd\t64, r0, r6\n\tst.1\tr5, r6\n\tadd\t100, r3, r6\n\tld.1.inc\tr1, r1, r7\n\tst.1\tr6, r1\n\tadd\t132, r3, r6\n\tsub!\tr1, r0, r8\n\tjump.eq\t@.BB2_3\n\tadd\tr0, r0, r8\n.BB2_2:\n\tadd\tr8, r6, r9\n\tadd\tr7, r8, r10\n\tld.1\tr10, r10\n\tst.1\tr9, r10\n\tadd\t32, r8, r8\n\tsub!\tr8, r1, r9\n\tjump.lt\t@.BB2_2\n.BB2_3:\n\tadd\tr1, r6, r7\n\tst.1\tr7, r0\n\tadd\t31, r1, r7\n\tsub.s\t32, r0, r1\n\tand\tr7, r1, r7\n\tadd\tr7, r6, r7\n\tsub\tr7, r5, r5\n\tadd\t68, r3, r6\n\tst.1\tr6, r5\n\tld.1.inc\tr2, r2, r6\n\tst.1.inc\tr7, r2, r5\n\tsub!\tr2, r0, r7\n\tjump.eq\t@.BB2_6\n\tadd\tr0, r0, r7\n.BB2_5:\n\tadd\tr7, r5, r8\n\tadd\tr6, r7, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tadd\t32, r7, r7\n\tsub!\tr7, r2, r8\n\tjump.lt\t@.BB2_5\n.BB2_6:\n\tadd\tr2, r5, r6\n\tst.1\tr6, r0\n\tsub\tr5, r3, r5\n\tadd\t31, r2, r2\n\tand\tr2, r1, r2\n\tadd\tr5, r2, r2\n\tsub.s\t32, r2, r5\n\tst.1\tr3, r5\n\tadd\t31, r2, r2\n\tand\tr2, r1, r2\n\tadd\tr2, r3, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI2_1[0], r1, r5\n\tjump.gt\t@.BB2_8\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB2_8\n\tst.1\t64, r1\n\tadd\t@CPI2_2[0], r0, r1\n\tsub.s!\t@CPI2_2[0], r4, r2\n\tadd.ge\tr1, r0, r4\n\tshl.s\t64, r4, r2\n\tld.1\tr3, r3\n\tsub.s!\t@CPI2_2[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r2, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI2_2[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t192, r3, r1\n\tor\tr2, r1, r1\n\tadd\t@CPI2_3[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI2_2[0], r2, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tret\n.BB2_8:\n\tadd\t@CPI2_4[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI2_5[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\n__cxa_throw:\n.func_begin3:\n\trevert\n.func_end3:\n\n__farcall:\n.func_begin4:\n.tmp0:\n\tfar_call\tr1, r2, @.BB4_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB4_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end4:\n\n__staticcall:\n.func_begin5:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB5_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB5_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end5:\n\n\t.data\n\t.p2align\t5, 0x0\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5, 0x0\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5, 0x0\nptr_calldata:\n.cell\t0\n\n\t.p2align\t5, 0x0\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI2_2:\n\t.cell 4294967295\nCPI0_1:\n\t.cell -16711936\nCPI0_2:\n\t.cell 65537\nCPI0_3:\nCPI1_1:\nCPI2_1:\n\t.cell 18446744073709551615\nCPI0_4:\n\t.cell 452319361906798473685255976306323023213791564016863997073682269681200138357\nCPI0_5:\n\t.cell -45094662312588414058508742492242807367897819822786606328124609013070528553987\nCPI0_6:\n\t.cell 904625697166532776746648320380374280103671765658434360802338178844445376512\nCPI0_7:\n\t.cell 24519928653854221733733552434404946937899825954920857600\nCPI0_8:\n\t.cell -24519928653854221733733552434404946937899825954920857601\nCPI0_9:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_10:\n\t.cell 21462577653289338227930266634543248136216730678270685489138693235155803308082\nCPI0_11:\n\t.cell 21462577653289338227930266634543248138267750143643016337306602796380739076148\nCPI0_12:\n\t.cell -17554281955434806763886501633030204034674432885377385521715782558337304887296\nCPI0_13:\n\t.cell 316912650057057350374175801344\nCPI0_14:\n\t.cell 645326474426547203313410069153905908525362434349\nCPI0_15:\n\t.cell 8589934560\nCPI0_16:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_17:\n\t.cell 43863269468009334158894487264628454438510617549146491680844421517880510644224\nCPI0_18:\n\t.cell -51985879905773483620722137737738627760414206467914438128783404424367696066558\nCPI0_19:\n\t.cell 18446744073709551551\nCPI0_20:\n\t.cell 21012183435850384541041771017201488416548058024417326882891859152563943243776\nCPI0_21:\n\t.cell 33273022039265036019172420781531280749936772873501897185329787521151459655680\nCPI0_22:\n\t.cell 57896044618658097711785492504343953926634992332820282019728792003956564819936\nCPI0_23:\n\t.cell 18446744073709551616\nCPI0_24:\n\t.cell 20982078154033639438710524567257112458071292883762743312012453023672417910784\nCPI0_25:\n\t.cell -37149928529710419209315593663899727186979467347015644422677355303248272031744\nCPI0_26:\n\t.cell 18446744073709551617\nCPI0_27:\nCPI1_2:\nCPI2_4:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_28:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_29:\n\t.cell 452360980789173628027150369975556836324131455867447454853460747452907932199\nCPI0_30:\n\t.cell 904625697166532776746648320380374280103671765658434358441154937409622769664\nCPI0_31:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_32:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_33:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_34:\n\t.cell 4174167879\nCPI0_35:\n\t.cell 3225444902\nCPI0_36:\n\t.cell 3198838878\nCPI0_37:\n\t.cell 16711680\nCPI0_38:\n\t.cell 2535301202817642044428229017600\nCPI0_39:\n\t.cell 32293425730052982538371609971854539554715390562869101404773867546250159783936\nCPI0_40:\nCPI1_0:\n\t.cell -18222204631399970372167772352131399898251735888382245143694825983719597334859\nCPI0_41:\n\t.cell 18446744073709551423\nCPI0_42:\nCPI2_0:\n\t.cell 34086472297197132054457081643594089646359731274536790467922792813265611128832\nCPI0_43:\nCPI2_3:\n\t.cell 120209876281281145568259943\nCPI0_44:\n\t.cell 12396694973890998440467380340983585058878106250672390494374587083972727727730\nCPI0_45:\n\t.cell 44051724277807311729144803670231755545083827147360561417105375587794285494272\nCPI0_46:\n\t.cell 53106884545495858145776006984348502397303611252286170781488593277935679438848\nCPI0_47:\n\t.cell 47493978776928217725307712957235826002007253891642230889376877894222282227712\nCPI0_48:\nCPI1_3:\nCPI2_5:\n\t.cell 2852213850513516153367582212096\nCPI0_49:\n\t.cell 21015551381907254154935540377082367769777040362633995486300192257039619063808\nCPI0_50:\n\t.cell 20806391034830253865172911368748608442384450369607288850840034626421890482176\nCPI0_51:\n\t.cell 33366870799851040750925807626397859913175453413271115509921698356987831517184\nCPI0_52:\n\t.cell -2457205970692910682949769636018740840248249103974785678450766966848602767360\nCPI0_53:\n\t.cell 13615146381292573131216079373102823451012695786921808022264469017545200893952\nCPI0_54:\n\t.cell 39256486127904821873272539746935602128366479194964728906943746336117193965568\nCPI0_55:\n\t.cell -30965028173862571133595279324966194794306114244556548824848312908903192185788\nCPI0_56:\n\t.cell 41160469221077241341972498577307029744717064861614419248400938065312870301696\nCPI0_57:\n\t.cell 15378636851831057204693021446466362761762419838405387411490460376050962530304\nCPI0_58:\n\t.cell 15456378122681306115194686536499051176458829129867914645647811048907837800448\nCPI0_59:\n\t.cell 42065094918243774118719146897687404024820736616814736154959200440374691627008\nCPI0_60:\n\t.cell 46529144392117707452946260303848603952187628831689540306122340668716214558864\nCPI0_61:\n\t.cell -32394467446283984592777049099417522150303059119709654111118499251412547928064\nCPI0_62:\n\t.cell -35686598216027510145880324688361411068492892187551941427063507374565161435136\nCPI0_63:\n\t.cell 20822002838986587454761368375843109247997156125376627110308957218423344988160\nCPI0_64:\n\t.cell 55634480375741765769918871703393018226375812944819489753333136066302011506688\nCPI0_65:\n\t.cell 15564918017614404012289752977726190926820320126835102094348594659586763390976\nCPI0_66:\n\t.cell 19901765337663721088426263048368234162280778614406971944281772251360069156864\nCPI0_67:\n\t.cell 15577313526455530168986079472397249391845238805848868303743926230472296759296\nCPI0_68:\n\t.cell 15580826515844672862684829760390378735146683654243938544202798773788058058752\nCPI0_69:\n\t.cell 15570156037078909227600697888718234847950978756388409875412815218327167172608\nCPI0_70:\n\t.cell 56539106072908298546665520023773392506479484700019806659891398441363832832000\nCPI0_71:\n\t.cell -22422204959817597763980038832690459514467865798154586405489039026799495293716\nCPI0_72:\n\t.cell 38878206584692966203415385907871375197469080758325516314230789535345649042549\nCPI0_73:\n\t.cell -30991751765622274519320752134368064134869217946116313751679903837235273743363\nCPI0_74:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI0_75:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI0_76:\n\t.cell -53602533162831209145513596235260761022955450233113998444001292662928113139712\nCPI0_77:\n\t.cell 30897394824352389060121493337499122001474081933046959287347475669580484276992\nCPI0_78:\n\t.cell 79228162532711081667253501952\nCPI0_79:\n\t.cell -28834266701563273431823934408703353723064231390119340642120452995784432943104\nCPI0_80:\n\t.cell 316912652418240591808998408192\n","methodIdentifiers":{"IS_SCRIPT()":"f8ccbf47","run()":"c0406226","runScript()":"beaa685e"},"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"jump_table_density_threshold":null,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"run\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"runScript\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"run()\":{\"details\":\"Read the input file and generate the Merkle proof, then write the output file\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"script/TestMerkle.s.sol\":\"MakeMerkle\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":murky/=lib/murky/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x2315be74cc2826f9da401bea3da46a10ad6a6efdf73176d79160b453286d0ed2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af0d4dc826911d6cb4d6272ed5cbdb6950e1476141cca328e178b808d848789c\",\"dweb:/ipfs/QmV2ytjUEkV84VtdMs1nZqQTBoVE987cHboQMpiha5yo3e\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x2ba8ee7e4a68efd4cd75331b229874f4d4dc0a1010599afad88fc2cae5cb5d4a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77ce1968d402b0414fec0a344b59c275d0706d4df5ac6293d605dd2202016345\",\"dweb:/ipfs/QmSVy4N4F15NzEuSpmvwRj1nTfAwaJpng7CywUBWLnWC4w\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2\",\"dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x62bed173cb126f6d5006706cf249bac8a2d51bfa18f773f314784ff18adc622d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5acc33dddbf2492e37dc32e89cd56ce917272d303a6874805f3a5768a6bfbf54\",\"dweb:/ipfs/QmTsgFhcpUf16gAVazUXU3WspgX8nHke2hzVCvoqS25WEp\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678\",\"dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x4a5853bb9688c4e1c65626036cddd8ea2af84ef1046b704ddc3782d84a892410\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09c1024e6aac9657312fcfcf5c3dee62c22edf9f74a1065e6924c4ec710ecafa\",\"dweb:/ipfs/QmRNURoTUkd6DiZnf8yY8o3stJpVQBifopdSpQgP9RhvRr\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xf92ea94fe38f8370a8dc5f591ebfb4958869e18d877469ce422162cc88c8b063\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://620b5d4b2ff24d66120ce9dbb72fbde7276f2e8b3bb93f626874183aee01e307\",\"dweb:/ipfs/Qmcyc8co7vCiJ7gUd3jj5Hc1rRPihjt3WSKs5ut6eiU1Ze\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/mocks/MockERC20.sol\":{\"keccak256\":\"0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f\",\"dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw\"]},\"lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0x3293dcbb7acd28df553c954e4e39e288bf10aab7ecda8d50ef21b4f4a91a28d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9eb374daf6df34f4392f8926f1fddbce9f22c423066aeaefdfbe77395f77967b\",\"dweb:/ipfs/QmWR81zBJRX2uyRjveGzikYPj6ZwKppWsU49YEQXTLWUsN\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/murky/script/Merkle.s.sol\":{\"keccak256\":\"0x06710e049eb1f1d4a9a93cf94362db95dc655e64e2506f14f2360e95d4a662af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3777eff61bd0f504f58907ede177271fae167d71af5ee8ad3c4dd12b674e449a\",\"dweb:/ipfs/QmTSZ58E68DfzfxGrDhe8p4UDYRQnUdVVACkxcnnionTLk\"]},\"lib/murky/script/common/ScriptHelper.sol\":{\"keccak256\":\"0x7f428e2b352483dc6fcc4ae1794a4eb55cc1ceea8892c45a9e0dc983b2914e17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5d41a745bb92ef4a4a00bb8e466d21ccd1db9ea45ef6ca4311d72bbd5ad07e5\",\"dweb:/ipfs/QmRdp1jK1dcUpizGBKhR36qSbsaMCXAgykoz7dbbhvpfon\"]},\"lib/murky/src/Merkle.sol\":{\"keccak256\":\"0xf16c4478189af9986c54a89f677515999323309bf89d3a6a78f69c838fbef3f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bece8626bafca241995c343d41f636e8f90069d8de824bbafc2425bffe4e19a1\",\"dweb:/ipfs/Qme7zczpDrMkqTUQAhpdhKEw8N6c7iLmn4a1CkFKbQc1aR\"]},\"lib/murky/src/common/MurkyBase.sol\":{\"keccak256\":\"0xac31f7f11285be1caf9f809635507f8e6749558a95e622b7e5d4ba803ee519b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4bf535ce7e9292c3560e427b49c44f4f9d2dd0a4caddd5efdc50d28b53e4163\",\"dweb:/ipfs/QmcLLUoVuV4xji6qDx5FEoc8LzVPCou7ZqUSyss21Dw1Wk\"]},\"script/TestMerkle.s.sol\":{\"keccak256\":\"0x8f47f9ba048b5f1ea03dcb1d681e4aba7fa29bcdd97f517dbb5104e53a160588\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dcc1daf11348e08bb059d09ce1bc399fe298c6bbfd662f6f9cce1f692d3ea4b\",\"dweb:/ipfs/QmZXygPpsM1vqkx9wbXggr7uw5LRsqki9EPb7eh3uQGwxM\"]}},\"version\":1}","solc_version":"0.8.24","solc_zkvm_edition":null,"zk_version":"1.4.1"},"storageLayout":{"storage":[],"types":{}},"userdoc":{},"devdoc":{},"irOptimized":"/// @use-src 0:\"lib/forge-std/src/Base.sol\", 1:\"lib/forge-std/src/Script.sol\", 2:\"lib/forge-std/src/StdChains.sol\", 3:\"lib/forge-std/src/StdCheats.sol\", 4:\"lib/forge-std/src/StdJson.sol\", 8:\"lib/forge-std/src/StdUtils.sol\", 19:\"lib/murky/script/Merkle.s.sol\", 20:\"lib/murky/script/common/ScriptHelper.sol\", 37:\"script/TestMerkle.s.sol\"\nobject \"MakeMerkle_46153\" {\n    code {\n        {\n            /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n            let _1 := memoryguard(0x80)\n            let _2 := 64\n            mstore(_2, _1)\n            if callvalue() { revert(0, 0) }\n            sstore(/** @src 2:3166:3170  \"true\" */ 0x0c, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ or(and(sload(/** @src 2:3166:3170  \"true\" */ 0x0c), /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ not(16711935)), 65537))\n            /// @src 19:606:618  \"new Merkle()\"\n            let _3 := datasize(\"Merkle_43923\")\n            let _4 := add(_1, _3)\n            let _5 := sub(shl(64, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 1), 1)\n            /// @src 19:606:618  \"new Merkle()\"\n            if or(gt(_4, _5), lt(_4, _1))\n            {\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            /// @src 19:606:618  \"new Merkle()\"\n            datacopy(_1, dataoffset(\"Merkle_43923\"), _3)\n            /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n            let _6 := 0\n            /// @src 19:606:618  \"new Merkle()\"\n            let expr_address := create(/** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _6, /** @src 19:606:618  \"new Merkle()\" */ _1, sub(_4, _1))\n            if iszero(expr_address)\n            {\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                let pos := mload(_2)\n                returndatacopy(pos, _6, returndatasize())\n                revert(pos, returndatasize())\n            }\n            let _7 := sload(/** @src 2:3166:3170  \"true\" */ 0x0c)\n            /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n            sstore(/** @src 2:3166:3170  \"true\" */ 0x0c, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ or(and(_7, not(sub(shl(184, 1), 16777216))), and(shl(24, expr_address), sub(shl(184, 1), 16777216))))\n            let _8 := extract_byte_array_length(sload(/** @src 19:652:679  \"\\\"/script/target/input.json\\\"\" */ 0x0d))\n            /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n            let _9 := 31\n            if gt(_8, _9)\n            {\n                mstore(_6, /** @src 19:652:679  \"\\\"/script/target/input.json\\\"\" */ 0x0d)\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                let data := keccak256(_6, 0x20)\n                clear_storage_range_bytes1(data, add(data, shr(5, add(_8, _9))))\n            }\n            sstore(/** @src 19:652:679  \"\\\"/script/target/input.json\\\"\" */ 0x0d, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ add(\"/script/target/input.json\", 50))\n            let _10 := extract_byte_array_length(sload(/** @src 19:713:741  \"\\\"/script/target/output.json\\\"\" */ 0x0e))\n            /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n            if gt(_10, _9)\n            {\n                mstore(_6, /** @src 19:713:741  \"\\\"/script/target/output.json\\\"\" */ 0x0e)\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                let data_1 := keccak256(_6, 0x20)\n                clear_storage_range_bytes1(data_1, add(data_1, shr(5, add(_10, _9))))\n            }\n            sstore(/** @src 19:713:741  \"\\\"/script/target/output.json\\\"\" */ 0x0e, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ add(\"/script/target/output.json\", 52))\n            /// @src 19:800:816  \"vm.projectRoot()\"\n            let _11 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ mload(_2)\n            /// @src 19:800:816  \"vm.projectRoot()\"\n            mstore(_11, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(225, 0x6c985073))\n            /// @src 19:800:816  \"vm.projectRoot()\"\n            let _12 := 4\n            /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n            let _13 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n            /// @src 19:800:816  \"vm.projectRoot()\"\n            let _14 := staticcall(gas(), /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _13, /** @src 19:800:816  \"vm.projectRoot()\" */ _11, _12, _11, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _6)\n            /// @src 19:800:816  \"vm.projectRoot()\"\n            if iszero(_14)\n            {\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                let pos_1 := mload(_2)\n                returndatacopy(pos_1, _6, returndatasize())\n                revert(pos_1, returndatasize())\n            }\n            /// @src 19:800:816  \"vm.projectRoot()\"\n            let expr_mpos := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _6\n            /// @src 19:800:816  \"vm.projectRoot()\"\n            if _14\n            {\n                let _15 := returndatasize()\n                returndatacopy(_11, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _6, /** @src 19:800:816  \"vm.projectRoot()\" */ _15)\n                finalize_allocation(_11, _15)\n                expr_mpos := abi_decode_string_fromMemory(_11, add(_11, _15))\n            }\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            let outPtr := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ mload(_2)\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            let _16 := 0x20\n            let length := mload(expr_mpos)\n            copy_memory_to_memory_with_cleanup(add(expr_mpos, _16), add(outPtr, _16), length)\n            let _17 := add(outPtr, length)\n            let ret := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _6\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            let slotValue := sload(/** @src 19:652:679  \"\\\"/script/target/input.json\\\"\" */ 0x0d)\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            let length_1 := extract_byte_array_length(slotValue)\n            /// @src 2:3166:3170  \"true\"\n            let _18 := 0x01\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            switch and(slotValue, /** @src 2:3166:3170  \"true\" */ _18)\n            case /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0 {\n                mstore(add(_17, _16), and(slotValue, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ not(255)))\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                ret := add(add(_17, mul(length_1, iszero(iszero(length_1)))), _16)\n            }\n            case 1 {\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                mstore(_6, /** @src 19:652:679  \"\\\"/script/target/input.json\\\"\" */ 0x0d)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let dataPos := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ keccak256(_6, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _16)\n                let i := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _6\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                for { } lt(i, length_1) { i := add(i, _16) }\n                {\n                    mstore(add(add(_17, i), _16), sload(dataPos))\n                    dataPos := add(dataPos, /** @src 2:3166:3170  \"true\" */ _18)\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                ret := add(add(_17, length_1), _16)\n            }\n            let _19 := sub(ret, outPtr)\n            let _20 := not(31)\n            mstore(outPtr, add(_19, _20))\n            finalize_allocation(outPtr, _19)\n            /// @src 19:774:829  \"vm.readFile(string.concat(vm.projectRoot(), inputPath))\"\n            let _21 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ mload(_2)\n            /// @src 19:774:829  \"vm.readFile(string.concat(vm.projectRoot(), inputPath))\"\n            mstore(_21, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(224, 0x60f9bb11))\n            let _22 := 36\n            mstore(/** @src 19:774:829  \"vm.readFile(string.concat(vm.projectRoot(), inputPath))\" */ add(_21, /** @src 19:800:816  \"vm.projectRoot()\" */ _12), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _16)\n            /// @src 19:774:829  \"vm.readFile(string.concat(vm.projectRoot(), inputPath))\"\n            let _23 := staticcall(gas(), /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _13, /** @src 19:774:829  \"vm.readFile(string.concat(vm.projectRoot(), inputPath))\" */ _21, sub(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ abi_encode_string(outPtr, add(/** @src 19:774:829  \"vm.readFile(string.concat(vm.projectRoot(), inputPath))\" */ _21, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _22)), /** @src 19:774:829  \"vm.readFile(string.concat(vm.projectRoot(), inputPath))\" */ _21), _21, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _6)\n            /// @src 19:774:829  \"vm.readFile(string.concat(vm.projectRoot(), inputPath))\"\n            if iszero(_23)\n            {\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                let pos_2 := mload(_2)\n                returndatacopy(pos_2, _6, returndatasize())\n                revert(pos_2, returndatasize())\n            }\n            /// @src 19:774:829  \"vm.readFile(string.concat(vm.projectRoot(), inputPath))\"\n            let expr_mpos_1 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _6\n            /// @src 19:774:829  \"vm.readFile(string.concat(vm.projectRoot(), inputPath))\"\n            if _23\n            {\n                let _24 := returndatasize()\n                returndatacopy(_21, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _6, /** @src 19:774:829  \"vm.readFile(string.concat(vm.projectRoot(), inputPath))\" */ _24)\n                finalize_allocation(_21, _24)\n                expr_mpos_1 := abi_decode_string_fromMemory(_21, add(_21, _24))\n            }\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            let newLen := mload(expr_mpos_1)\n            if gt(newLen, /** @src 19:606:618  \"new Merkle()\" */ _5)\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            {\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                mstore(_6, shl(224, 0x4e487b71))\n                mstore(/** @src 19:800:816  \"vm.projectRoot()\" */ _12, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 0x41)\n                revert(_6, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _22)\n            }\n            let _25 := extract_byte_array_length(sload(/** @src 19:774:829  \"vm.readFile(string.concat(vm.projectRoot(), inputPath))\" */ 0x0f))\n            /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n            if gt(_25, _9)\n            {\n                mstore(_6, /** @src 19:774:829  \"vm.readFile(string.concat(vm.projectRoot(), inputPath))\" */ 0x0f)\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                let data_2 := keccak256(_6, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _16)\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                let deleteStart := add(data_2, shr(5, add(newLen, _9)))\n                if lt(newLen, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _16)\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                { deleteStart := data_2 }\n                clear_storage_range_bytes1(deleteStart, add(data_2, shr(5, add(_25, _9))))\n            }\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            let srcOffset := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _6\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            srcOffset := _16\n            switch gt(newLen, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _9)\n            case /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 1 {\n                let loopEnd := and(newLen, _20)\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                mstore(_6, /** @src 19:774:829  \"vm.readFile(string.concat(vm.projectRoot(), inputPath))\" */ 0x0f)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let dstPtr := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ keccak256(_6, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _16)\n                let i_1 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _6\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                for { } lt(i_1, loopEnd) { i_1 := add(i_1, _16) }\n                {\n                    sstore(dstPtr, mload(add(expr_mpos_1, srcOffset)))\n                    dstPtr := add(dstPtr, /** @src 2:3166:3170  \"true\" */ _18)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    srcOffset := add(srcOffset, _16)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(expr_mpos_1, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                }\n                sstore(/** @src 19:774:829  \"vm.readFile(string.concat(vm.projectRoot(), inputPath))\" */ 0x0f, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(shl(/** @src 2:3166:3170  \"true\" */ _18, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ newLen), /** @src 2:3166:3170  \"true\" */ _18))\n            }\n            default /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            {\n                let value := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _6\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                if newLen\n                {\n                    value := mload(add(expr_mpos_1, srcOffset))\n                }\n                sstore(/** @src 19:774:829  \"vm.readFile(string.concat(vm.projectRoot(), inputPath))\" */ 0x0f, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n            }\n            /// @src 19:860:884  \"elements.readStringArray\"\n            let expr_self_mpos := /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ copy_array_from_storage_to_memory_string()\n            let memPtr := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ mload(_2)\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            finalize_allocation_15731(memPtr)\n            mstore(memPtr, 6)\n            mstore(add(memPtr, _16), \".types\")\n            /// @src 4:2094:2128  \"vm.parseJsonStringArray(json, key)\"\n            let _26 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ mload(_2)\n            /// @src 4:2094:2128  \"vm.parseJsonStringArray(json, key)\"\n            mstore(_26, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(226, 0x1263f73d))\n            /// @src 4:2094:2128  \"vm.parseJsonStringArray(json, key)\"\n            let _27 := staticcall(gas(), /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _13, /** @src 4:2094:2128  \"vm.parseJsonStringArray(json, key)\" */ _26, sub(abi_encode_string_string(add(_26, /** @src 19:800:816  \"vm.projectRoot()\" */ _12), /** @src 4:2094:2128  \"vm.parseJsonStringArray(json, key)\" */ expr_self_mpos, memPtr), _26), _26, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _6)\n            /// @src 4:2094:2128  \"vm.parseJsonStringArray(json, key)\"\n            if iszero(_27)\n            {\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                let pos_3 := mload(_2)\n                returndatacopy(pos_3, _6, returndatasize())\n                revert(pos_3, returndatasize())\n            }\n            /// @src 4:2094:2128  \"vm.parseJsonStringArray(json, key)\"\n            let expr_mpos_2 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _6\n            /// @src 4:2094:2128  \"vm.parseJsonStringArray(json, key)\"\n            if _27\n            {\n                let _28 := returndatasize()\n                returndatacopy(_26, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _6, /** @src 4:2094:2128  \"vm.parseJsonStringArray(json, key)\" */ _28)\n                finalize_allocation(_26, _28)\n                let _29 := add(_26, _28)\n                /// @src 4:661:724  \"VmSafe(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                if slt(sub(_29, _26), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _16)\n                /// @src 4:661:724  \"VmSafe(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                {\n                    /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                    revert(_6, _6)\n                }\n                /// @src 4:661:724  \"VmSafe(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                let offset := mload(_26)\n                if gt(offset, /** @src 19:606:618  \"new Merkle()\" */ _5)\n                /// @src 4:661:724  \"VmSafe(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                {\n                    /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                    revert(_6, _6)\n                }\n                /// @src 4:661:724  \"VmSafe(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                let _30 := add(_26, offset)\n                if iszero(slt(add(_30, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _9), /** @src 4:661:724  \"VmSafe(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _29))\n                {\n                    /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                    revert(_6, _6)\n                }\n                /// @src 4:661:724  \"VmSafe(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                let _31 := mload(_30)\n                let _32 := array_allocation_size_array_bytes32_dyn(_31)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let memPtr_1 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ mload(_2)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                finalize_allocation(memPtr_1, _32)\n                /// @src 4:661:724  \"VmSafe(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                let dst := memPtr_1\n                mstore(memPtr_1, _31)\n                dst := add(memPtr_1, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _16)\n                /// @src 4:661:724  \"VmSafe(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                let srcEnd := add(add(_30, shl(5, _31)), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _16)\n                /// @src 4:661:724  \"VmSafe(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                if gt(srcEnd, _29)\n                {\n                    /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                    revert(_6, _6)\n                }\n                /// @src 4:661:724  \"VmSafe(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                let src := add(_30, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _16)\n                /// @src 4:661:724  \"VmSafe(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                for { }\n                lt(src, srcEnd)\n                {\n                    src := add(src, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _16)\n                }\n                /// @src 4:661:724  \"VmSafe(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                {\n                    let innerOffset := mload(src)\n                    if gt(innerOffset, /** @src 19:606:618  \"new Merkle()\" */ _5)\n                    /// @src 4:661:724  \"VmSafe(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    {\n                        /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                        revert(_6, _6)\n                    }\n                    /// @src 4:661:724  \"VmSafe(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    mstore(dst, abi_decode_string_memory_ptr_fromMemory(add(add(_30, innerOffset), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _16), /** @src 4:661:724  \"VmSafe(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _29))\n                    dst := add(dst, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _16)\n                }\n                /// @src 4:2094:2128  \"vm.parseJsonStringArray(json, key)\"\n                expr_mpos_2 := memPtr_1\n            }\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            let length_2 := mload(expr_mpos_2)\n            let _33 := 18446744073709551616\n            if gt(length_2, _33)\n            {\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                mstore(_6, shl(224, 0x4e487b71))\n                mstore(/** @src 19:800:816  \"vm.projectRoot()\" */ _12, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 0x41)\n                revert(_6, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _22)\n            }\n            let oldLen := sload(/** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 16)\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            sstore(/** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 16, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length_2)\n            if lt(length_2, oldLen)\n            {\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                mstore(_6, 16)\n                let data_3 := keccak256(_6, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _16)\n                let _34 := add(data_3, oldLen)\n                let start := add(data_3, length_2)\n                for { }\n                lt(start, _34)\n                {\n                    start := add(start, /** @src 2:3166:3170  \"true\" */ _18)\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                {\n                    let oldLen_1 := extract_byte_array_length(sload(start))\n                    if iszero(iszero(oldLen_1))\n                    {\n                        switch gt(oldLen_1, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _9)\n                        case /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 1 {\n                            /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                            mstore(_6, start)\n                            let data_4 := keccak256(_6, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _16)\n                            clear_storage_range_bytes1(add(data_4, /** @src 2:3166:3170  \"true\" */ _18), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(data_4, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ shr(5, add(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ oldLen_1, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _9))))\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            sstore(start, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _6)\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            sstore(data_4, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _6)\n                        }\n                        default /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        {\n                            sstore(start, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _6)\n                        }\n                    }\n                }\n            }\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            let srcPtr := add(expr_mpos_2, _16)\n            /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n            mstore(_6, 16)\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            let elementSlot := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ keccak256(_6, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _16)\n            let i_2 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _6\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            for { }\n            lt(i_2, length_2)\n            {\n                i_2 := add(i_2, /** @src 2:3166:3170  \"true\" */ _18)\n            }\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            {\n                let _35 := mload(srcPtr)\n                let newLen_1 := mload(_35)\n                if gt(newLen_1, /** @src 19:606:618  \"new Merkle()\" */ _5)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                {\n                    /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                    mstore(_6, shl(224, 0x4e487b71))\n                    mstore(/** @src 19:800:816  \"vm.projectRoot()\" */ _12, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 0x41)\n                    revert(_6, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _22)\n                }\n                clean_up_bytearray_end_slots_bytes_storage_ptr(elementSlot, extract_byte_array_length(sload(elementSlot)), newLen_1)\n                let srcOffset_1 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _6\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                srcOffset_1 := _16\n                switch gt(newLen_1, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _9)\n                case /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 1 {\n                    let loopEnd_1 := and(newLen_1, _20)\n                    /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                    mstore(_6, elementSlot)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let dstPtr_1 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ keccak256(_6, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _16)\n                    let i_3 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _6\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    for { } lt(i_3, loopEnd_1) { i_3 := add(i_3, _16) }\n                    {\n                        sstore(dstPtr_1, mload(add(_35, srcOffset_1)))\n                        dstPtr_1 := add(dstPtr_1, /** @src 2:3166:3170  \"true\" */ _18)\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        srcOffset_1 := add(srcOffset_1, _16)\n                    }\n                    if lt(loopEnd_1, newLen_1)\n                    {\n                        let lastValue_1 := mload(add(_35, srcOffset_1))\n                        sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(3, newLen_1), 248), not(0)))))\n                    }\n                    sstore(elementSlot, add(shl(/** @src 2:3166:3170  \"true\" */ _18, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ newLen_1), /** @src 2:3166:3170  \"true\" */ _18))\n                }\n                default /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                {\n                    let value_1 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _6\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    if newLen_1\n                    {\n                        value_1 := mload(add(_35, srcOffset_1))\n                    }\n                    sstore(elementSlot, extract_used_part_and_set_length_of_short_byte_array(value_1, newLen_1))\n                }\n                srcPtr := add(srcPtr, _16)\n                elementSlot := add(elementSlot, /** @src 2:3166:3170  \"true\" */ _18)\n            }\n            /// @src 19:924:941  \"elements.readUint\"\n            let expr_self_mpos_1 := /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ copy_array_from_storage_to_memory_string()\n            let memPtr_2 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ mload(_2)\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            finalize_allocation_15731(memPtr_2)\n            mstore(memPtr_2, 6)\n            mstore(add(memPtr_2, _16), \".count\")\n            /// @src 4:984:1011  \"vm.parseJsonUint(json, key)\"\n            let _36 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ mload(_2)\n            /// @src 4:984:1011  \"vm.parseJsonUint(json, key)\"\n            mstore(_36, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(225, 0x56eef15b))\n            /// @src 4:984:1011  \"vm.parseJsonUint(json, key)\"\n            let _37 := staticcall(gas(), /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _13, /** @src 4:984:1011  \"vm.parseJsonUint(json, key)\" */ _36, sub(abi_encode_string_string(add(_36, /** @src 19:800:816  \"vm.projectRoot()\" */ _12), /** @src 4:984:1011  \"vm.parseJsonUint(json, key)\" */ expr_self_mpos_1, memPtr_2), _36), _36, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _16)\n            /// @src 4:984:1011  \"vm.parseJsonUint(json, key)\"\n            if iszero(_37)\n            {\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                let pos_4 := mload(_2)\n                returndatacopy(pos_4, _6, returndatasize())\n                revert(pos_4, returndatasize())\n            }\n            /// @src 4:984:1011  \"vm.parseJsonUint(json, key)\"\n            let expr := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _6\n            /// @src 4:984:1011  \"vm.parseJsonUint(json, key)\"\n            if _37\n            {\n                let _38 := /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _16\n                /// @src 4:984:1011  \"vm.parseJsonUint(json, key)\"\n                if gt(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _16, /** @src 4:984:1011  \"vm.parseJsonUint(json, key)\" */ returndatasize()) { _38 := returndatasize() }\n                finalize_allocation(_36, _38)\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                if slt(sub(/** @src 4:984:1011  \"vm.parseJsonUint(json, key)\" */ add(_36, _38), /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _36), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _16)\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                { revert(_6, _6) }\n                /// @src 4:984:1011  \"vm.parseJsonUint(json, key)\"\n                expr := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ mload(_36)\n            }\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            sstore(/** @src 19:924:951  \"elements.readUint(\\\".count\\\")\" */ 0x11, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ expr)\n            let _39 := array_allocation_size_array_bytes32_dyn(expr)\n            let memPtr_3 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ mload(_2)\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            finalize_allocation(memPtr_3, _39)\n            mstore(memPtr_3, expr)\n            let dataSize := array_allocation_size_array_bytes32_dyn(expr)\n            let dataStart := add(memPtr_3, _16)\n            calldatacopy(dataStart, calldatasize(), add(dataSize, _20))\n            let length_3 := mload(memPtr_3)\n            if gt(length_3, /** @src 19:606:618  \"new Merkle()\" */ _5)\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            {\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                mstore(_6, shl(224, 0x4e487b71))\n                mstore(/** @src 19:800:816  \"vm.projectRoot()\" */ _12, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 0x41)\n                revert(_6, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _22)\n            }\n            if gt(length_3, _33)\n            {\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                mstore(_6, shl(224, 0x4e487b71))\n                mstore(/** @src 19:800:816  \"vm.projectRoot()\" */ _12, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 0x41)\n                revert(_6, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _22)\n            }\n            let oldLen_2 := sload(/** @src 19:984:1004  \"new bytes32[](count)\" */ 0x12)\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            sstore(/** @src 19:984:1004  \"new bytes32[](count)\" */ 0x12, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length_3)\n            if lt(length_3, oldLen_2)\n            {\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                mstore(_6, /** @src 19:984:1004  \"new bytes32[](count)\" */ 0x12)\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                let data_5 := keccak256(_6, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _16)\n                let _40 := add(data_5, oldLen_2)\n                let start_1 := add(data_5, length_3)\n                for { }\n                lt(start_1, _40)\n                {\n                    start_1 := add(start_1, /** @src 2:3166:3170  \"true\" */ _18)\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                {\n                    /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                    sstore(start_1, _6)\n                }\n            }\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            let srcPtr_1 := dataStart\n            /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n            mstore(_6, /** @src 19:984:1004  \"new bytes32[](count)\" */ 0x12)\n            /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n            let data_6 := keccak256(_6, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _16)\n            let i_4 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _6\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            for { }\n            lt(i_4, length_3)\n            {\n                i_4 := add(i_4, /** @src 2:3166:3170  \"true\" */ _18)\n            }\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            {\n                let _41 := mload(srcPtr_1)\n                srcPtr_1 := add(srcPtr_1, _16)\n                sstore(add(data_6, i_4), _41)\n            }\n            /// @src 19:1037:1056  \"new string[](count)\"\n            let _42 := allocate_and_zero_memory_array_array_string_dyn(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 19:924:951  \"elements.readUint(\\\".count\\\")\" */ 0x11))\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            let length_4 := mload(_42)\n            if gt(length_4, _33)\n            {\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                mstore(_6, shl(224, 0x4e487b71))\n                mstore(/** @src 19:800:816  \"vm.projectRoot()\" */ _12, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 0x41)\n                revert(_6, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _22)\n            }\n            let oldLen_3 := sload(/** @src 19:1037:1056  \"new string[](count)\" */ 0x13)\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            sstore(/** @src 19:1037:1056  \"new string[](count)\" */ 0x13, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length_4)\n            if lt(length_4, oldLen_3)\n            {\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                mstore(_6, /** @src 19:1037:1056  \"new string[](count)\" */ 0x13)\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                let data_7 := keccak256(_6, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _16)\n                let _43 := add(data_7, oldLen_3)\n                let start_2 := add(data_7, length_4)\n                for { }\n                lt(start_2, _43)\n                {\n                    start_2 := add(start_2, /** @src 2:3166:3170  \"true\" */ _18)\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                {\n                    let oldLen_4 := extract_byte_array_length(sload(start_2))\n                    if iszero(iszero(oldLen_4))\n                    {\n                        switch gt(oldLen_4, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _9)\n                        case /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 1 {\n                            /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                            mstore(_6, start_2)\n                            let data_8 := keccak256(_6, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _16)\n                            clear_storage_range_bytes1(add(data_8, /** @src 2:3166:3170  \"true\" */ _18), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(data_8, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ shr(5, add(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ oldLen_4, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _9))))\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            sstore(start_2, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _6)\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            sstore(data_8, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _6)\n                        }\n                        default /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        {\n                            sstore(start_2, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _6)\n                        }\n                    }\n                }\n            }\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            let srcPtr_2 := add(_42, _16)\n            /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n            mstore(_6, /** @src 19:1037:1056  \"new string[](count)\" */ 0x13)\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            let elementSlot_1 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ keccak256(_6, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _16)\n            let i_5 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _6\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            for { }\n            lt(i_5, length_4)\n            {\n                i_5 := add(i_5, /** @src 2:3166:3170  \"true\" */ _18)\n            }\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            {\n                let _44 := mload(srcPtr_2)\n                let newLen_2 := mload(_44)\n                if gt(newLen_2, /** @src 19:606:618  \"new Merkle()\" */ _5)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                {\n                    /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                    mstore(_6, shl(224, 0x4e487b71))\n                    mstore(/** @src 19:800:816  \"vm.projectRoot()\" */ _12, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 0x41)\n                    revert(_6, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _22)\n                }\n                clean_up_bytearray_end_slots_bytes_storage_ptr(elementSlot_1, extract_byte_array_length(sload(elementSlot_1)), newLen_2)\n                let srcOffset_2 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _6\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                srcOffset_2 := _16\n                switch gt(newLen_2, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _9)\n                case /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 1 {\n                    let loopEnd_2 := and(newLen_2, _20)\n                    /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                    mstore(_6, elementSlot_1)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let dstPtr_2 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ keccak256(_6, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _16)\n                    let i_6 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _6\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    for { } lt(i_6, loopEnd_2) { i_6 := add(i_6, _16) }\n                    {\n                        sstore(dstPtr_2, mload(add(_44, srcOffset_2)))\n                        dstPtr_2 := add(dstPtr_2, /** @src 2:3166:3170  \"true\" */ _18)\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        srcOffset_2 := add(srcOffset_2, _16)\n                    }\n                    if lt(loopEnd_2, newLen_2)\n                    {\n                        let lastValue_2 := mload(add(_44, srcOffset_2))\n                        sstore(dstPtr_2, and(lastValue_2, not(shr(and(shl(3, newLen_2), 248), not(0)))))\n                    }\n                    sstore(elementSlot_1, add(shl(/** @src 2:3166:3170  \"true\" */ _18, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ newLen_2), /** @src 2:3166:3170  \"true\" */ _18))\n                }\n                default /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                {\n                    let value_2 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _6\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    if newLen_2\n                    {\n                        value_2 := mload(add(_44, srcOffset_2))\n                    }\n                    sstore(elementSlot_1, extract_used_part_and_set_length_of_short_byte_array(value_2, newLen_2))\n                }\n                srcPtr_2 := add(srcPtr_2, _16)\n                elementSlot_1 := add(elementSlot_1, /** @src 2:3166:3170  \"true\" */ _18)\n            }\n            /// @src 19:1089:1108  \"new string[](count)\"\n            let _45 := allocate_and_zero_memory_array_array_string_dyn(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 19:924:951  \"elements.readUint(\\\".count\\\")\" */ 0x11))\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            let length_5 := mload(_45)\n            if gt(length_5, _33)\n            {\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                mstore(_6, shl(224, 0x4e487b71))\n                mstore(/** @src 19:800:816  \"vm.projectRoot()\" */ _12, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 0x41)\n                revert(_6, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _22)\n            }\n            let oldLen_5 := sload(/** @src 19:1089:1108  \"new string[](count)\" */ 0x14)\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            sstore(/** @src 19:1089:1108  \"new string[](count)\" */ 0x14, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length_5)\n            if lt(length_5, oldLen_5)\n            {\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                mstore(_6, /** @src 19:1089:1108  \"new string[](count)\" */ 0x14)\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                let data_9 := keccak256(_6, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _16)\n                let _46 := add(data_9, oldLen_5)\n                let start_3 := add(data_9, length_5)\n                for { }\n                lt(start_3, _46)\n                {\n                    start_3 := add(start_3, /** @src 2:3166:3170  \"true\" */ _18)\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                {\n                    let oldLen_6 := extract_byte_array_length(sload(start_3))\n                    if iszero(iszero(oldLen_6))\n                    {\n                        switch gt(oldLen_6, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _9)\n                        case /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 1 {\n                            /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                            mstore(_6, start_3)\n                            let data_10 := keccak256(_6, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _16)\n                            clear_storage_range_bytes1(add(data_10, /** @src 2:3166:3170  \"true\" */ _18), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(data_10, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ shr(5, add(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ oldLen_6, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _9))))\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            sstore(start_3, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _6)\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            sstore(data_10, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _6)\n                        }\n                        default /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        {\n                            sstore(start_3, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _6)\n                        }\n                    }\n                }\n            }\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            let srcPtr_3 := add(_45, _16)\n            /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n            mstore(_6, /** @src 19:1089:1108  \"new string[](count)\" */ 0x14)\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            let elementSlot_2 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ keccak256(_6, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _16)\n            let i_7 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _6\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            for { }\n            lt(i_7, length_5)\n            {\n                i_7 := add(i_7, /** @src 2:3166:3170  \"true\" */ _18)\n            }\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            {\n                let _47 := mload(srcPtr_3)\n                let newLen_3 := mload(_47)\n                if gt(newLen_3, /** @src 19:606:618  \"new Merkle()\" */ _5)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                {\n                    /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                    mstore(_6, shl(224, 0x4e487b71))\n                    mstore(/** @src 19:800:816  \"vm.projectRoot()\" */ _12, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 0x41)\n                    revert(_6, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _22)\n                }\n                clean_up_bytearray_end_slots_bytes_storage_ptr(elementSlot_2, extract_byte_array_length(sload(elementSlot_2)), newLen_3)\n                let srcOffset_3 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _6\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                srcOffset_3 := _16\n                switch gt(newLen_3, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _9)\n                case /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 1 {\n                    let loopEnd_3 := and(newLen_3, _20)\n                    /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                    mstore(_6, elementSlot_2)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let dstPtr_3 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ keccak256(_6, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _16)\n                    let i_8 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _6\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    for { } lt(i_8, loopEnd_3) { i_8 := add(i_8, _16) }\n                    {\n                        sstore(dstPtr_3, mload(add(_47, srcOffset_3)))\n                        dstPtr_3 := add(dstPtr_3, /** @src 2:3166:3170  \"true\" */ _18)\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        srcOffset_3 := add(srcOffset_3, _16)\n                    }\n                    if lt(loopEnd_3, newLen_3)\n                    {\n                        let lastValue_3 := mload(add(_47, srcOffset_3))\n                        sstore(dstPtr_3, and(lastValue_3, not(shr(and(shl(3, newLen_3), 248), not(0)))))\n                    }\n                    sstore(elementSlot_2, add(shl(/** @src 2:3166:3170  \"true\" */ _18, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ newLen_3), /** @src 2:3166:3170  \"true\" */ _18))\n                }\n                default /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                {\n                    let value_3 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _6\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    if newLen_3\n                    {\n                        value_3 := mload(add(_47, srcOffset_3))\n                    }\n                    sstore(elementSlot_2, extract_used_part_and_set_length_of_short_byte_array(value_3, newLen_3))\n                }\n                srcPtr_3 := add(srcPtr_3, _16)\n                elementSlot_2 := add(elementSlot_2, /** @src 2:3166:3170  \"true\" */ _18)\n            }\n            /// @src 37:227:245  \"new MerkleScript()\"\n            let _48 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ mload(_2)\n            /// @src 37:227:245  \"new MerkleScript()\"\n            let _49 := datasize(\"MerkleScript_43602\")\n            let _50 := add(_48, _49)\n            if or(gt(_50, /** @src 19:606:618  \"new Merkle()\" */ _5), /** @src 37:227:245  \"new MerkleScript()\" */ lt(_50, _48))\n            {\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                mstore(_6, shl(224, 0x4e487b71))\n                mstore(/** @src 19:800:816  \"vm.projectRoot()\" */ _12, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 0x41)\n                revert(_6, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _22)\n            }\n            /// @src 37:227:245  \"new MerkleScript()\"\n            datacopy(_48, dataoffset(\"MerkleScript_43602\"), _49)\n            let expr_address_1 := create(/** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _6, /** @src 37:227:245  \"new MerkleScript()\" */ _48, sub(_50, _48))\n            if iszero(expr_address_1)\n            {\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                let pos_5 := mload(_2)\n                returndatacopy(pos_5, _6, returndatasize())\n                revert(pos_5, returndatasize())\n            }\n            sstore(/** @src 37:227:245  \"new MerkleScript()\" */ 0x16, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ or(and(sload(/** @src 37:227:245  \"new MerkleScript()\" */ 0x16), /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ not(sub(shl(160, 1), 1))), and(expr_address_1, sub(shl(160, 1), 1))))\n            let _51 := mload(_2)\n            let _52 := datasize(\"MakeMerkle_46153_deployed\")\n            codecopy(_51, dataoffset(\"MakeMerkle_46153_deployed\"), _52)\n            return(_51, _52)\n        }\n        function extract_byte_array_length(data) -> length\n        {\n            length := shr(1, data)\n            let outOfPlaceEncoding := and(data, 1)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, 32))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(0, 0x24)\n            }\n        }\n        function clear_storage_range_bytes1(start, end)\n        {\n            for { } lt(start, end) { start := add(start, 1) }\n            {\n                sstore(start, /** @src -1:-1:-1 */ 0)\n            }\n        }\n        /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n        function clean_up_bytearray_end_slots_bytes_storage_ptr(array, len, startIndex)\n        {\n            if gt(len, 31)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ array)\n                let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 0x20)\n                let deleteStart := add(data, shr(5, add(startIndex, 31)))\n                if lt(startIndex, 0x20) { deleteStart := data }\n                clear_storage_range_bytes1(deleteStart, add(data, shr(5, add(len, 31))))\n            }\n        }\n        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n        function finalize_allocation_15731(memPtr)\n        {\n            let newFreePtr := add(memPtr, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 64)\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            if or(gt(newFreePtr, /** @src 19:606:618  \"new Merkle()\" */ sub(shl(64, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 1), 1)), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ lt(newFreePtr, memPtr))\n            {\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            mstore(/** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 64, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ newFreePtr)\n        }\n        function finalize_allocation(memPtr, size)\n        {\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, /** @src 19:606:618  \"new Merkle()\" */ sub(shl(64, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 1), 1)), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ lt(newFreePtr, memPtr))\n            {\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            mstore(64, newFreePtr)\n        }\n        function copy_memory_to_memory_with_cleanup(src, dst, length)\n        {\n            let i := 0\n            for { } lt(i, length) { i := add(i, 32) }\n            {\n                mstore(add(dst, i), mload(add(src, i)))\n            }\n            mstore(add(dst, length), 0)\n        }\n        function abi_decode_string_memory_ptr_fromMemory(offset, end) -> array\n        {\n            if iszero(slt(add(offset, 0x1f), end))\n            {\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                revert(0, 0)\n            }\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            let _1 := mload(offset)\n            if gt(_1, /** @src 19:606:618  \"new Merkle()\" */ sub(shl(64, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 1), 1))\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            {\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 0x24)\n            }\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            let memPtr := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ mload(64)\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            finalize_allocation(memPtr, add(and(add(_1, 0x1f), not(31)), 0x20))\n            mstore(memPtr, _1)\n            if gt(add(add(offset, _1), 0x20), end)\n            {\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            copy_memory_to_memory_with_cleanup(add(offset, 0x20), add(memPtr, 0x20), _1)\n            array := memPtr\n        }\n        function abi_decode_string_fromMemory(headStart, dataEnd) -> value0\n        {\n            if slt(sub(dataEnd, headStart), 32)\n            {\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                revert(0, 0)\n            }\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            let offset := mload(headStart)\n            if gt(offset, /** @src 19:606:618  \"new Merkle()\" */ sub(shl(64, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 1), 1))\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            {\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                revert(0, 0)\n            }\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            value0 := abi_decode_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n        function abi_encode_string(value, pos) -> end\n        {\n            let length := mload(value)\n            mstore(pos, length)\n            copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n            end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n        }\n        function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n        {\n            used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n        }\n        function copy_array_from_storage_to_memory_string() -> memPtr\n        {\n            memPtr := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ mload(64)\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            let ret := /** @src -1:-1:-1 */ 0\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            let slotValue := sload(/** @src 19:774:829  \"vm.readFile(string.concat(vm.projectRoot(), inputPath))\" */ 0x0f)\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            let length := extract_byte_array_length(slotValue)\n            mstore(memPtr, length)\n            let _1 := 0x20\n            let _2 := 1\n            switch and(slotValue, 1)\n            case 0 {\n                mstore(add(memPtr, _1), and(slotValue, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ not(255)))\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                ret := add(add(memPtr, shl(5, iszero(iszero(length)))), _1)\n            }\n            case 1 {\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 19:774:829  \"vm.readFile(string.concat(vm.projectRoot(), inputPath))\" */ 0x0f)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let dataPos := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _1)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                for { } lt(i, length) { i := add(i, _1) }\n                {\n                    mstore(add(add(memPtr, i), _1), sload(dataPos))\n                    dataPos := add(dataPos, _2)\n                }\n                ret := add(add(memPtr, i), _1)\n            }\n            finalize_allocation(memPtr, sub(ret, memPtr))\n        }\n        function array_allocation_size_array_bytes32_dyn(length) -> size\n        {\n            if gt(length, /** @src 19:606:618  \"new Merkle()\" */ sub(shl(64, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 1), 1))\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            {\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            size := add(shl(5, length), 0x20)\n        }\n        function allocate_and_zero_memory_array_array_string_dyn(length) -> memPtr\n        {\n            let _1 := array_allocation_size_array_bytes32_dyn(length)\n            let memPtr_1 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ mload(64)\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            finalize_allocation(memPtr_1, _1)\n            mstore(memPtr_1, length)\n            memPtr := memPtr_1\n            let _2 := add(array_allocation_size_array_bytes32_dyn(length), not(31))\n            let i := /** @src -1:-1:-1 */ 0\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            for { } lt(i, _2) { i := add(i, 32) }\n            {\n                mstore(add(add(memPtr_1, i), 32), 96)\n            }\n        }\n        /// @src 4:661:724  \"VmSafe(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n        function abi_encode_string_string(headStart, value0, value1) -> tail\n        {\n            mstore(headStart, 64)\n            let tail_1 := abi_encode_string(value0, add(headStart, 64))\n            mstore(add(headStart, 32), sub(tail_1, headStart))\n            tail := abi_encode_string(value1, tail_1)\n        }\n    }\n    /// @use-src 0:\"lib/forge-std/src/Base.sol\", 1:\"lib/forge-std/src/Script.sol\", 4:\"lib/forge-std/src/StdJson.sol\", 10:\"lib/forge-std/src/console.sol\", 19:\"lib/murky/script/Merkle.s.sol\", 20:\"lib/murky/script/common/ScriptHelper.sol\", 37:\"script/TestMerkle.s.sol\"\n    object \"MakeMerkle_46153_deployed\" {\n        code {\n            {\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                mstore(64, 128)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _1 := 0\n                    switch shr(224, calldataload(_1))\n                    case 0xbeaa685e {\n                        if callvalue() { revert(_1, _1) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                        let value := and(sload(/** @src 37:292:293  \"m\" */ 0x16), /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ sub(shl(160, 1), 1))\n                        /// @src 37:292:299  \"m.run()\"\n                        if iszero(extcodesize(value))\n                        {\n                            /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                            revert(_1, _1)\n                        }\n                        /// @src 37:292:299  \"m.run()\"\n                        mstore(/** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 128, shl(225, 0x60203113))\n                        /// @src 37:292:299  \"m.run()\"\n                        let _2 := call(gas(), value, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _1, 128, 4, 128, _1)\n                        /// @src 37:292:299  \"m.run()\"\n                        if iszero(_2) { revert_forward() }\n                        if _2\n                        {\n                            finalize_allocation_6254()\n                            /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                            _1 := _1\n                        }\n                        return(_1, _1)\n                    }\n                    case 0xc0406226 { external_fun_run() }\n                    case 0xf8ccbf47 { external_fun_IS_SCRIPT() }\n                }\n                revert(0, 0)\n            }\n            function abi_decode(headStart, dataEnd)\n            {\n                if slt(sub(dataEnd, headStart), 0) { revert(0, 0) }\n            }\n            function external_fun_run()\n            {\n                if callvalue() { revert(0, 0) }\n                let _1 := 0\n                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                /// @src 19:2122:2178  \"console.log(\\\"Generating Merkle Proof for %s\\\", inputPath)\"\n                let _mpos := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ copy_literal_to_memory_6f9d520e9cf19bc666ddef81ca16a7330a6bfd6ca6826ce99b2cc0293d094d13()\n                /// @src 19:2122:2178  \"console.log(\\\"Generating Merkle Proof for %s\\\", inputPath)\"\n                fun_log(_mpos, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ copy_array_from_storage_to_memory_string_6256())\n                /// @src 19:2194:2207  \"uint256 i = 0\"\n                let var_i := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _1\n                /// @src 19:2189:3105  \"for (uint256 i = 0; i < count; ++i) {...\"\n                for { }\n                /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 1\n                /// @src 19:2194:2207  \"uint256 i = 0\"\n                {\n                    /// @src 19:2220:2223  \"++i\"\n                    var_i := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ add(/** @src 19:2220:2223  \"++i\" */ var_i, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 1)\n                }\n                /// @src 19:2220:2223  \"++i\"\n                {\n                    /// @src 19:2209:2218  \"i < count\"\n                    if iszero(lt(var_i, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ sload(/** @src 19:2213:2218  \"count\" */ 0x11)))\n                    /// @src 19:2209:2218  \"i < count\"\n                    { break }\n                    /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                    let _2 := sload(/** @src 19:2276:2281  \"types\" */ 0x10)\n                    /// @src 19:2263:2289  \"new string[](types.length)\"\n                    let expr_mpos := allocate_and_zero_memory_array_array_string_dyn(/** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _2)\n                    /// @src 19:2327:2354  \"new bytes32[](types.length)\"\n                    let expr_mpos_1 := allocate_and_zero_memory_array_array_bytes32_dyn(/** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _2)\n                    /// @src 19:2374:2387  \"uint256 j = 0\"\n                    let var_j := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _1\n                    /// @src 19:2369:2956  \"for (uint256 j = 0; j < types.length; ++j) {...\"\n                    for { }\n                    /** @src 19:2389:2405  \"j < types.length\" */ lt(var_j, _2)\n                    /// @src 19:2374:2387  \"uint256 j = 0\"\n                    {\n                        /// @src 19:2407:2410  \"++j\"\n                        var_j := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ add(/** @src 19:2407:2410  \"++j\" */ var_j, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 1)\n                    }\n                    /// @src 19:2407:2410  \"++j\"\n                    {\n                        /// @src 19:2449:2457  \"types[j]\"\n                        let _3, _4 := storage_array_index_access_string__dyn_6257(var_j)\n                        /// @src 19:2434:2469  \"compareStrings(types[j], \\\"address\\\")\"\n                        let _mpos_1 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ copy_array_from_storage_to_memory_string(/** @src 19:2434:2469  \"compareStrings(types[j], \\\"address\\\")\" */ _3)\n                        /// @src 19:2430:2942  \"if (compareStrings(types[j], \\\"address\\\")) {...\"\n                        switch /** @src 19:2434:2469  \"compareStrings(types[j], \\\"address\\\")\" */ fun_compareStrings(_mpos_1, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ copy_literal_to_memory_421683f821a0574472445355be6d2b769119e8515f8376a1d7878523dfdecf7b())\n                        case /** @src 19:2430:2942  \"if (compareStrings(types[j], \\\"address\\\")) {...\" */ 0 {\n                            /// @src 19:2712:2720  \"types[j]\"\n                            let _5, _6 := storage_array_index_access_string__dyn_6257(var_j)\n                            /// @src 19:2697:2729  \"compareStrings(types[j], \\\"uint\\\")\"\n                            let _mpos_2 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ copy_array_from_storage_to_memory_string(/** @src 19:2697:2729  \"compareStrings(types[j], \\\"uint\\\")\" */ _5)\n                            /// @src 19:2693:2942  \"if (compareStrings(types[j], \\\"uint\\\")) {...\"\n                            if /** @src 19:2697:2729  \"compareStrings(types[j], \\\"uint\\\")\" */ fun_compareStrings(_mpos_2, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ copy_literal_to_memory_78b9198c2298bca6916a2669592af279cda8160226cf57bc4580c40c0a8b1713())\n                            /// @src 19:2693:2942  \"if (compareStrings(types[j], \\\"uint\\\")) {...\"\n                            {\n                                /// @src 19:2782:2801  \"elements.readString\"\n                                let expr_self_mpos := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ copy_array_from_storage_to_memory_string_6259()\n                                /// @src 19:2782:2825  \"elements.readString(getValuesByIndex(i, j))\"\n                                let expr_mpos_2 := fun_readString(expr_self_mpos, /** @src 19:2802:2824  \"getValuesByIndex(i, j)\" */ fun_getValuesByIndex(var_i, var_j))\n                                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                                let _7 := 64\n                                /// @src 19:2769:2826  \"vm.parseUint(elements.readString(getValuesByIndex(i, j)))\"\n                                let _8 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ mload(_7)\n                                /// @src 19:2769:2826  \"vm.parseUint(elements.readString(getValuesByIndex(i, j)))\"\n                                mstore(_8, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ shl(224, 0xfa91454d))\n                                /// @src 19:3022:3038  \"abi.encode(data)\"\n                                let _9 := 0x20\n                                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                                let _10 := 4\n                                /// @src 19:2769:2826  \"vm.parseUint(elements.readString(getValuesByIndex(i, j)))\"\n                                let _11 := sub(abi_encode_string(add(_8, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _10), /** @src 19:2769:2826  \"vm.parseUint(elements.readString(getValuesByIndex(i, j)))\" */ expr_mpos_2), _8)\n                                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                                let _12 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                                /// @src 19:2769:2826  \"vm.parseUint(elements.readString(getValuesByIndex(i, j)))\"\n                                let _13 := staticcall(gas(), /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _12, /** @src 19:2769:2826  \"vm.parseUint(elements.readString(getValuesByIndex(i, j)))\" */ _8, _11, _8, /** @src 19:3022:3038  \"abi.encode(data)\" */ _9)\n                                /// @src 19:2769:2826  \"vm.parseUint(elements.readString(getValuesByIndex(i, j)))\"\n                                if iszero(_13) { revert_forward() }\n                                let expr := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _1\n                                /// @src 19:2769:2826  \"vm.parseUint(elements.readString(getValuesByIndex(i, j)))\"\n                                if _13\n                                {\n                                    let _14 := /** @src 19:3022:3038  \"abi.encode(data)\" */ _9\n                                    /// @src 19:2769:2826  \"vm.parseUint(elements.readString(getValuesByIndex(i, j)))\"\n                                    if gt(/** @src 19:3022:3038  \"abi.encode(data)\" */ _9, /** @src 19:2769:2826  \"vm.parseUint(elements.readString(getValuesByIndex(i, j)))\" */ returndatasize()) { _14 := returndatasize() }\n                                    finalize_allocation(_8, _14)\n                                    expr := abi_decode_uint256_fromMemory(_8, add(_8, _14))\n                                }\n                                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                                mstore(/** @src 19:2848:2872  \"data[j] = bytes32(value)\" */ memory_array_index_access_bytes32_dyn(expr_mpos_1, var_j), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ expr)\n                                /// @src 19:2905:2923  \"vm.toString(value)\"\n                                let _15 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ mload(_7)\n                                /// @src 19:2905:2923  \"vm.toString(value)\"\n                                mstore(_15, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ shl(225, 0x348051d7))\n                                /// @src 19:2905:2923  \"vm.toString(value)\"\n                                let _16 := staticcall(gas(), /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _12, /** @src 19:2905:2923  \"vm.toString(value)\" */ _15, sub(abi_encode_uint256(add(_15, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _10), /** @src 19:2905:2923  \"vm.toString(value)\" */ expr), _15), _15, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _1)\n                                /// @src 19:2905:2923  \"vm.toString(value)\"\n                                if iszero(_16) { revert_forward() }\n                                let expr_mpos_3 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _1\n                                /// @src 19:2905:2923  \"vm.toString(value)\"\n                                if _16\n                                {\n                                    let _17 := returndatasize()\n                                    returndatacopy(_15, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _1, /** @src 19:2905:2923  \"vm.toString(value)\" */ _17)\n                                    finalize_allocation(_15, _17)\n                                    expr_mpos_3 := abi_decode_string_fromMemory(_15, add(_15, _17))\n                                }\n                                /// @src 19:2894:2923  \"input[j] = vm.toString(value)\"\n                                mstore(memory_array_index_access_bytes32_dyn(expr_mpos, var_j), expr_mpos_3)\n                                pop(memory_array_index_access_bytes32_dyn(expr_mpos, var_j))\n                            }\n                        }\n                        default /// @src 19:2430:2942  \"if (compareStrings(types[j], \\\"address\\\")) {...\"\n                        {\n                            /// @src 19:2509:2529  \"elements.readAddress\"\n                            let expr_self_mpos_1 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ copy_array_from_storage_to_memory_string_6259()\n                            /// @src 19:2509:2553  \"elements.readAddress(getValuesByIndex(i, j))\"\n                            let expr_1 := fun_readAddress(expr_self_mpos_1, /** @src 19:2530:2552  \"getValuesByIndex(i, j)\" */ fun_getValuesByIndex(var_i, var_j))\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            mstore(/** @src 19:2575:2617  \"data[j] = bytes32(uint256(uint160(value)))\" */ memory_array_index_access_bytes32_dyn(expr_mpos_1, var_j), /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ and(/** @src 19:2601:2615  \"uint160(value)\" */ expr_1, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ sub(shl(160, 1), 1)))\n                            /// @src 19:2650:2668  \"vm.toString(value)\"\n                            let _18 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ mload(64)\n                            /// @src 19:2650:2668  \"vm.toString(value)\"\n                            mstore(_18, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ shl(225, 0x2b65311f))\n                            /// @src 19:2650:2668  \"vm.toString(value)\"\n                            let _19 := staticcall(gas(), /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 19:2650:2668  \"vm.toString(value)\" */ _18, sub(abi_encode_address(add(_18, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 4), /** @src 19:2650:2668  \"vm.toString(value)\" */ expr_1), _18), _18, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _1)\n                            /// @src 19:2650:2668  \"vm.toString(value)\"\n                            if iszero(_19) { revert_forward() }\n                            let expr_mpos_4 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _1\n                            /// @src 19:2650:2668  \"vm.toString(value)\"\n                            if _19\n                            {\n                                let _20 := returndatasize()\n                                returndatacopy(_18, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _1, /** @src 19:2650:2668  \"vm.toString(value)\" */ _20)\n                                finalize_allocation(_18, _20)\n                                expr_mpos_4 := abi_decode_string_fromMemory(_18, add(_18, _20))\n                            }\n                            /// @src 19:2639:2668  \"input[j] = vm.toString(value)\"\n                            mstore(memory_array_index_access_bytes32_dyn(expr_mpos, var_j), expr_mpos_4)\n                            pop(memory_array_index_access_bytes32_dyn(expr_mpos, var_j))\n                        }\n                    }\n                    /// @src 19:3022:3038  \"abi.encode(data)\"\n                    let expr_mpos_5 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ mload(64)\n                    /// @src 19:3022:3038  \"abi.encode(data)\"\n                    let _21 := 0x20\n                    let _22 := sub(abi_encode_array_bytes32_dyn(add(expr_mpos_5, _21), expr_mpos_1), expr_mpos_5)\n                    mstore(expr_mpos_5, add(_22, not(31)))\n                    finalize_allocation(expr_mpos_5, _22)\n                    /// @src 19:3014:3039  \"ltrim64(abi.encode(data))\"\n                    let expr_mpos_6 := fun_ltrim64(expr_mpos_5)\n                    /// @src 19:2991:3041  \"bytes.concat(keccak256(ltrim64(abi.encode(data))))\"\n                    let expr_mpos_7 := bytes_concat_bytes32(/** @src 19:3004:3040  \"keccak256(ltrim64(abi.encode(data)))\" */ keccak256(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(/** @src 19:3004:3040  \"keccak256(ltrim64(abi.encode(data)))\" */ expr_mpos_6, /** @src 19:3022:3038  \"abi.encode(data)\" */ _21), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ mload(/** @src 19:3004:3040  \"keccak256(ltrim64(abi.encode(data)))\" */ expr_mpos_6)))\n                    /// @src 19:2981:3042  \"keccak256(bytes.concat(keccak256(ltrim64(abi.encode(data)))))\"\n                    let expr_2 := keccak256(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(/** @src 19:2981:3042  \"keccak256(bytes.concat(keccak256(ltrim64(abi.encode(data)))))\" */ expr_mpos_7, /** @src 19:3022:3038  \"abi.encode(data)\" */ _21), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ mload(/** @src 19:2981:3042  \"keccak256(bytes.concat(keccak256(ltrim64(abi.encode(data)))))\" */ expr_mpos_7))\n                    /// @src 19:2970:2978  \"leafs[i]\"\n                    let _23, _24 := storage_array_index_access_string_storage_dyn(var_i)\n                    /// @src 19:2970:3042  \"leafs[i] = keccak256(bytes.concat(keccak256(ltrim64(abi.encode(data)))))\"\n                    update_storage_value_bytes32_to_bytes32(_23, _24, expr_2)\n                    /// @src 19:3068:3094  \"stringArrayToString(input)\"\n                    let expr_mpos_8 := fun_stringArrayToString(expr_mpos)\n                    /// @src 19:3056:3065  \"inputs[i]\"\n                    let _25, _26 := storage_array_index_access_string__dyn(var_i)\n                    /// @src 19:3056:3094  \"inputs[i] = stringArrayToString(input)\"\n                    update_storage_value_string_to_string(_25, _26, expr_mpos_8)\n                }\n                /// @src 19:3120:3133  \"uint256 i = 0\"\n                let var_i_1 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _1\n                /// @src 19:3115:3478  \"for (uint256 i = 0; i < count; ++i) {...\"\n                for { }\n                /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 1\n                /// @src 19:3120:3133  \"uint256 i = 0\"\n                {\n                    /// @src 19:3146:3149  \"++i\"\n                    var_i_1 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ add(/** @src 19:3146:3149  \"++i\" */ var_i_1, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 1)\n                }\n                /// @src 19:3146:3149  \"++i\"\n                {\n                    /// @src 19:3135:3144  \"i < count\"\n                    if iszero(lt(var_i_1, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ sload(/** @src 19:2213:2218  \"count\" */ 0x11)))\n                    /// @src 19:3135:3144  \"i < count\"\n                    { break }\n                    /// @src 19:3208:3218  \"m.getProof\"\n                    let expr_address := convert_contract_MerkleScript_to_address(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ extract_from_storage_value_offsett_contract_Merkle(sload(/** @src 19:3208:3209  \"m\" */ 0x0c)))\n                    /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                    let _27 := 64\n                    /// @src 19:3208:3228  \"m.getProof(leafs, i)\"\n                    let _28 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ mload(_27)\n                    /// @src 19:3208:3228  \"m.getProof(leafs, i)\"\n                    mstore(_28, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ shl(224, 0xb8616195))\n                    let _29 := 4\n                    /// @src 19:3208:3228  \"m.getProof(leafs, i)\"\n                    let _30 := staticcall(gas(), expr_address, _28, sub(abi_encode_array_bytes32_dyn_storage_uint256(add(_28, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _29), /** @src 19:3208:3228  \"m.getProof(leafs, i)\" */ var_i_1), _28), _28, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _1)\n                    /// @src 19:3208:3228  \"m.getProof(leafs, i)\"\n                    if iszero(_30) { revert_forward() }\n                    let expr_mpos_9 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _1\n                    /// @src 19:3208:3228  \"m.getProof(leafs, i)\"\n                    if _30\n                    {\n                        let _31 := returndatasize()\n                        returndatacopy(_28, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _1, /** @src 19:3208:3228  \"m.getProof(leafs, i)\" */ _31)\n                        finalize_allocation(_28, _31)\n                        expr_mpos_9 := abi_decode_array_bytes32_dyn_fromMemory(_28, add(_28, _31))\n                    }\n                    /// @src 19:3187:3229  \"bytes32ArrayToString(m.getProof(leafs, i))\"\n                    let expr_mpos_10 := fun_bytes32ArrayToString(expr_mpos_9)\n                    /// @src 19:3276:3292  \"m.getRoot(leafs)\"\n                    let _32 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ mload(_27)\n                    /// @src 19:3276:3292  \"m.getRoot(leafs)\"\n                    mstore(_32, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ shl(225, 0x17046b01))\n                    /// @src 19:3022:3038  \"abi.encode(data)\"\n                    let _33 := 0x20\n                    /// @src 19:3276:3292  \"m.getRoot(leafs)\"\n                    let _34 := staticcall(gas(), expr_address, _32, sub(abi_encode_array_bytes32_dyn_storage_6264(add(_32, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _29)), /** @src 19:3276:3292  \"m.getRoot(leafs)\" */ _32), _32, /** @src 19:3022:3038  \"abi.encode(data)\" */ _33)\n                    /// @src 19:3276:3292  \"m.getRoot(leafs)\"\n                    if iszero(_34) { revert_forward() }\n                    let expr_3 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _1\n                    /// @src 19:3276:3292  \"m.getRoot(leafs)\"\n                    if _34\n                    {\n                        let _35 := /** @src 19:3022:3038  \"abi.encode(data)\" */ _33\n                        /// @src 19:3276:3292  \"m.getRoot(leafs)\"\n                        if gt(/** @src 19:3022:3038  \"abi.encode(data)\" */ _33, /** @src 19:3276:3292  \"m.getRoot(leafs)\" */ returndatasize()) { _35 := returndatasize() }\n                        finalize_allocation(_32, _35)\n                        expr_3 := abi_decode_uint256_fromMemory(_32, add(_32, _35))\n                    }\n                    /// @src 19:3264:3293  \"vm.toString(m.getRoot(leafs))\"\n                    let _36 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ mload(_27)\n                    let _37 := shl(227, 0x1623433d)\n                    /// @src 19:3264:3293  \"vm.toString(m.getRoot(leafs))\"\n                    mstore(_36, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _37)\n                    /// @src 19:3264:3293  \"vm.toString(m.getRoot(leafs))\"\n                    let _38 := sub(abi_encode_uint256(add(_36, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _29), /** @src 19:3264:3293  \"vm.toString(m.getRoot(leafs))\" */ expr_3), _36)\n                    /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                    let _39 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                    /// @src 19:3264:3293  \"vm.toString(m.getRoot(leafs))\"\n                    let _40 := staticcall(gas(), /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _39, /** @src 19:3264:3293  \"vm.toString(m.getRoot(leafs))\" */ _36, _38, _36, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _1)\n                    /// @src 19:3264:3293  \"vm.toString(m.getRoot(leafs))\"\n                    if iszero(_40) { revert_forward() }\n                    let expr_mpos_11 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _1\n                    /// @src 19:3264:3293  \"vm.toString(m.getRoot(leafs))\"\n                    if _40\n                    {\n                        let _41 := returndatasize()\n                        returndatacopy(_36, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _1, /** @src 19:3264:3293  \"vm.toString(m.getRoot(leafs))\" */ _41)\n                        finalize_allocation(_36, _41)\n                        expr_mpos_11 := abi_decode_string_fromMemory(_36, add(_36, _41))\n                    }\n                    /// @src 19:3340:3348  \"leafs[i]\"\n                    let _42, _43 := storage_array_index_access_string_storage_dyn(var_i_1)\n                    let _44 := /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ extract_from_storage_value_dynamict_bytes32(sload(/** @src 19:3340:3348  \"leafs[i]\" */ _42), _43)\n                    /// @src 19:3328:3349  \"vm.toString(leafs[i])\"\n                    let _45 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ mload(_27)\n                    /// @src 19:3328:3349  \"vm.toString(leafs[i])\"\n                    mstore(_45, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _37)\n                    /// @src 19:3328:3349  \"vm.toString(leafs[i])\"\n                    let _46 := staticcall(gas(), /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _39, /** @src 19:3328:3349  \"vm.toString(leafs[i])\" */ _45, sub(abi_encode_uint256(add(_45, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _29), /** @src 19:3328:3349  \"vm.toString(leafs[i])\" */ _44), _45), _45, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _1)\n                    /// @src 19:3328:3349  \"vm.toString(leafs[i])\"\n                    if iszero(_46) { revert_forward() }\n                    let expr_mpos_12 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _1\n                    /// @src 19:3328:3349  \"vm.toString(leafs[i])\"\n                    if _46\n                    {\n                        let _47 := returndatasize()\n                        returndatacopy(_45, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _1, /** @src 19:3328:3349  \"vm.toString(leafs[i])\" */ _47)\n                        finalize_allocation(_45, _47)\n                        expr_mpos_12 := abi_decode_string_fromMemory(_45, add(_45, _47))\n                    }\n                    /// @src 19:3385:3394  \"inputs[i]\"\n                    let _48, _49 := storage_array_index_access_string__dyn(var_i_1)\n                    /// @src 19:1973:1986  \"return result\"\n                    let var_mpos := /** @src 19:1648:1962  \"string.concat(...\" */ string_concat_stringliteral_a91e_stringliteral_ad4b_string_stringliteral_3e7a_stringliteral_ebb8_string_stringliteral_3e7a_stringliteral_58ce_string_stringliteral_stringliteral_25c0_string_stringliteral_6e9f_stringliteral_8e2f(/** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ copy_array_from_storage_to_memory_string(/** @src 19:3363:3394  \"string memory input = inputs[i]\" */ _48), /** @src 19:1648:1962  \"string.concat(...\" */ expr_mpos_10, expr_mpos_11, expr_mpos_12)\n                    /// @src 19:3409:3419  \"outputs[i]\"\n                    let _50, _51 := storage_array_index_access_string__dyn_6267(var_i_1)\n                    /// @src 19:3409:3467  \"outputs[i] = generateJsonEntries(input, proof, root, leaf)\"\n                    update_storage_value_string_to_string(_50, _51, var_mpos)\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                copy_byte_array_to_storage_from_string_to_string(/** @src 19:3497:3530  \"stringArrayToArrayString(outputs)\" */ fun_stringArrayToArrayString(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ copy_array_from_storage_to_memory_array_string__dyn()))\n                /// @src 19:3567:3583  \"vm.projectRoot()\"\n                let _52 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ mload(64)\n                /// @src 19:3567:3583  \"vm.projectRoot()\"\n                mstore(_52, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ shl(225, 0x6c985073))\n                let _53 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                /// @src 19:3567:3583  \"vm.projectRoot()\"\n                let _54 := staticcall(gas(), /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _53, /** @src 19:3567:3583  \"vm.projectRoot()\" */ _52, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 4, /** @src 19:3567:3583  \"vm.projectRoot()\" */ _52, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _1)\n                /// @src 19:3567:3583  \"vm.projectRoot()\"\n                if iszero(_54) { revert_forward() }\n                let expr_mpos_13 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _1\n                /// @src 19:3567:3583  \"vm.projectRoot()\"\n                if _54\n                {\n                    let _55 := returndatasize()\n                    returndatacopy(_52, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _1, /** @src 19:3567:3583  \"vm.projectRoot()\" */ _55)\n                    finalize_allocation(_52, _55)\n                    expr_mpos_13 := abi_decode_string_fromMemory(_52, add(_52, _55))\n                }\n                /// @src 19:3553:3596  \"string.concat(vm.projectRoot(), outputPath)\"\n                let expr_mpos_14 := string_concat_string_string_storage(expr_mpos_13)\n                /// @src 19:3540:3605  \"vm.writeFile(string.concat(vm.projectRoot(), outputPath), output)\"\n                if iszero(extcodesize(/** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _53))\n                /// @src 19:3540:3605  \"vm.writeFile(string.concat(vm.projectRoot(), outputPath), output)\"\n                {\n                    /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                    revert(_1, _1)\n                }\n                /// @src 19:3540:3605  \"vm.writeFile(string.concat(vm.projectRoot(), outputPath), output)\"\n                let _56 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ mload(64)\n                /// @src 19:3540:3605  \"vm.writeFile(string.concat(vm.projectRoot(), outputPath), output)\"\n                mstore(_56, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ shl(224, 0x897e0a97))\n                /// @src 19:3540:3605  \"vm.writeFile(string.concat(vm.projectRoot(), outputPath), output)\"\n                let _57 := call(gas(), /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _53, _1, /** @src 19:3540:3605  \"vm.writeFile(string.concat(vm.projectRoot(), outputPath), output)\" */ _56, sub(abi_encode_string_string_storage(add(_56, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 4), /** @src 19:3540:3605  \"vm.writeFile(string.concat(vm.projectRoot(), outputPath), output)\" */ expr_mpos_14), _56), _56, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _1)\n                /// @src 19:3540:3605  \"vm.writeFile(string.concat(vm.projectRoot(), outputPath), output)\"\n                if iszero(_57) { revert_forward() }\n                if _57\n                {\n                    finalize_allocation_6272(_56)\n                    abi_decode(_56, _56)\n                }\n                /// @src 19:3616:3673  \"console.log(\\\"DONE: The output is found at %s\\\", inputPath)\"\n                let _mpos_3 := /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ copy_literal_to_memory_37106a7f3a49ca912cf7a53b366425c214abe1e11f3ee05d4f454eaf1d97589e()\n                /// @src 19:3616:3673  \"console.log(\\\"DONE: The output is found at %s\\\", inputPath)\"\n                fun_log(_mpos_3, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ copy_array_from_storage_to_memory_string_6256())\n                return(_1, _1)\n            }\n            function external_fun_IS_SCRIPT()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let value := and(shr(16, sload(/** @src 1:800:828  \"bool public IS_SCRIPT = true\" */ 12)), /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 0xff)\n                let memPos := mload(64)\n                mstore(memPos, iszero(iszero(value)))\n                return(memPos, 32)\n            }\n            function convert_contract_MerkleScript_to_address(value) -> converted\n            {\n                converted := and(value, sub(shl(160, 1), 1))\n            }\n            function panic_error_0x41()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            function finalize_allocation_6254()\n            { mstore(64, 128) }\n            function finalize_allocation_6272(memPtr)\n            {\n                if gt(memPtr, 0xffffffffffffffff) { panic_error_0x41() }\n                mstore(64, memPtr)\n            }\n            function finalize_allocation_12138(memPtr)\n            {\n                let newFreePtr := add(memPtr, 64)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), /** @src 19:3022:3038  \"abi.encode(data)\" */ not(31)))\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function revert_forward()\n            {\n                let pos := mload(64)\n                returndatacopy(pos, 0, returndatasize())\n                revert(pos, returndatasize())\n            }\n            function copy_literal_to_memory_6f9d520e9cf19bc666ddef81ca16a7330a6bfd6ca6826ce99b2cc0293d094d13() -> memPtr\n            {\n                let memPtr_1 := mload(64)\n                finalize_allocation_12138(memPtr_1)\n                mstore(memPtr_1, 30)\n                memPtr := memPtr_1\n                mstore(add(memPtr_1, 32), \"Generating Merkle Proof for %s\")\n            }\n            function extract_byte_array_length(data) -> length\n            {\n                length := shr(1, data)\n                let outOfPlaceEncoding := and(data, 1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                if eq(outOfPlaceEncoding, lt(length, 32))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(0, 0x24)\n                }\n            }\n            function array_dataslot_string_storage_12143() -> data\n            {\n                mstore(0, /** @src 19:3488:3530  \"output = stringArrayToArrayString(outputs)\" */ 0x15)\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                data := 38878206584692966203415385907871375197469080758325516314230789535345649042549\n            }\n            function array_dataslot_string_storage(ptr) -> data\n            {\n                mstore(0, ptr)\n                data := keccak256(0, 0x20)\n            }\n            function copy_array_from_storage_to_memory_string_6256() -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                let slotValue := sload(/** @src 19:2168:2177  \"inputPath\" */ 0x0d)\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                let length := extract_byte_array_length(slotValue)\n                mstore(memPtr, length)\n                let _1 := 0x20\n                let _2 := 1\n                switch and(slotValue, 1)\n                case 0 {\n                    mstore(add(memPtr, 0x20), and(slotValue, not(255)))\n                    ret := add(add(memPtr, shl(5, iszero(iszero(length)))), 0x20)\n                }\n                case 1 {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 19:2168:2177  \"inputPath\" */ 0x0d)\n                    /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                    let dataPos := 97569884605916225051403212656556507955018248777258318895762758024193532305077\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                    for { } lt(i, length) { i := add(i, _1) }\n                    {\n                        mstore(add(add(memPtr, i), _1), sload(dataPos))\n                        dataPos := add(dataPos, _2)\n                    }\n                    ret := add(add(memPtr, i), 0x20)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function copy_array_from_storage_to_memory_string_6259() -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                let slotValue := sload(/** @src 19:2782:2790  \"elements\" */ 0x0f)\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                let length := extract_byte_array_length(slotValue)\n                mstore(memPtr, length)\n                let _1 := 0x20\n                let _2 := 1\n                switch and(slotValue, 1)\n                case 0 {\n                    mstore(add(memPtr, 0x20), and(slotValue, not(255)))\n                    ret := add(add(memPtr, shl(5, iszero(iszero(length)))), 0x20)\n                }\n                case 1 {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 19:2782:2790  \"elements\" */ 0x0f)\n                    /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                    let dataPos := 63806209331542711802848847270949280092855778197726125910674179583545433573378\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                    for { } lt(i, length) { i := add(i, _1) }\n                    {\n                        mstore(add(add(memPtr, i), _1), sload(dataPos))\n                        dataPos := add(dataPos, _2)\n                    }\n                    ret := add(add(memPtr, i), 0x20)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function copy_array_from_storage_to_memory_string(slot) -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                let slotValue := sload(slot)\n                let length := extract_byte_array_length(slotValue)\n                mstore(memPtr, length)\n                let _1 := 0x20\n                let _2 := 1\n                switch and(slotValue, 1)\n                case 0 {\n                    mstore(add(memPtr, _1), and(slotValue, not(255)))\n                    ret := add(add(memPtr, shl(5, iszero(iszero(length)))), _1)\n                }\n                case 1 {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ slot)\n                    let dataPos := keccak256(/** @src -1:-1:-1 */ 0, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _1)\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                    for { } lt(i, length) { i := add(i, _1) }\n                    {\n                        mstore(add(add(memPtr, i), _1), sload(dataPos))\n                        dataPos := add(dataPos, _2)\n                    }\n                    ret := add(add(memPtr, i), _1)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function array_allocation_size_array_string_dyn(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n                size := add(shl(5, length), 0x20)\n            }\n            function allocate_and_zero_memory_array_array_string_dyn(length) -> memPtr\n            {\n                let _1 := array_allocation_size_array_string_dyn(length)\n                let memPtr_1 := mload(64)\n                finalize_allocation(memPtr_1, _1)\n                mstore(memPtr_1, length)\n                memPtr := memPtr_1\n                let _2 := add(array_allocation_size_array_string_dyn(length), /** @src 19:3022:3038  \"abi.encode(data)\" */ not(31))\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                for { } lt(i, _2) { i := add(i, 32) }\n                {\n                    mstore(add(add(memPtr_1, i), 32), 96)\n                }\n            }\n            function allocate_and_zero_memory_array_array_bytes32_dyn(length) -> memPtr\n            {\n                let _1 := array_allocation_size_array_string_dyn(length)\n                let memPtr_1 := mload(64)\n                finalize_allocation(memPtr_1, _1)\n                mstore(memPtr_1, length)\n                memPtr := memPtr_1\n                calldatacopy(add(memPtr_1, 32), calldatasize(), add(array_allocation_size_array_string_dyn(length), /** @src 19:3022:3038  \"abi.encode(data)\" */ not(31)))\n            }\n            /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n            function panic_error_0x32()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x32)\n                revert(0, 0x24)\n            }\n            function storage_array_index_access_string__dyn_6257(index) -> slot, offset\n            {\n                if iszero(lt(index, sload(/** @src 19:2276:2281  \"types\" */ 0x10)))\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                { panic_error_0x32() }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 19:2276:2281  \"types\" */ 0x10)\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                slot := add(12396694973890998440467380340983585058878106250672390494374587083972727727730, index)\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n            function storage_array_index_access_string_storage_dyn(index) -> slot, offset\n            {\n                if iszero(lt(index, sload(/** @src 19:2970:2975  \"leafs\" */ 0x12)))\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                { panic_error_0x32() }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 19:2970:2975  \"leafs\" */ 0x12)\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                slot := add(84827061063453624289975705683721713058963870421084015214609271099009937454148, index)\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n            function storage_array_index_access_string__dyn(index) -> slot, offset\n            {\n                if iszero(lt(index, sload(/** @src 19:3056:3062  \"inputs\" */ 0x13)))\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                { panic_error_0x32() }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 19:3056:3062  \"inputs\" */ 0x13)\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                slot := add(46529144392117707452946260303848603952187628831689540306122340668716214558864, index)\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n            function storage_array_index_access_string__dyn_6267(index) -> slot, offset\n            {\n                if iszero(lt(index, sload(/** @src 19:3409:3416  \"outputs\" */ 0x14)))\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                { panic_error_0x32() }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 19:3409:3416  \"outputs\" */ 0x14)\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                slot := add(93369884277498597659590946175997448338802118867485977633968544981113634346220, index)\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n            function copy_literal_to_memory_421683f821a0574472445355be6d2b769119e8515f8376a1d7878523dfdecf7b() -> memPtr\n            {\n                let memPtr_1 := mload(64)\n                finalize_allocation_12138(memPtr_1)\n                mstore(memPtr_1, 7)\n                memPtr := memPtr_1\n                mstore(add(memPtr_1, 32), \"address\")\n            }\n            function copy_literal_to_memory_78b9198c2298bca6916a2669592af279cda8160226cf57bc4580c40c0a8b1713() -> memPtr\n            {\n                let memPtr_1 := mload(64)\n                finalize_allocation_12138(memPtr_1)\n                mstore(memPtr_1, 4)\n                memPtr := memPtr_1\n                mstore(add(memPtr_1, 32), \"uint\")\n            }\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            function abi_decode_uint256_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32)\n                {\n                    /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                    revert(0, 0)\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                value0 := mload(headStart)\n            }\n            function copy_memory_to_memory_with_cleanup(src, dst, length)\n            {\n                let i := 0\n                for { } lt(i, length) { i := add(i, 32) }\n                {\n                    mstore(add(dst, i), mload(add(src, i)))\n                }\n                mstore(add(dst, length), 0)\n            }\n            function abi_encode_string_to_string(value, pos) -> end\n            {\n                let length := mload(value)\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                mstore(pos, length)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                copy_memory_to_memory_with_cleanup(add(value, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 0x20), add(pos, 0x20), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length)\n                end := add(add(/** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ pos, and(add(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 31), /** @src 19:3022:3038  \"abi.encode(data)\" */ not(31))), /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 0x20)\n            }\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                mstore(headStart, 32)\n                tail := abi_encode_string_to_string(value0, add(headStart, 32))\n            }\n            function memory_array_index_access_bytes32_dyn(baseRef, index) -> addr\n            {\n                if iszero(lt(index, mload(baseRef))) { panic_error_0x32() }\n                addr := add(add(baseRef, shl(5, index)), 32)\n            }\n            function abi_decode_string_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32)\n                {\n                    /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                    revert(0, 0)\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let offset := mload(headStart)\n                let _1 := 0xffffffffffffffff\n                if gt(offset, _1)\n                {\n                    /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                    revert(0, 0)\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let _2 := add(headStart, offset)\n                if iszero(slt(add(_2, 0x1f), dataEnd))\n                {\n                    /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let _3 := mload(_2)\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                if gt(_3, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _1)\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                { panic_error_0x41() }\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, add(and(add(_3, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x1f), /** @src 19:3022:3038  \"abi.encode(data)\" */ not(31)), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 32))\n                mstore(memPtr, _3)\n                if gt(add(add(_2, _3), 32), dataEnd)\n                {\n                    /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                copy_memory_to_memory_with_cleanup(add(_2, 32), add(memPtr, 32), _3)\n                value0 := memPtr\n            }\n            function abi_encode_uint256(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, value0)\n            }\n            function abi_encode_address(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ value0, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ sub(shl(160, 1), 1)))\n            }\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            function abi_encode_array_bytes32_dyn(headStart, value0) -> tail\n            {\n                let _1 := 32\n                let tail_1 := add(headStart, 32)\n                mstore(headStart, 32)\n                let pos := tail_1\n                let length := mload(value0)\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                mstore(tail_1, length)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                pos := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ add(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ headStart, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 64)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let srcPtr := add(value0, 32)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, mload(srcPtr))\n                    pos := add(pos, _1)\n                    srcPtr := add(srcPtr, _1)\n                }\n                tail := pos\n            }\n            function bytes_concat_bytes32(param) -> outPtr\n            {\n                outPtr := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ mload(64)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                mstore(add(outPtr, 0x20), param)\n                mstore(outPtr, 0x20)\n                finalize_allocation_12138(outPtr)\n            }\n            function update_storage_value_bytes32_to_bytes32(slot, offset, value)\n            {\n                let _1 := sload(slot)\n                let shiftBits := shl(3, offset)\n                sstore(slot, or(and(_1, not(shl(shiftBits, not(0)))), shl(shiftBits, value)))\n            }\n            function clean_up_bytearray_end_slots_string_storage_12142(len, startIndex)\n            {\n                if gt(len, 31)\n                {\n                    /// @src -1:-1:-1\n                    let _1 := 0\n                    /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 19:3488:3530  \"output = stringArrayToArrayString(outputs)\" */ 0x15)\n                    /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                    let _2 := 38878206584692966203415385907871375197469080758325516314230789535345649042549\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let deleteStart := add(/** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _2, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shr(5, add(startIndex, 31)))\n                    if lt(startIndex, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 0x20)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    {\n                        deleteStart := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _2\n                    }\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let _3 := add(/** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _2, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shr(5, add(len, 31)))\n                    let start := deleteStart\n                    for { } lt(start, _3) { start := add(start, 1) }\n                    {\n                        sstore(start, /** @src -1:-1:-1 */ _1)\n                    }\n                }\n            }\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n            {\n                if gt(len, 31)\n                {\n                    /// @src -1:-1:-1\n                    let _1 := 0\n                    /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ array)\n                    let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 0x20)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let deleteStart := add(data, shr(5, add(startIndex, 31)))\n                    if lt(startIndex, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 0x20)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    { deleteStart := data }\n                    let _2 := add(data, shr(5, add(len, 31)))\n                    let start := deleteStart\n                    for { } lt(start, _2) { start := add(start, 1) }\n                    {\n                        sstore(start, /** @src -1:-1:-1 */ _1)\n                    }\n                }\n            }\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n            {\n                used := or(and(data, not(/** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ shr(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(3, len), not(0)))), shl(1, len))\n            }\n            function copy_byte_array_to_storage_from_string_to_string(src)\n            {\n                let newLen := mload(src)\n                if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n                clean_up_bytearray_end_slots_string_storage_12142(extract_byte_array_length(sload(/** @src 19:3488:3530  \"output = stringArrayToArrayString(outputs)\" */ 0x15)), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ newLen)\n                let srcOffset := 0\n                let srcOffset_1 := 0x20\n                srcOffset := 0x20\n                switch gt(newLen, 31)\n                case 1 {\n                    let loopEnd := and(newLen, /** @src 19:3022:3038  \"abi.encode(data)\" */ not(31))\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let dstPtr := array_dataslot_string_storage_12143()\n                    let i := 0\n                    for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n                    {\n                        sstore(dstPtr, mload(add(src, srcOffset)))\n                        dstPtr := add(dstPtr, 1)\n                        srcOffset := add(srcOffset, srcOffset_1)\n                    }\n                    if lt(loopEnd, newLen)\n                    {\n                        let lastValue := mload(add(src, srcOffset))\n                        sstore(dstPtr, and(lastValue, not(/** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ shr(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ and(shl(3, newLen), 248), not(0)))))\n                    }\n                    sstore(/** @src 19:3488:3530  \"output = stringArrayToArrayString(outputs)\" */ 0x15, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(shl(1, newLen), 1))\n                }\n                default {\n                    let value := 0\n                    if newLen\n                    {\n                        value := mload(add(src, srcOffset))\n                    }\n                    sstore(/** @src 19:3488:3530  \"output = stringArrayToArrayString(outputs)\" */ 0x15, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n                }\n            }\n            function update_storage_value_string_to_string(slot, offset, value)\n            {\n                if offset\n                {\n                    mstore(0, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ shl(224, 0x4e487b71))\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    mstore(4, 0)\n                    revert(0, 0x24)\n                }\n                let newLen := mload(value)\n                if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n                clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n                let srcOffset := 0\n                let srcOffset_1 := 0x20\n                srcOffset := 0x20\n                switch gt(newLen, 31)\n                case 1 {\n                    let loopEnd := and(newLen, /** @src 19:3022:3038  \"abi.encode(data)\" */ not(31))\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let dstPtr := array_dataslot_string_storage(slot)\n                    let i := 0\n                    for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n                    {\n                        sstore(dstPtr, mload(add(value, srcOffset)))\n                        dstPtr := add(dstPtr, 1)\n                        srcOffset := add(srcOffset, srcOffset_1)\n                    }\n                    if lt(loopEnd, newLen)\n                    {\n                        let lastValue := mload(add(value, srcOffset))\n                        sstore(dstPtr, and(lastValue, not(/** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ shr(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ and(shl(3, newLen), 248), not(0)))))\n                    }\n                    sstore(slot, add(shl(1, newLen), 1))\n                }\n                default {\n                    let value_1 := 0\n                    if newLen\n                    {\n                        value_1 := mload(add(value, srcOffset))\n                    }\n                    sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value_1, newLen))\n                }\n            }\n            function extract_from_storage_value_offsett_contract_Merkle(slot_value) -> value\n            {\n                value := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shr(24, slot_value), /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ sub(shl(160, 1), 1))\n            }\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            function abi_decode_array_bytes32_dyn_fromMemory(headStart, dataEnd) -> value0\n            {\n                let _1 := 32\n                if slt(sub(dataEnd, headStart), _1)\n                {\n                    /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                    revert(0, 0)\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let offset := mload(headStart)\n                if gt(offset, 0xffffffffffffffff)\n                {\n                    /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                    revert(0, 0)\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let _2 := add(headStart, offset)\n                if iszero(slt(add(_2, 0x1f), dataEnd))\n                {\n                    /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let _3 := mload(_2)\n                let _4 := array_allocation_size_array_string_dyn(_3)\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _4)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let dst := memPtr\n                mstore(memPtr, _3)\n                dst := add(memPtr, _1)\n                let srcEnd := add(add(_2, shl(5, _3)), _1)\n                if gt(srcEnd, dataEnd)\n                {\n                    /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let src := add(_2, _1)\n                for { } lt(src, srcEnd) { src := add(src, _1) }\n                {\n                    mstore(dst, mload(src))\n                    dst := add(dst, _1)\n                }\n                value0 := memPtr\n            }\n            function abi_encode_array_bytes32_dyn_storage(pos) -> end\n            {\n                let length := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ sload(/** @src 19:2970:2975  \"leafs\" */ 0x12)\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                mstore(pos, length)\n                let _1 := 0x20\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                pos := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ add(pos, 0x20)\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 19:2970:2975  \"leafs\" */ 0x12)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let srcPtr := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 84827061063453624289975705683721713058963870421084015214609271099009937454148\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, sload(srcPtr))\n                    pos := add(pos, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _1)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    srcPtr := add(srcPtr, 1)\n                }\n                end := pos\n            }\n            function abi_encode_array_bytes32_dyn_storage_uint256(headStart, value1) -> tail\n            {\n                mstore(headStart, 64)\n                tail := abi_encode_array_bytes32_dyn_storage(add(headStart, 64))\n                mstore(add(headStart, 32), value1)\n            }\n            function abi_encode_array_bytes32_dyn_storage_6264(headStart) -> tail\n            {\n                mstore(headStart, 32)\n                tail := abi_encode_array_bytes32_dyn_storage(add(headStart, 32))\n            }\n            function extract_from_storage_value_dynamict_bytes32(slot_value, offset) -> value\n            {\n                value := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ shr(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(3, offset), slot_value)\n            }\n            function copy_array_from_storage_to_memory_array_string__dyn() -> memPtr\n            {\n                let length := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ sload(/** @src 19:3409:3416  \"outputs\" */ 0x14)\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                let _1 := array_allocation_size_array_string_dyn(length)\n                let memPtr_1 := mload(64)\n                finalize_allocation(memPtr_1, _1)\n                mstore(memPtr_1, length)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                memPtr := memPtr_1\n                let mpos := memPtr_1\n                let _2 := 0x20\n                mpos := add(memPtr_1, 0x20)\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 19:3409:3416  \"outputs\" */ 0x14)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let spos := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 93369884277498597659590946175997448338802118867485977633968544981113634346220\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(mpos, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ copy_array_from_storage_to_memory_string(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ spos))\n                    mpos := add(mpos, _2)\n                    spos := add(spos, 1)\n                }\n            }\n            function abi_encode_string_memory_ptr(value, pos) -> end\n            {\n                let length := mload(value)\n                copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n                end := add(pos, length)\n            }\n            function string_concat_string_string_storage(param) -> outPtr\n            {\n                outPtr := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ mload(64)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let _1 := 0x20\n                let length := mload(param)\n                copy_memory_to_memory_with_cleanup(add(param, _1), add(outPtr, _1), length)\n                let _2 := add(outPtr, length)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let slotValue := sload(/** @src 19:3585:3595  \"outputPath\" */ 0x0e)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let length_1 := extract_byte_array_length(slotValue)\n                let _3 := 1\n                switch and(slotValue, 1)\n                case 0 {\n                    mstore(add(_2, _1), and(slotValue, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ not(255)))\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    ret := add(add(_2, mul(length_1, iszero(iszero(length_1)))), _1)\n                }\n                case 1 {\n                    /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 19:3585:3595  \"outputPath\" */ 0x0e)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let dataPos := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 84800337471693920904250232874319843718400766719524250287777680170677855896573\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    for { } lt(i, length_1) { i := add(i, _1) }\n                    {\n                        mstore(add(add(_2, i), _1), sload(dataPos))\n                        dataPos := add(dataPos, _3)\n                    }\n                    ret := add(add(_2, length_1), _1)\n                }\n                let _4 := sub(ret, outPtr)\n                mstore(outPtr, add(_4, /** @src 19:3022:3038  \"abi.encode(data)\" */ not(31)))\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                finalize_allocation(outPtr, _4)\n            }\n            function abi_encode_string_string_storage(headStart, value0) -> tail\n            {\n                mstore(headStart, 64)\n                let tail_1 := abi_encode_string_to_string(value0, add(headStart, 64))\n                let _1 := 32\n                mstore(add(headStart, _1), sub(tail_1, headStart))\n                let ret := 0\n                let slotValue := sload(/** @src 19:3488:3530  \"output = stringArrayToArrayString(outputs)\" */ 0x15)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let length := extract_byte_array_length(slotValue)\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                mstore(tail_1, length)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let _2 := 1\n                switch and(slotValue, 1)\n                case 0 {\n                    mstore(/** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ add(tail_1, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _1), and(slotValue, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ not(255)))\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    ret := add(add(/** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ tail_1, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(5, iszero(iszero(length)))), _1)\n                }\n                case 1 {\n                    /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                    mstore(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0, /** @src 19:3488:3530  \"output = stringArrayToArrayString(outputs)\" */ 0x15)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let dataPos := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 38878206584692966203415385907871375197469080758325516314230789535345649042549\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let i := 0\n                    for { } lt(i, length) { i := add(i, _1) }\n                    {\n                        mstore(add(add(/** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ tail_1, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ i), _1), sload(dataPos))\n                        dataPos := add(dataPos, _2)\n                    }\n                    ret := add(add(/** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ tail_1, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ i), _1)\n                }\n                tail := ret\n            }\n            function copy_literal_to_memory_37106a7f3a49ca912cf7a53b366425c214abe1e11f3ee05d4f454eaf1d97589e() -> memPtr\n            {\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                let memPtr_1 := mload(64)\n                finalize_allocation_12138(memPtr_1)\n                mstore(memPtr_1, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 31)\n                memPtr := memPtr_1\n                mstore(add(memPtr_1, 32), \"DONE: The output is found at %s\")\n            }\n            /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n            function abi_encode_string_string(headStart, value0, value1) -> tail\n            {\n                mstore(headStart, 64)\n                let tail_1 := abi_encode_string_to_string(value0, add(headStart, 64))\n                mstore(add(headStart, 32), sub(tail_1, headStart))\n                tail := abi_encode_string_to_string(value1, tail_1)\n            }\n            /// @ast-id 13014 @src 10:6693:6843  \"function log(string memory p0, string memory p1) internal view {...\"\n            function fun_log(var_p0_mpos, var_p1_mpos)\n            {\n                /// @src 10:6782:6835  \"abi.encodeWithSignature(\\\"log(string,string)\\\", p0, p1)\"\n                let expr_13010_mpos := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ mload(64)\n                /// @src 10:6782:6835  \"abi.encodeWithSignature(\\\"log(string,string)\\\", p0, p1)\"\n                let _1 := add(expr_13010_mpos, 0x20)\n                mstore(_1, shl(224, 0x4b5c4277))\n                let _2 := sub(abi_encode_string_string(add(expr_13010_mpos, 36), var_p0_mpos, var_p1_mpos), expr_13010_mpos)\n                mstore(expr_13010_mpos, add(_2, /** @src 19:3022:3038  \"abi.encode(data)\" */ not(31)))\n                /// @src 10:6782:6835  \"abi.encodeWithSignature(\\\"log(string,string)\\\", p0, p1)\"\n                finalize_allocation(expr_13010_mpos, _2)\n                /// @src 10:392:551  \"assembly {...\"\n                pop(staticcall(gas(), /** @src 10:131:173  \"0x000000000000000000636F6e736F6c652e6c6f67\" */ 0x636f6e736f6c652e6c6f67, /** @src 10:392:551  \"assembly {...\" */ _1, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ mload(/** @src 10:275:289  \"payload.length\" */ expr_13010_mpos), /** @src 10:392:551  \"assembly {...\" */ 0, 0))\n            }\n            /// @ast-id 43636 @src 20:240:421  \"function compareStrings(string memory a, string memory b) internal pure returns (bool) {...\"\n            function fun_compareStrings(var_a_mpos, var_b_mpos) -> var_\n            {\n                /// @src 20:355:376  \"abi.encodePacked((a))\"\n                let expr_43623_mpos := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ mload(64)\n                /// @src 20:355:376  \"abi.encodePacked((a))\"\n                let _1 := 0x20\n                let _2 := add(expr_43623_mpos, _1)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let length := mload(var_a_mpos)\n                copy_memory_to_memory_with_cleanup(add(var_a_mpos, /** @src 20:355:376  \"abi.encodePacked((a))\" */ _1), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _2, length)\n                /// @src 20:355:376  \"abi.encodePacked((a))\"\n                let _3 := sub(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(/** @src 20:355:376  \"abi.encodePacked((a))\" */ expr_43623_mpos, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length), /** @src 20:355:376  \"abi.encodePacked((a))\" */ expr_43623_mpos)\n                mstore(expr_43623_mpos, _3)\n                finalize_allocation(expr_43623_mpos, add(_3, _1))\n                /// @src 20:345:377  \"keccak256(abi.encodePacked((a)))\"\n                let expr := keccak256(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _2, mload(/** @src 20:345:377  \"keccak256(abi.encodePacked((a)))\" */ expr_43623_mpos))\n                /// @src 20:391:412  \"abi.encodePacked((b))\"\n                let expr_43630_mpos := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ mload(64)\n                /// @src 20:391:412  \"abi.encodePacked((b))\"\n                let _4 := add(expr_43630_mpos, /** @src 20:355:376  \"abi.encodePacked((a))\" */ _1)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let length_1 := mload(var_b_mpos)\n                copy_memory_to_memory_with_cleanup(add(var_b_mpos, /** @src 20:355:376  \"abi.encodePacked((a))\" */ _1), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _4, length_1)\n                /// @src 20:391:412  \"abi.encodePacked((b))\"\n                let _5 := sub(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(/** @src 20:391:412  \"abi.encodePacked((b))\" */ expr_43630_mpos, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length_1), /** @src 20:391:412  \"abi.encodePacked((b))\" */ expr_43630_mpos)\n                mstore(expr_43630_mpos, _5)\n                finalize_allocation(expr_43630_mpos, add(_5, /** @src 20:355:376  \"abi.encodePacked((a))\" */ _1))\n                /// @src 20:337:414  \"return (keccak256(abi.encodePacked((a))) == keccak256(abi.encodePacked((b))))\"\n                var_ := /** @src 20:345:413  \"keccak256(abi.encodePacked((a))) == keccak256(abi.encodePacked((b)))\" */ eq(expr, /** @src 20:381:413  \"keccak256(abi.encodePacked((b)))\" */ keccak256(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _4, mload(/** @src 20:381:413  \"keccak256(abi.encodePacked((b)))\" */ expr_43630_mpos)))\n            }\n            /// @ast-id 43309 @src 19:1196:1368  \"function getValuesByIndex(uint256 i, uint256 j) internal pure returns (string memory) {...\"\n            function fun_getValuesByIndex(var_i, var_j) -> var_43291_mpos\n            {\n                /// @src 19:1325:1339  \"vm.toString(i)\"\n                let _1 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ mload(64)\n                let _2 := shl(225, 0x348051d7)\n                /// @src 19:1325:1339  \"vm.toString(i)\"\n                mstore(_1, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _2)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                mstore(/** @src 19:1325:1339  \"vm.toString(i)\" */ add(_1, 4), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ var_i)\n                /// @src 19:1325:1339  \"vm.toString(i)\"\n                let _3 := 0\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                let _4 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                /// @src 19:1325:1339  \"vm.toString(i)\"\n                let _5 := staticcall(gas(), /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _4, /** @src 19:1325:1339  \"vm.toString(i)\" */ _1, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 36, /** @src 19:1325:1339  \"vm.toString(i)\" */ _1, _3)\n                if iszero(_5) { revert_forward() }\n                let expr_43300_mpos := _3\n                if _5\n                {\n                    let _6 := returndatasize()\n                    returndatacopy(_1, _3, _6)\n                    finalize_allocation(_1, _6)\n                    expr_43300_mpos := abi_decode_string_fromMemory(_1, add(_1, _6))\n                }\n                /// @src 19:1346:1360  \"vm.toString(j)\"\n                let _7 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ mload(64)\n                /// @src 19:1346:1360  \"vm.toString(j)\"\n                mstore(_7, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _2)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                mstore(/** @src 19:1346:1360  \"vm.toString(j)\" */ add(_7, /** @src 19:1325:1339  \"vm.toString(i)\" */ 4), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ var_j)\n                /// @src 19:1346:1360  \"vm.toString(j)\"\n                let _8 := staticcall(gas(), /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _4, /** @src 19:1346:1360  \"vm.toString(j)\" */ _7, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 36, /** @src 19:1346:1360  \"vm.toString(j)\" */ _7, /** @src 19:1325:1339  \"vm.toString(i)\" */ _3)\n                /// @src 19:1346:1360  \"vm.toString(j)\"\n                if iszero(_8) { revert_forward() }\n                let expr_43305_mpos := /** @src 19:1325:1339  \"vm.toString(i)\" */ _3\n                /// @src 19:1346:1360  \"vm.toString(j)\"\n                if _8\n                {\n                    let _9 := returndatasize()\n                    returndatacopy(_7, /** @src 19:1325:1339  \"vm.toString(i)\" */ _3, /** @src 19:1346:1360  \"vm.toString(j)\" */ _9)\n                    finalize_allocation(_7, _9)\n                    expr_43305_mpos := abi_decode_string_fromMemory(_7, add(_7, _9))\n                }\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                let outPtr := mload(64)\n                mstore(add(outPtr, 0x20), \".values.\")\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let length := mload(expr_43300_mpos)\n                copy_memory_to_memory_with_cleanup(add(expr_43300_mpos, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 0x20), add(outPtr, 40), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length)\n                let _10 := add(/** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ outPtr, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length)\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                mstore(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(_10, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 40), \".\")\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let length_1 := mload(expr_43305_mpos)\n                copy_memory_to_memory_with_cleanup(add(expr_43305_mpos, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 0x20), add(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _10, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 41), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length_1)\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                let _11 := sub(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(_10, length_1), /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ outPtr)\n                mstore(outPtr, add(_11, 9))\n                finalize_allocation(outPtr, add(_11, 41))\n                /// @src 19:1292:1361  \"return string.concat(\\\".values.\\\", vm.toString(i), \\\".\\\", vm.toString(j))\"\n                var_43291_mpos := outPtr\n            }\n            /// @ast-id 3901 @src 4:1817:1967  \"function readString(string memory json, string memory key) internal pure returns (string memory) {...\"\n            function fun_readString(var_json_3887_mpos, var_key_mpos) -> var_3892_mpos\n            {\n                /// @src 4:1931:1960  \"vm.parseJsonString(json, key)\"\n                let _1 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ mload(64)\n                /// @src 4:1931:1960  \"vm.parseJsonString(json, key)\"\n                mstore(_1, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ shl(227, 0x09389f59))\n                /// @src 4:1931:1960  \"vm.parseJsonString(json, key)\"\n                let _2 := staticcall(gas(), /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 4:1931:1960  \"vm.parseJsonString(json, key)\" */ _1, sub(abi_encode_string_string(add(_1, 4), var_json_3887_mpos, var_key_mpos), _1), _1, 0)\n                if iszero(_2) { revert_forward() }\n                let expr_3898_mpos := 0\n                if _2\n                {\n                    let _3 := returndatasize()\n                    returndatacopy(_1, 0, _3)\n                    finalize_allocation(_1, _3)\n                    expr_3898_mpos := abi_decode_string_fromMemory(_1, add(_1, _3))\n                }\n                /// @src 4:1924:1960  \"return vm.parseJsonString(json, key)\"\n                var_3892_mpos := expr_3898_mpos\n            }\n            /// @ast-id 3934 @src 4:2141:2287  \"function readAddress(string memory json, string memory key) internal pure returns (address) {...\"\n            function fun_readAddress(var_json_mpos, var_key_3922_mpos) -> var\n            {\n                /// @src 4:2250:2280  \"vm.parseJsonAddress(json, key)\"\n                let _1 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ mload(64)\n                /// @src 4:2250:2280  \"vm.parseJsonAddress(json, key)\"\n                mstore(_1, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ shl(224, 0x1e19e657))\n                /// @src 4:2250:2280  \"vm.parseJsonAddress(json, key)\"\n                let _2 := staticcall(gas(), /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 4:2250:2280  \"vm.parseJsonAddress(json, key)\" */ _1, sub(abi_encode_string_string(add(_1, 4), var_json_mpos, var_key_3922_mpos), _1), _1, 32)\n                if iszero(_2) { revert_forward() }\n                let expr := /** @src -1:-1:-1 */ 0\n                /// @src 4:2250:2280  \"vm.parseJsonAddress(json, key)\"\n                if _2\n                {\n                    let _3 := 32\n                    if gt(32, returndatasize()) { _3 := returndatasize() }\n                    finalize_allocation(_1, _3)\n                    /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                    if slt(sub(/** @src 4:2250:2280  \"vm.parseJsonAddress(json, key)\" */ add(_1, _3), /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _1), /** @src 4:2250:2280  \"vm.parseJsonAddress(json, key)\" */ 32)\n                    /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                    {\n                        revert(/** @src -1:-1:-1 */ expr, expr)\n                    }\n                    /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                    let value := mload(_1)\n                    if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                    {\n                        revert(/** @src -1:-1:-1 */ expr, expr)\n                    }\n                    /// @src 4:2250:2280  \"vm.parseJsonAddress(json, key)\"\n                    expr := value\n                }\n                /// @src 4:2243:2280  \"return vm.parseJsonAddress(json, key)\"\n                var := expr\n            }\n            /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n            function panic_error_0x11()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x11)\n                revert(0, 0x24)\n            }\n            function checked_sub_uint256(x) -> diff\n            {\n                diff := add(x, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ not(0))\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                if gt(diff, x) { panic_error_0x11() }\n            }\n            /// @ast-id 43654 @src 20:501:637  \"function ltrim64(bytes memory _bytes) internal pure returns (bytes memory) {...\"\n            function fun_ltrim64(var_bytes_mpos) -> var_43642_mpos\n            {\n                /// @src 20:611:624  \"_bytes.length\"\n                let expr := /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ mload(/** @src 20:611:624  \"_bytes.length\" */ var_bytes_mpos)\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                let _1 := not(63)\n                let diff := add(expr, _1)\n                if gt(diff, expr) { panic_error_0x11() }\n                /// @src 20:992:1042  \"require(_length + 31 >= _length, \\\"slice_overflow\\\")\"\n                require_helper_stringliteral_5d3d(/** @src 20:1000:1023  \"_length + 31 >= _length\" */ iszero(lt(/** @src 20:1000:1012  \"_length + 31\" */ checked_add_uint256(diff), /** @src 20:1000:1023  \"_length + 31 >= _length\" */ diff)))\n                /// @src 20:1060:1073  \"_bytes.length\"\n                let expr_1 := /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ mload(/** @src 20:1060:1073  \"_bytes.length\" */ var_bytes_mpos)\n                /// @src 20:1052:1115  \"require(_bytes.length >= _start + _length, \\\"slice_outOfBounds\\\")\"\n                require_helper_stringliteral_cca2(/** @src 20:1060:1093  \"_bytes.length >= _start + _length\" */ iszero(lt(expr_1, /** @src 20:1077:1093  \"_start + _length\" */ checked_add_uint256_6301(diff))))\n                /// @src 20:1126:1148  \"bytes memory tempBytes\"\n                let var_tempBytes_mpos := /** @src -1:-1:-1 */ 0\n                /// @src 20:1159:1982  \"assembly {...\"\n                switch iszero(diff)\n                case 0 {\n                    var_tempBytes_mpos := mload(/** @src 20:607:609  \"64\" */ 0x40)\n                    /// @src 20:1159:1982  \"assembly {...\"\n                    let usr$lengthmod := and(diff, /** @src 20:1010:1012  \"31\" */ 0x1f)\n                    /// @src 20:1159:1982  \"assembly {...\"\n                    let _2 := shl(5, iszero(usr$lengthmod))\n                    let usr$mc := add(add(var_tempBytes_mpos, usr$lengthmod), _2)\n                    let usr$end := add(add(usr$mc, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ expr), _1)\n                    /// @src 20:1159:1982  \"assembly {...\"\n                    let usr$cc := add(add(add(var_bytes_mpos, usr$lengthmod), _2), /** @src 20:607:609  \"64\" */ 0x40)\n                    /// @src 20:1159:1982  \"assembly {...\"\n                    for { }\n                    lt(usr$mc, usr$end)\n                    {\n                        let _3 := 0x20\n                        usr$mc := add(usr$mc, _3)\n                        usr$cc := add(usr$cc, _3)\n                    }\n                    { mstore(usr$mc, mload(usr$cc)) }\n                    mstore(var_tempBytes_mpos, diff)\n                    mstore(/** @src 20:607:609  \"64\" */ 0x40, /** @src 20:1159:1982  \"assembly {...\" */ and(add(usr$mc, /** @src 20:1010:1012  \"31\" */ 0x1f), /** @src 19:3022:3038  \"abi.encode(data)\" */ not(31)))\n                }\n                default /// @src 20:1159:1982  \"assembly {...\"\n                {\n                    var_tempBytes_mpos := mload(/** @src 20:607:609  \"64\" */ 0x40)\n                    /// @src 20:1159:1982  \"assembly {...\"\n                    mstore(var_tempBytes_mpos, /** @src -1:-1:-1 */ 0)\n                    /// @src 20:1159:1982  \"assembly {...\"\n                    mstore(/** @src 20:607:609  \"64\" */ 0x40, /** @src 20:1159:1982  \"assembly {...\" */ add(var_tempBytes_mpos, 0x20))\n                }\n                /// @src 20:586:630  \"return slice(_bytes, 64, _bytes.length - 64)\"\n                var_43642_mpos := var_tempBytes_mpos\n            }\n            /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n            function copy_literal_to_memory_9f50164828976b6baa479ea39c718c745bbc0d2521b67dfde8474cbdc9711057() -> memPtr\n            {\n                let memPtr_1 := mload(64)\n                finalize_allocation_12138(memPtr_1)\n                mstore(memPtr_1, 1)\n                memPtr := memPtr_1\n                mstore(add(memPtr_1, 32), \"[\")\n            }\n            function abi_encode_stringliteral_6e9f(pos)\n            { mstore(pos, shl(249, 17)) }\n            function string_concat_string_stringliteral_6e9f_string_stringliteral_6e9f(param, param_1) -> outPtr\n            {\n                outPtr := mload(64)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let length := mload(param)\n                copy_memory_to_memory_with_cleanup(add(param, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 0x20), add(outPtr, 0x20), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length)\n                let _1 := add(/** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ outPtr, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length)\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                let _2 := shl(249, 17)\n                mstore(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(_1, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 0x20), _2)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let length_1 := mload(param_1)\n                copy_memory_to_memory_with_cleanup(add(param_1, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 0x20), add(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _1, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 33), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length_1)\n                let _3 := add(_1, length_1)\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                mstore(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(_3, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 33), _2)\n                let _4 := sub(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _3, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ outPtr)\n                mstore(outPtr, add(_4, 2))\n                finalize_allocation(outPtr, add(_4, 34))\n            }\n            function abi_encode_stringliteral(pos)\n            { mstore(pos, shl(242, 2187)) }\n            function string_concat_string_stringliteral_6e9f_string_stringliteral(param, param_1) -> outPtr\n            {\n                outPtr := mload(64)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let length := mload(param)\n                copy_memory_to_memory_with_cleanup(add(param, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 0x20), add(outPtr, 0x20), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length)\n                let _1 := add(/** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ outPtr, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length)\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                mstore(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(_1, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 0x20), shl(249, 17))\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let length_1 := mload(param_1)\n                copy_memory_to_memory_with_cleanup(add(param_1, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 0x20), add(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _1, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 33), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length_1)\n                let _2 := add(_1, length_1)\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                mstore(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(_2, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 33), shl(242, 2187))\n                let _3 := sub(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _2, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ outPtr)\n                mstore(outPtr, add(_3, 3))\n                finalize_allocation(outPtr, add(_3, 35))\n            }\n            function string_concat_string_stringliteral_b36b(param) -> outPtr\n            {\n                outPtr := mload(64)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let length := mload(param)\n                copy_memory_to_memory_with_cleanup(add(param, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 0x20), add(outPtr, 0x20), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length)\n                let _1 := add(/** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ outPtr, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length)\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                mstore(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(_1, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 0x20), \"]\")\n                let _2 := sub(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _1, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ outPtr)\n                mstore(outPtr, add(_2, 1))\n                finalize_allocation(outPtr, add(_2, 33))\n            }\n            /// @ast-id 43761 @src 20:2083:2541  \"function stringArrayToString(string[] memory array) internal pure returns (string memory) {...\"\n            function fun_stringArrayToString(var_array_43696_mpos) -> var_43699_mpos\n            {\n                /// @src 20:2183:2209  \"string memory result = \\\"[\\\"\"\n                let var_result_43702_mpos := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ copy_literal_to_memory_9f50164828976b6baa479ea39c718c745bbc0d2521b67dfde8474cbdc9711057()\n                /// @src 20:2225:2238  \"uint256 i = 0\"\n                let var_i := /** @src 20:2237:2238  \"0\" */ 0x00\n                /// @src 20:2220:2491  \"for (uint256 i = 0; i < array.length; i++) {...\"\n                for { }\n                /** @src 20:2301:2302  \"1\" */ 0x01\n                /// @src 20:2225:2238  \"uint256 i = 0\"\n                {\n                    /// @src 20:2258:2261  \"i++\"\n                    var_i := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ add(/** @src 20:2258:2261  \"i++\" */ var_i, /** @src 20:2301:2302  \"1\" */ 0x01)\n                }\n                /// @src 20:2258:2261  \"i++\"\n                {\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let _1 := mload(/** @src 20:2244:2256  \"array.length\" */ var_array_43696_mpos)\n                    /// @src 20:2240:2256  \"i < array.length\"\n                    if iszero(lt(var_i, _1)) { break }\n                    /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                    let diff := add(_1, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ not(0))\n                    /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                    if gt(diff, _1) { panic_error_0x11() }\n                    /// @src 20:2277:2481  \"if (i != array.length - 1) {...\"\n                    switch /** @src 20:2281:2302  \"i != array.length - 1\" */ iszero(eq(var_i, diff))\n                    case /** @src 20:2277:2481  \"if (i != array.length - 1) {...\" */ 0 {\n                        /// @src 20:2414:2466  \"result = string.concat(result, \\\"\\\\\\\"\\\", array[i], \\\"\\\\\\\"\\\")\"\n                        var_result_43702_mpos := /** @src 20:2423:2466  \"string.concat(result, \\\"\\\\\\\"\\\", array[i], \\\"\\\\\\\"\\\")\" */ string_concat_string_stringliteral_6e9f_string_stringliteral_6e9f(var_result_43702_mpos, /** @src 20:2451:2459  \"array[i]\" */ mload(memory_array_index_access_bytes32_dyn(var_array_43696_mpos, var_i)))\n                    }\n                    default /// @src 20:2277:2481  \"if (i != array.length - 1) {...\"\n                    {\n                        /// @src 20:2322:2375  \"result = string.concat(result, \\\"\\\\\\\"\\\", array[i], \\\"\\\\\\\",\\\")\"\n                        var_result_43702_mpos := /** @src 20:2331:2375  \"string.concat(result, \\\"\\\\\\\"\\\", array[i], \\\"\\\\\\\",\\\")\" */ string_concat_string_stringliteral_6e9f_string_stringliteral(var_result_43702_mpos, /** @src 20:2359:2367  \"array[i]\" */ mload(memory_array_index_access_bytes32_dyn(var_array_43696_mpos, var_i)))\n                    }\n                }\n                /// @src 20:2501:2534  \"return string.concat(result, \\\"]\\\")\"\n                var_43699_mpos := /** @src 20:2508:2534  \"string.concat(result, \\\"]\\\")\" */ string_concat_string_stringliteral_b36b(var_result_43702_mpos)\n            }\n            /// @ast-id 43902 @src 20:3164:3650  \"function bytes32ArrayToString(bytes32[] memory array) internal pure returns (string memory) {...\"\n            function fun_bytes32ArrayToString(var_array_43831_mpos) -> var_mpos\n            {\n                /// @src 20:3266:3292  \"string memory result = \\\"[\\\"\"\n                let var_result_mpos := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ copy_literal_to_memory_9f50164828976b6baa479ea39c718c745bbc0d2521b67dfde8474cbdc9711057()\n                /// @src 20:3308:3321  \"uint256 i = 0\"\n                let var_i := /** @src 20:3320:3321  \"0\" */ 0x00\n                /// @src 20:3303:3600  \"for (uint256 i = 0; i < array.length; i++) {...\"\n                for { }\n                /** @src 20:3384:3385  \"1\" */ 0x01\n                /// @src 20:3308:3321  \"uint256 i = 0\"\n                {\n                    /// @src 20:3341:3344  \"i++\"\n                    var_i := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ add(/** @src 20:3341:3344  \"i++\" */ var_i, /** @src 20:3384:3385  \"1\" */ 0x01)\n                }\n                /// @src 20:3341:3344  \"i++\"\n                {\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let _1 := mload(/** @src 20:3327:3339  \"array.length\" */ var_array_43831_mpos)\n                    /// @src 20:3323:3339  \"i < array.length\"\n                    if iszero(lt(var_i, _1)) { break }\n                    /// @src 20:3360:3590  \"if (i != array.length - 1) {...\"\n                    switch /** @src 20:3364:3385  \"i != array.length - 1\" */ iszero(eq(var_i, /** @src 20:3369:3385  \"array.length - 1\" */ checked_sub_uint256(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _1)))\n                    case /** @src 20:3360:3590  \"if (i != array.length - 1) {...\" */ 0 {\n                        /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                        let _2 := mload(/** @src 20:3559:3567  \"array[i]\" */ memory_array_index_access_bytes32_dyn(var_array_43831_mpos, var_i))\n                        /// @src 20:3547:3568  \"vm.toString(array[i])\"\n                        let _3 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ mload(64)\n                        /// @src 20:3547:3568  \"vm.toString(array[i])\"\n                        mstore(_3, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ shl(227, 0x1623433d))\n                        /// @src 20:3547:3568  \"vm.toString(array[i])\"\n                        let _4 := staticcall(gas(), /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 20:3547:3568  \"vm.toString(array[i])\" */ _3, sub(abi_encode_uint256(add(_3, 4), _2), _3), _3, /** @src 20:3320:3321  \"0\" */ 0x00)\n                        /// @src 20:3547:3568  \"vm.toString(array[i])\"\n                        if iszero(_4) { revert_forward() }\n                        let expr_43885_mpos := /** @src 20:3320:3321  \"0\" */ 0x00\n                        /// @src 20:3547:3568  \"vm.toString(array[i])\"\n                        if _4\n                        {\n                            let _5 := returndatasize()\n                            returndatacopy(_3, /** @src 20:3320:3321  \"0\" */ expr_43885_mpos, /** @src 20:3547:3568  \"vm.toString(array[i])\" */ _5)\n                            finalize_allocation(_3, _5)\n                            expr_43885_mpos := abi_decode_string_fromMemory(_3, add(_3, _5))\n                        }\n                        /// @src 20:3510:3575  \"result = string.concat(result, \\\"\\\\\\\"\\\", vm.toString(array[i]), \\\"\\\\\\\"\\\")\"\n                        var_result_mpos := /** @src 20:3519:3575  \"string.concat(result, \\\"\\\\\\\"\\\", vm.toString(array[i]), \\\"\\\\\\\"\\\")\" */ string_concat_string_stringliteral_6e9f_string_stringliteral_6e9f(var_result_mpos, expr_43885_mpos)\n                    }\n                    default /// @src 20:3360:3590  \"if (i != array.length - 1) {...\"\n                    {\n                        /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                        let _6 := mload(/** @src 20:3454:3462  \"array[i]\" */ memory_array_index_access_bytes32_dyn(var_array_43831_mpos, var_i))\n                        /// @src 20:3442:3463  \"vm.toString(array[i])\"\n                        let _7 := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ mload(64)\n                        /// @src 20:3442:3463  \"vm.toString(array[i])\"\n                        mstore(_7, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ shl(227, 0x1623433d))\n                        /// @src 20:3442:3463  \"vm.toString(array[i])\"\n                        let _8 := staticcall(gas(), /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 20:3442:3463  \"vm.toString(array[i])\" */ _7, sub(abi_encode_uint256(add(_7, 4), _6), _7), _7, /** @src 20:3320:3321  \"0\" */ 0x00)\n                        /// @src 20:3442:3463  \"vm.toString(array[i])\"\n                        if iszero(_8) { revert_forward() }\n                        let expr_43868_mpos := /** @src 20:3320:3321  \"0\" */ 0x00\n                        /// @src 20:3442:3463  \"vm.toString(array[i])\"\n                        if _8\n                        {\n                            let _9 := returndatasize()\n                            returndatacopy(_7, /** @src 20:3320:3321  \"0\" */ expr_43868_mpos, /** @src 20:3442:3463  \"vm.toString(array[i])\" */ _9)\n                            finalize_allocation(_7, _9)\n                            expr_43868_mpos := abi_decode_string_fromMemory(_7, add(_7, _9))\n                        }\n                        /// @src 20:3405:3471  \"result = string.concat(result, \\\"\\\\\\\"\\\", vm.toString(array[i]), \\\"\\\\\\\",\\\")\"\n                        var_result_mpos := /** @src 20:3414:3471  \"string.concat(result, \\\"\\\\\\\"\\\", vm.toString(array[i]), \\\"\\\\\\\",\\\")\" */ string_concat_string_stringliteral_6e9f_string_stringliteral(var_result_mpos, expr_43868_mpos)\n                    }\n                }\n                /// @src 20:3610:3643  \"return string.concat(result, \\\"]\\\")\"\n                var_mpos := /** @src 20:3617:3643  \"string.concat(result, \\\"]\\\")\" */ string_concat_string_stringliteral_b36b(var_result_mpos)\n            }\n            /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n            function abi_encode_stringliteral_3e7a(pos)\n            { mstore(pos, \",\") }\n            function abi_encode_stringliteral_58ce(pos)\n            {\n                mstore(pos, shl(193, 0x113937b7ba111d11))\n            }\n            function abi_encode_stringliteral_25c0(pos)\n            {\n                mstore(pos, shl(193, 0x113632b0b3111d11))\n            }\n            function abi_encode_stringliteral_8e2f(pos)\n            { mstore(pos, \"}\") }\n            function string_concat_stringliteral_a91e_stringliteral_ad4b_string_stringliteral_3e7a_stringliteral_ebb8_string_stringliteral_3e7a_stringliteral_58ce_string_stringliteral_stringliteral_25c0_string_stringliteral_6e9f_stringliteral_8e2f(param, param_1, param_2, param_3) -> outPtr\n            {\n                outPtr := mload(64)\n                mstore(add(outPtr, 0x20), \"{\")\n                mstore(add(outPtr, 33), shl(185, 0x1134b7383aba39911d))\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let length := mload(param)\n                copy_memory_to_memory_with_cleanup(add(param, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 0x20), add(outPtr, 42), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length)\n                let _1 := add(/** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ outPtr, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length)\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                mstore(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(_1, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 42), \",\")\n                mstore(add(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _1, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 43), shl(193, 0x11383937b7b3111d))\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let length_1 := mload(param_1)\n                copy_memory_to_memory_with_cleanup(add(param_1, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 0x20), add(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _1, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 51), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length_1)\n                let _2 := add(_1, length_1)\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                abi_encode_stringliteral_3e7a(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(_2, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 51))\n                abi_encode_stringliteral_58ce(add(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _2, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 52))\n                let pos := abi_encode_string_memory_ptr(param_2, add(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _2, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 60))\n                abi_encode_stringliteral(pos)\n                abi_encode_stringliteral_25c0(add(pos, 2))\n                let pos_1 := abi_encode_string_memory_ptr(param_3, add(pos, 10))\n                abi_encode_stringliteral_6e9f(pos_1)\n                abi_encode_stringliteral_8e2f(add(pos_1, 1))\n                let _3 := sub(pos_1, outPtr)\n                mstore(outPtr, add(_3, not(29)))\n                finalize_allocation(outPtr, add(_3, 2))\n            }\n            function string_concat_string_string_stringliteral_3e7a(param, param_1) -> outPtr\n            {\n                outPtr := mload(64)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let length := mload(param)\n                copy_memory_to_memory_with_cleanup(add(param, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 0x20), add(outPtr, 0x20), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length)\n                let _1 := add(/** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ outPtr, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length)\n                let length_1 := mload(param_1)\n                copy_memory_to_memory_with_cleanup(add(param_1, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 0x20), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(_1, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 0x20), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length_1)\n                let _2 := add(_1, length_1)\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                mstore(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(_2, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ 0x20), \",\")\n                let _3 := sub(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _2, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ outPtr)\n                mstore(outPtr, add(_3, 1))\n                finalize_allocation(outPtr, add(_3, 33))\n            }\n            /// @ast-id 43827 @src 20:2651:3094  \"function stringArrayToArrayString(string[] memory array) internal pure returns (string memory) {...\"\n            function fun_stringArrayToArrayString(var_array_mpos) -> var_43768_mpos\n            {\n                /// @src 20:2756:2782  \"string memory result = \\\"[\\\"\"\n                let var_result_43771_mpos := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ copy_literal_to_memory_9f50164828976b6baa479ea39c718c745bbc0d2521b67dfde8474cbdc9711057()\n                /// @src 20:2798:2811  \"uint256 i = 0\"\n                let var_i := /** @src 20:2810:2811  \"0\" */ 0x00\n                /// @src 20:2793:3044  \"for (uint256 i = 0; i < array.length; i++) {...\"\n                for { }\n                /** @src 20:2874:2875  \"1\" */ 0x01\n                /// @src 20:2798:2811  \"uint256 i = 0\"\n                {\n                    /// @src 20:2831:2834  \"i++\"\n                    var_i := /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ add(/** @src 20:2831:2834  \"i++\" */ var_i, /** @src 20:2874:2875  \"1\" */ 0x01)\n                }\n                /// @src 20:2831:2834  \"i++\"\n                {\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let _1 := mload(/** @src 20:2817:2829  \"array.length\" */ var_array_mpos)\n                    /// @src 20:2813:2829  \"i < array.length\"\n                    if iszero(lt(var_i, _1)) { break }\n                    /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                    let diff := add(_1, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ not(0))\n                    /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                    if gt(diff, _1) { panic_error_0x11() }\n                    /// @src 20:2850:3034  \"if (i != array.length - 1) {...\"\n                    switch /** @src 20:2854:2875  \"i != array.length - 1\" */ iszero(eq(var_i, diff))\n                    case /** @src 20:2850:3034  \"if (i != array.length - 1) {...\" */ 0 {\n                        /// @src 20:3010:3018  \"array[i]\"\n                        let _2 := mload(memory_array_index_access_bytes32_dyn(var_array_mpos, var_i))\n                        /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                        let outPtr := mload(64)\n                        let _3 := 0x20\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        let length := mload(var_result_43771_mpos)\n                        copy_memory_to_memory_with_cleanup(add(var_result_43771_mpos, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _3), add(outPtr, _3), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length)\n                        let _4 := add(/** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ outPtr, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length)\n                        let length_1 := mload(_2)\n                        copy_memory_to_memory_with_cleanup(add(_2, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _3), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(_4, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ _3), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length_1)\n                        /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                        let _5 := sub(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(_4, length_1), /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ outPtr)\n                        mstore(outPtr, _5)\n                        finalize_allocation(outPtr, add(_5, _3))\n                        /// @src 20:2979:3019  \"result = string.concat(result, array[i])\"\n                        var_result_43771_mpos := outPtr\n                    }\n                    default /// @src 20:2850:3034  \"if (i != array.length - 1) {...\"\n                    {\n                        /// @src 20:2895:2940  \"result = string.concat(result, array[i], \\\",\\\")\"\n                        var_result_43771_mpos := /** @src 20:2904:2940  \"string.concat(result, array[i], \\\",\\\")\" */ string_concat_string_string_stringliteral_3e7a(var_result_43771_mpos, /** @src 20:2926:2934  \"array[i]\" */ mload(memory_array_index_access_bytes32_dyn(var_array_mpos, var_i)))\n                    }\n                }\n                /// @src 20:3054:3087  \"return string.concat(result, \\\"]\\\")\"\n                var_43768_mpos := /** @src 20:3061:3087  \"string.concat(result, \\\"]\\\")\" */ string_concat_string_stringliteral_b36b(var_result_43771_mpos)\n            }\n            /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n            function checked_add_uint256(x) -> sum\n            {\n                sum := add(x, /** @src 20:1010:1012  \"31\" */ 0x1f)\n                /// @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\"\n                if gt(x, sum) { panic_error_0x11() }\n            }\n            function checked_add_uint256_6301(y) -> sum\n            {\n                sum := add(/** @src 20:607:609  \"64\" */ 0x40, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ y)\n                if gt(/** @src 20:607:609  \"64\" */ 0x40, /** @src 37:160:308  \"contract MakeMerkle is MerkleScript {...\" */ sum) { panic_error_0x11() }\n            }\n            function require_helper_stringliteral_5d3d(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 14)\n                    mstore(add(memPtr, 68), \"slice_overflow\")\n                    revert(memPtr, 100)\n                }\n            }\n            function require_helper_stringliteral_cca2(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 17)\n                    mstore(add(memPtr, 68), \"slice_outOfBounds\")\n                    revert(memPtr, 100)\n                }\n            }\n        }\n        data \".metadata\" hex\"a164736f6c6343000818000a\"\n    }\n    /// @use-src 0:\"lib/forge-std/src/Base.sol\", 1:\"lib/forge-std/src/Script.sol\", 2:\"lib/forge-std/src/StdChains.sol\", 3:\"lib/forge-std/src/StdCheats.sol\", 4:\"lib/forge-std/src/StdJson.sol\", 8:\"lib/forge-std/src/StdUtils.sol\", 19:\"lib/murky/script/Merkle.s.sol\", 20:\"lib/murky/script/common/ScriptHelper.sol\"\n    object \"MerkleScript_43602\" {\n        code {\n            {\n                /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                let _1 := memoryguard(0x80)\n                let _2 := 64\n                mstore(_2, _1)\n                if callvalue() { revert(0, 0) }\n                sstore(/** @src 2:3166:3170  \"true\" */ 0x0c, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ or(and(sload(/** @src 2:3166:3170  \"true\" */ 0x0c), /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ not(16711935)), 65537))\n                /// @src 19:606:618  \"new Merkle()\"\n                let _3 := datasize(\"Merkle_43923\")\n                let _4 := add(_1, _3)\n                if or(gt(_4, sub(shl(64, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 1), 1)), /** @src 19:606:618  \"new Merkle()\" */ lt(_4, _1))\n                {\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                /// @src 19:606:618  \"new Merkle()\"\n                datacopy(_1, dataoffset(\"Merkle_43923\"), _3)\n                /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                let _5 := 0\n                /// @src 19:606:618  \"new Merkle()\"\n                let expr_address := create(/** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _5, /** @src 19:606:618  \"new Merkle()\" */ _1, sub(_4, _1))\n                if iszero(expr_address)\n                {\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    let pos := mload(_2)\n                    returndatacopy(pos, _5, returndatasize())\n                    revert(pos, returndatasize())\n                }\n                let _6 := sload(/** @src 2:3166:3170  \"true\" */ 0x0c)\n                /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                sstore(/** @src 2:3166:3170  \"true\" */ 0x0c, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ or(and(_6, not(sub(shl(184, 1), 16777216))), and(shl(24, expr_address), sub(shl(184, 1), 16777216))))\n                let _7 := extract_byte_array_length(sload(/** @src 19:652:679  \"\\\"/script/target/input.json\\\"\" */ 0x0d))\n                /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                if gt(_7, 31)\n                {\n                    mstore(_5, /** @src 19:652:679  \"\\\"/script/target/input.json\\\"\" */ 0x0d)\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    let data := keccak256(_5, 0x20)\n                    clear_storage_range_bytes1(data, add(data, shr(5, add(_7, 31))))\n                }\n                sstore(/** @src 19:652:679  \"\\\"/script/target/input.json\\\"\" */ 0x0d, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ add(\"/script/target/input.json\", 50))\n                let _8 := extract_byte_array_length(sload(/** @src 19:713:741  \"\\\"/script/target/output.json\\\"\" */ 0x0e))\n                /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                if gt(_8, 31)\n                {\n                    mstore(_5, /** @src 19:713:741  \"\\\"/script/target/output.json\\\"\" */ 0x0e)\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    let data_1 := keccak256(_5, 0x20)\n                    clear_storage_range_bytes1(data_1, add(data_1, shr(5, add(_8, 31))))\n                }\n                sstore(/** @src 19:713:741  \"\\\"/script/target/output.json\\\"\" */ 0x0e, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ add(\"/script/target/output.json\", 52))\n                /// @src 19:800:816  \"vm.projectRoot()\"\n                let _9 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ mload(_2)\n                /// @src 19:800:816  \"vm.projectRoot()\"\n                mstore(_9, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(225, 0x6c985073))\n                /// @src 19:800:816  \"vm.projectRoot()\"\n                let _10 := staticcall(gas(), /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 19:800:816  \"vm.projectRoot()\" */ _9, 4, _9, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _5)\n                /// @src 19:800:816  \"vm.projectRoot()\"\n                if iszero(_10)\n                {\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    let pos_1 := mload(_2)\n                    returndatacopy(pos_1, _5, returndatasize())\n                    revert(pos_1, returndatasize())\n                }\n                /// @src 19:800:816  \"vm.projectRoot()\"\n                let expr_mpos := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _5\n                /// @src 19:800:816  \"vm.projectRoot()\"\n                if _10\n                {\n                    let _11 := returndatasize()\n                    returndatacopy(_9, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _5, /** @src 19:800:816  \"vm.projectRoot()\" */ _11)\n                    finalize_allocation(_9, _11)\n                    expr_mpos := abi_decode_string_fromMemory(_9, add(_9, _11))\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let outPtr := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ mload(_2)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let length := mload(expr_mpos)\n                copy_memory_to_memory_with_cleanup(add(expr_mpos, 0x20), add(outPtr, 0x20), length)\n                let _12 := add(outPtr, length)\n                let ret := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _5\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let slotValue := sload(/** @src 19:652:679  \"\\\"/script/target/input.json\\\"\" */ 0x0d)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let length_1 := extract_byte_array_length(slotValue)\n                switch and(slotValue, /** @src 2:3166:3170  \"true\" */ 0x01)\n                case /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0 {\n                    mstore(add(_12, 0x20), and(slotValue, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ not(255)))\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    ret := add(add(_12, mul(length_1, iszero(iszero(length_1)))), 0x20)\n                }\n                case 1 {\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    mstore(_5, /** @src 19:652:679  \"\\\"/script/target/input.json\\\"\" */ 0x0d)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let dataPos := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ keccak256(_5, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x20)\n                    let i := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _5\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    for { } lt(i, length_1) { i := add(i, 0x20) }\n                    {\n                        mstore(add(add(_12, i), 0x20), sload(dataPos))\n                        dataPos := add(dataPos, /** @src 2:3166:3170  \"true\" */ 0x01)\n                    }\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    ret := add(add(_12, length_1), 0x20)\n                }\n                let _13 := sub(ret, outPtr)\n                mstore(outPtr, add(_13, not(31)))\n                finalize_allocation(outPtr, _13)\n                /// @src 19:774:829  \"vm.readFile(string.concat(vm.projectRoot(), inputPath))\"\n                let _14 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ mload(_2)\n                /// @src 19:774:829  \"vm.readFile(string.concat(vm.projectRoot(), inputPath))\"\n                mstore(_14, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(224, 0x60f9bb11))\n                mstore(/** @src 19:774:829  \"vm.readFile(string.concat(vm.projectRoot(), inputPath))\" */ add(_14, /** @src 19:800:816  \"vm.projectRoot()\" */ 4), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x20)\n                /// @src 19:774:829  \"vm.readFile(string.concat(vm.projectRoot(), inputPath))\"\n                let _15 := staticcall(gas(), /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 19:774:829  \"vm.readFile(string.concat(vm.projectRoot(), inputPath))\" */ _14, sub(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ abi_encode_string(outPtr, add(/** @src 19:774:829  \"vm.readFile(string.concat(vm.projectRoot(), inputPath))\" */ _14, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 36)), /** @src 19:774:829  \"vm.readFile(string.concat(vm.projectRoot(), inputPath))\" */ _14), _14, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _5)\n                /// @src 19:774:829  \"vm.readFile(string.concat(vm.projectRoot(), inputPath))\"\n                if iszero(_15)\n                {\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    let pos_2 := mload(_2)\n                    returndatacopy(pos_2, _5, returndatasize())\n                    revert(pos_2, returndatasize())\n                }\n                /// @src 19:774:829  \"vm.readFile(string.concat(vm.projectRoot(), inputPath))\"\n                let expr_mpos_1 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _5\n                /// @src 19:774:829  \"vm.readFile(string.concat(vm.projectRoot(), inputPath))\"\n                if _15\n                {\n                    let _16 := returndatasize()\n                    returndatacopy(_14, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _5, /** @src 19:774:829  \"vm.readFile(string.concat(vm.projectRoot(), inputPath))\" */ _16)\n                    finalize_allocation(_14, _16)\n                    expr_mpos_1 := abi_decode_string_fromMemory(_14, add(_14, _16))\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let newLen := mload(expr_mpos_1)\n                if gt(newLen, /** @src 19:606:618  \"new Merkle()\" */ sub(shl(64, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 1), 1))\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                {\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    mstore(_5, shl(224, 0x4e487b71))\n                    mstore(/** @src 19:800:816  \"vm.projectRoot()\" */ 4, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 0x41)\n                    revert(_5, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 36)\n                }\n                let _17 := extract_byte_array_length(sload(/** @src 19:774:829  \"vm.readFile(string.concat(vm.projectRoot(), inputPath))\" */ 0x0f))\n                /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                if gt(_17, 31)\n                {\n                    mstore(_5, /** @src 19:774:829  \"vm.readFile(string.concat(vm.projectRoot(), inputPath))\" */ 0x0f)\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    let data_2 := keccak256(_5, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x20)\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    let deleteStart := add(data_2, shr(5, add(newLen, 31)))\n                    if lt(newLen, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x20)\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    { deleteStart := data_2 }\n                    clear_storage_range_bytes1(deleteStart, add(data_2, shr(5, add(_17, 31))))\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let srcOffset := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _5\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                srcOffset := 0x20\n                switch gt(newLen, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 31)\n                case /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 1 {\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    mstore(_5, /** @src 19:774:829  \"vm.readFile(string.concat(vm.projectRoot(), inputPath))\" */ 0x0f)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let dstPtr := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ keccak256(_5, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x20)\n                    let i_1 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _5\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    for { } lt(i_1, and(newLen, not(31))) { i_1 := add(i_1, 0x20) }\n                    {\n                        sstore(dstPtr, mload(add(expr_mpos_1, srcOffset)))\n                        dstPtr := add(dstPtr, /** @src 2:3166:3170  \"true\" */ 0x01)\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        srcOffset := add(srcOffset, 0x20)\n                    }\n                    if lt(and(newLen, not(31)), newLen)\n                    {\n                        let lastValue := mload(add(expr_mpos_1, srcOffset))\n                        sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                    }\n                    sstore(/** @src 19:774:829  \"vm.readFile(string.concat(vm.projectRoot(), inputPath))\" */ 0x0f, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(shl(/** @src 2:3166:3170  \"true\" */ 0x01, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ newLen), /** @src 2:3166:3170  \"true\" */ 0x01))\n                }\n                default /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                {\n                    let value := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _5\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    if newLen\n                    {\n                        value := mload(add(expr_mpos_1, srcOffset))\n                    }\n                    sstore(/** @src 19:774:829  \"vm.readFile(string.concat(vm.projectRoot(), inputPath))\" */ 0x0f, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n                }\n                /// @src 19:860:884  \"elements.readStringArray\"\n                let expr_self_mpos := /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ copy_array_from_storage_to_memory_string()\n                let memPtr := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ mload(_2)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                finalize_allocation_12882(memPtr)\n                mstore(memPtr, 6)\n                mstore(add(memPtr, 0x20), \".types\")\n                /// @src 4:2094:2128  \"vm.parseJsonStringArray(json, key)\"\n                let _18 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ mload(_2)\n                /// @src 4:2094:2128  \"vm.parseJsonStringArray(json, key)\"\n                mstore(_18, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(226, 0x1263f73d))\n                /// @src 4:2094:2128  \"vm.parseJsonStringArray(json, key)\"\n                let _19 := staticcall(gas(), /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 4:2094:2128  \"vm.parseJsonStringArray(json, key)\" */ _18, sub(abi_encode_string_string(add(_18, /** @src 19:800:816  \"vm.projectRoot()\" */ 4), /** @src 4:2094:2128  \"vm.parseJsonStringArray(json, key)\" */ expr_self_mpos, memPtr), _18), _18, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _5)\n                /// @src 4:2094:2128  \"vm.parseJsonStringArray(json, key)\"\n                if iszero(_19)\n                {\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    let pos_3 := mload(_2)\n                    returndatacopy(pos_3, _5, returndatasize())\n                    revert(pos_3, returndatasize())\n                }\n                /// @src 4:2094:2128  \"vm.parseJsonStringArray(json, key)\"\n                let expr_mpos_2 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _5\n                /// @src 4:2094:2128  \"vm.parseJsonStringArray(json, key)\"\n                if _19\n                {\n                    let _20 := returndatasize()\n                    returndatacopy(_18, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _5, /** @src 4:2094:2128  \"vm.parseJsonStringArray(json, key)\" */ _20)\n                    finalize_allocation(_18, _20)\n                    let _21 := add(_18, _20)\n                    /// @src 4:661:724  \"VmSafe(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    if slt(sub(_21, _18), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x20)\n                    /// @src 4:661:724  \"VmSafe(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    {\n                        /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                        revert(_5, _5)\n                    }\n                    /// @src 4:661:724  \"VmSafe(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let offset := mload(_18)\n                    if gt(offset, /** @src 19:606:618  \"new Merkle()\" */ sub(shl(64, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 1), 1))\n                    /// @src 4:661:724  \"VmSafe(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    {\n                        /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                        revert(_5, _5)\n                    }\n                    /// @src 4:661:724  \"VmSafe(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let _22 := add(_18, offset)\n                    if iszero(slt(add(_22, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 31), /** @src 4:661:724  \"VmSafe(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _21))\n                    {\n                        /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                        revert(_5, _5)\n                    }\n                    /// @src 4:661:724  \"VmSafe(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let _23 := mload(_22)\n                    let _24 := array_allocation_size_array_bytes32_dyn(_23)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let memPtr_1 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ mload(_2)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    finalize_allocation(memPtr_1, _24)\n                    /// @src 4:661:724  \"VmSafe(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let dst := memPtr_1\n                    mstore(memPtr_1, _23)\n                    dst := add(memPtr_1, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x20)\n                    /// @src 4:661:724  \"VmSafe(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let srcEnd := add(add(_22, shl(5, _23)), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x20)\n                    /// @src 4:661:724  \"VmSafe(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    if gt(srcEnd, _21)\n                    {\n                        /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                        revert(_5, _5)\n                    }\n                    /// @src 4:661:724  \"VmSafe(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let src := add(_22, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x20)\n                    /// @src 4:661:724  \"VmSafe(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    for { }\n                    lt(src, srcEnd)\n                    {\n                        src := add(src, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x20)\n                    }\n                    /// @src 4:661:724  \"VmSafe(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    {\n                        let innerOffset := mload(src)\n                        if gt(innerOffset, /** @src 19:606:618  \"new Merkle()\" */ sub(shl(64, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 1), 1))\n                        /// @src 4:661:724  \"VmSafe(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        {\n                            /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                            revert(_5, _5)\n                        }\n                        /// @src 4:661:724  \"VmSafe(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(dst, abi_decode_string_memory_ptr_fromMemory(add(add(_22, innerOffset), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x20), /** @src 4:661:724  \"VmSafe(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _21))\n                        dst := add(dst, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x20)\n                    }\n                    /// @src 4:2094:2128  \"vm.parseJsonStringArray(json, key)\"\n                    expr_mpos_2 := memPtr_1\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let length_2 := mload(expr_mpos_2)\n                if gt(length_2, 18446744073709551616)\n                {\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    mstore(_5, shl(224, 0x4e487b71))\n                    mstore(/** @src 19:800:816  \"vm.projectRoot()\" */ 4, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 0x41)\n                    revert(_5, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 36)\n                }\n                let oldLen := sload(/** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 16)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                sstore(/** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 16, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length_2)\n                if lt(length_2, oldLen)\n                {\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    mstore(_5, 16)\n                    let data_3 := keccak256(_5, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x20)\n                    let _25 := add(data_3, oldLen)\n                    let start := add(data_3, length_2)\n                    for { }\n                    lt(start, _25)\n                    {\n                        start := add(start, /** @src 2:3166:3170  \"true\" */ 0x01)\n                    }\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    {\n                        let oldLen_1 := extract_byte_array_length(sload(start))\n                        if iszero(iszero(oldLen_1))\n                        {\n                            switch gt(oldLen_1, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 31)\n                            case /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 1 {\n                                /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                                mstore(_5, start)\n                                let data_4 := keccak256(_5, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x20)\n                                clear_storage_range_bytes1(add(data_4, /** @src 2:3166:3170  \"true\" */ 0x01), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(data_4, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ shr(5, add(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ oldLen_1, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 31))))\n                                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                                sstore(start, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _5)\n                                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                                sstore(data_4, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _5)\n                            }\n                            default /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            {\n                                sstore(start, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _5)\n                            }\n                        }\n                    }\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let srcPtr := add(expr_mpos_2, 0x20)\n                /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                mstore(_5, 16)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let elementSlot := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ keccak256(_5, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x20)\n                let i_2 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _5\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                for { }\n                lt(i_2, length_2)\n                {\n                    i_2 := add(i_2, /** @src 2:3166:3170  \"true\" */ 0x01)\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                {\n                    let _26 := mload(srcPtr)\n                    let newLen_1 := mload(_26)\n                    if gt(newLen_1, /** @src 19:606:618  \"new Merkle()\" */ sub(shl(64, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 1), 1))\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    {\n                        /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                        mstore(_5, shl(224, 0x4e487b71))\n                        mstore(/** @src 19:800:816  \"vm.projectRoot()\" */ 4, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 0x41)\n                        revert(_5, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 36)\n                    }\n                    clean_up_bytearray_end_slots_bytes_storage_ptr(elementSlot, extract_byte_array_length(sload(elementSlot)), newLen_1)\n                    let srcOffset_1 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _5\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    srcOffset_1 := 0x20\n                    switch gt(newLen_1, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 31)\n                    case /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 1 {\n                        /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                        mstore(_5, elementSlot)\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        let dstPtr_1 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ keccak256(_5, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x20)\n                        let i_3 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _5\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        for { } lt(i_3, and(newLen_1, not(31))) { i_3 := add(i_3, 0x20) }\n                        {\n                            sstore(dstPtr_1, mload(add(_26, srcOffset_1)))\n                            dstPtr_1 := add(dstPtr_1, /** @src 2:3166:3170  \"true\" */ 0x01)\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            srcOffset_1 := add(srcOffset_1, 0x20)\n                        }\n                        if lt(and(newLen_1, not(31)), newLen_1)\n                        {\n                            let lastValue_1 := mload(add(_26, srcOffset_1))\n                            sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(3, newLen_1), 248), not(0)))))\n                        }\n                        sstore(elementSlot, add(shl(/** @src 2:3166:3170  \"true\" */ 0x01, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ newLen_1), /** @src 2:3166:3170  \"true\" */ 0x01))\n                    }\n                    default /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    {\n                        let value_1 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _5\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        if newLen_1\n                        {\n                            value_1 := mload(add(_26, srcOffset_1))\n                        }\n                        sstore(elementSlot, extract_used_part_and_set_length_of_short_byte_array(value_1, newLen_1))\n                    }\n                    srcPtr := add(srcPtr, 0x20)\n                    elementSlot := add(elementSlot, /** @src 2:3166:3170  \"true\" */ 0x01)\n                }\n                /// @src 19:924:941  \"elements.readUint\"\n                let expr_self_mpos_1 := /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ copy_array_from_storage_to_memory_string()\n                let memPtr_2 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ mload(_2)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                finalize_allocation_12882(memPtr_2)\n                mstore(memPtr_2, 6)\n                mstore(add(memPtr_2, 0x20), \".count\")\n                /// @src 4:984:1011  \"vm.parseJsonUint(json, key)\"\n                let _27 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ mload(_2)\n                /// @src 4:984:1011  \"vm.parseJsonUint(json, key)\"\n                mstore(_27, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(225, 0x56eef15b))\n                /// @src 4:984:1011  \"vm.parseJsonUint(json, key)\"\n                let _28 := staticcall(gas(), /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 4:984:1011  \"vm.parseJsonUint(json, key)\" */ _27, sub(abi_encode_string_string(add(_27, /** @src 19:800:816  \"vm.projectRoot()\" */ 4), /** @src 4:984:1011  \"vm.parseJsonUint(json, key)\" */ expr_self_mpos_1, memPtr_2), _27), _27, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x20)\n                /// @src 4:984:1011  \"vm.parseJsonUint(json, key)\"\n                if iszero(_28)\n                {\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    let pos_4 := mload(_2)\n                    returndatacopy(pos_4, _5, returndatasize())\n                    revert(pos_4, returndatasize())\n                }\n                /// @src 4:984:1011  \"vm.parseJsonUint(json, key)\"\n                let expr := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _5\n                /// @src 4:984:1011  \"vm.parseJsonUint(json, key)\"\n                if _28\n                {\n                    let _29 := /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x20\n                    /// @src 4:984:1011  \"vm.parseJsonUint(json, key)\"\n                    if gt(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x20, /** @src 4:984:1011  \"vm.parseJsonUint(json, key)\" */ returndatasize()) { _29 := returndatasize() }\n                    finalize_allocation(_27, _29)\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    if slt(sub(/** @src 4:984:1011  \"vm.parseJsonUint(json, key)\" */ add(_27, _29), /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _27), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x20)\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    { revert(_5, _5) }\n                    /// @src 4:984:1011  \"vm.parseJsonUint(json, key)\"\n                    expr := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ mload(_27)\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                sstore(/** @src 19:924:951  \"elements.readUint(\\\".count\\\")\" */ 0x11, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ expr)\n                let _30 := array_allocation_size_array_bytes32_dyn(expr)\n                let memPtr_3 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ mload(_2)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                finalize_allocation(memPtr_3, _30)\n                mstore(memPtr_3, expr)\n                let dataSize := array_allocation_size_array_bytes32_dyn(expr)\n                let dataStart := add(memPtr_3, 0x20)\n                calldatacopy(dataStart, calldatasize(), add(dataSize, not(31)))\n                let length_3 := mload(memPtr_3)\n                if gt(length_3, /** @src 19:606:618  \"new Merkle()\" */ sub(shl(64, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 1), 1))\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                {\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    mstore(_5, shl(224, 0x4e487b71))\n                    mstore(/** @src 19:800:816  \"vm.projectRoot()\" */ 4, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 0x41)\n                    revert(_5, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 36)\n                }\n                if gt(length_3, 18446744073709551616)\n                {\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    mstore(_5, shl(224, 0x4e487b71))\n                    mstore(/** @src 19:800:816  \"vm.projectRoot()\" */ 4, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 0x41)\n                    revert(_5, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 36)\n                }\n                let oldLen_2 := sload(/** @src 19:984:1004  \"new bytes32[](count)\" */ 0x12)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                sstore(/** @src 19:984:1004  \"new bytes32[](count)\" */ 0x12, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length_3)\n                if lt(length_3, oldLen_2)\n                {\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    mstore(_5, /** @src 19:984:1004  \"new bytes32[](count)\" */ 0x12)\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    let data_5 := keccak256(_5, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x20)\n                    let _31 := add(data_5, oldLen_2)\n                    let start_1 := add(data_5, length_3)\n                    for { }\n                    lt(start_1, _31)\n                    {\n                        start_1 := add(start_1, /** @src 2:3166:3170  \"true\" */ 0x01)\n                    }\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    {\n                        /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                        sstore(start_1, _5)\n                    }\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let srcPtr_1 := dataStart\n                /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                mstore(_5, /** @src 19:984:1004  \"new bytes32[](count)\" */ 0x12)\n                /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                let data_6 := keccak256(_5, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x20)\n                let i_4 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _5\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                for { }\n                lt(i_4, length_3)\n                {\n                    i_4 := add(i_4, /** @src 2:3166:3170  \"true\" */ 0x01)\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                {\n                    let _32 := mload(srcPtr_1)\n                    srcPtr_1 := add(srcPtr_1, 0x20)\n                    sstore(add(data_6, i_4), _32)\n                }\n                /// @src 19:1037:1056  \"new string[](count)\"\n                let _33 := allocate_and_zero_memory_array_array_string_dyn(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 19:924:951  \"elements.readUint(\\\".count\\\")\" */ 0x11))\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let length_4 := mload(_33)\n                if gt(length_4, 18446744073709551616)\n                {\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    mstore(_5, shl(224, 0x4e487b71))\n                    mstore(/** @src 19:800:816  \"vm.projectRoot()\" */ 4, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 0x41)\n                    revert(_5, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 36)\n                }\n                let oldLen_3 := sload(/** @src 19:1037:1056  \"new string[](count)\" */ 0x13)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                sstore(/** @src 19:1037:1056  \"new string[](count)\" */ 0x13, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length_4)\n                if lt(length_4, oldLen_3)\n                {\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    mstore(_5, /** @src 19:1037:1056  \"new string[](count)\" */ 0x13)\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    let data_7 := keccak256(_5, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x20)\n                    let _34 := add(data_7, oldLen_3)\n                    let start_2 := add(data_7, length_4)\n                    for { }\n                    lt(start_2, _34)\n                    {\n                        start_2 := add(start_2, /** @src 2:3166:3170  \"true\" */ 0x01)\n                    }\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    {\n                        let oldLen_4 := extract_byte_array_length(sload(start_2))\n                        if iszero(iszero(oldLen_4))\n                        {\n                            switch gt(oldLen_4, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 31)\n                            case /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 1 {\n                                /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                                mstore(_5, start_2)\n                                let data_8 := keccak256(_5, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x20)\n                                clear_storage_range_bytes1(add(data_8, /** @src 2:3166:3170  \"true\" */ 0x01), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(data_8, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ shr(5, add(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ oldLen_4, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 31))))\n                                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                                sstore(start_2, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _5)\n                                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                                sstore(data_8, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _5)\n                            }\n                            default /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            {\n                                sstore(start_2, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _5)\n                            }\n                        }\n                    }\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let srcPtr_2 := add(_33, 0x20)\n                /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                mstore(_5, /** @src 19:1037:1056  \"new string[](count)\" */ 0x13)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let elementSlot_1 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ keccak256(_5, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x20)\n                let i_5 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _5\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                for { }\n                lt(i_5, length_4)\n                {\n                    i_5 := add(i_5, /** @src 2:3166:3170  \"true\" */ 0x01)\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                {\n                    let _35 := mload(srcPtr_2)\n                    let newLen_2 := mload(_35)\n                    if gt(newLen_2, /** @src 19:606:618  \"new Merkle()\" */ sub(shl(64, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 1), 1))\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    {\n                        /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                        mstore(_5, shl(224, 0x4e487b71))\n                        mstore(/** @src 19:800:816  \"vm.projectRoot()\" */ 4, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 0x41)\n                        revert(_5, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 36)\n                    }\n                    clean_up_bytearray_end_slots_bytes_storage_ptr(elementSlot_1, extract_byte_array_length(sload(elementSlot_1)), newLen_2)\n                    let srcOffset_2 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _5\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    srcOffset_2 := 0x20\n                    switch gt(newLen_2, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 31)\n                    case /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 1 {\n                        /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                        mstore(_5, elementSlot_1)\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        let dstPtr_2 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ keccak256(_5, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x20)\n                        let i_6 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _5\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        for { } lt(i_6, and(newLen_2, not(31))) { i_6 := add(i_6, 0x20) }\n                        {\n                            sstore(dstPtr_2, mload(add(_35, srcOffset_2)))\n                            dstPtr_2 := add(dstPtr_2, /** @src 2:3166:3170  \"true\" */ 0x01)\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            srcOffset_2 := add(srcOffset_2, 0x20)\n                        }\n                        if lt(and(newLen_2, not(31)), newLen_2)\n                        {\n                            let lastValue_2 := mload(add(_35, srcOffset_2))\n                            sstore(dstPtr_2, and(lastValue_2, not(shr(and(shl(3, newLen_2), 248), not(0)))))\n                        }\n                        sstore(elementSlot_1, add(shl(/** @src 2:3166:3170  \"true\" */ 0x01, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ newLen_2), /** @src 2:3166:3170  \"true\" */ 0x01))\n                    }\n                    default /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    {\n                        let value_2 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _5\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        if newLen_2\n                        {\n                            value_2 := mload(add(_35, srcOffset_2))\n                        }\n                        sstore(elementSlot_1, extract_used_part_and_set_length_of_short_byte_array(value_2, newLen_2))\n                    }\n                    srcPtr_2 := add(srcPtr_2, 0x20)\n                    elementSlot_1 := add(elementSlot_1, /** @src 2:3166:3170  \"true\" */ 0x01)\n                }\n                /// @src 19:1089:1108  \"new string[](count)\"\n                let _36 := allocate_and_zero_memory_array_array_string_dyn(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ sload(/** @src 19:924:951  \"elements.readUint(\\\".count\\\")\" */ 0x11))\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let length_5 := mload(_36)\n                if gt(length_5, 18446744073709551616)\n                {\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    mstore(_5, shl(224, 0x4e487b71))\n                    mstore(/** @src 19:800:816  \"vm.projectRoot()\" */ 4, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 0x41)\n                    revert(_5, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 36)\n                }\n                let oldLen_5 := sload(/** @src 19:1089:1108  \"new string[](count)\" */ 0x14)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                sstore(/** @src 19:1089:1108  \"new string[](count)\" */ 0x14, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length_5)\n                if lt(length_5, oldLen_5)\n                {\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    mstore(_5, /** @src 19:1089:1108  \"new string[](count)\" */ 0x14)\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    let data_9 := keccak256(_5, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x20)\n                    let _37 := add(data_9, oldLen_5)\n                    let start_3 := add(data_9, length_5)\n                    for { }\n                    lt(start_3, _37)\n                    {\n                        start_3 := add(start_3, /** @src 2:3166:3170  \"true\" */ 0x01)\n                    }\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    {\n                        let oldLen_6 := extract_byte_array_length(sload(start_3))\n                        if iszero(iszero(oldLen_6))\n                        {\n                            switch gt(oldLen_6, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 31)\n                            case /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 1 {\n                                /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                                mstore(_5, start_3)\n                                let data_10 := keccak256(_5, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x20)\n                                clear_storage_range_bytes1(add(data_10, /** @src 2:3166:3170  \"true\" */ 0x01), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(data_10, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ shr(5, add(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ oldLen_6, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 31))))\n                                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                                sstore(start_3, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _5)\n                                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                                sstore(data_10, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _5)\n                            }\n                            default /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            {\n                                sstore(start_3, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _5)\n                            }\n                        }\n                    }\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let srcPtr_3 := add(_36, 0x20)\n                /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                mstore(_5, /** @src 19:1089:1108  \"new string[](count)\" */ 0x14)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let elementSlot_2 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ keccak256(_5, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x20)\n                let i_7 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _5\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                for { }\n                lt(i_7, length_5)\n                {\n                    i_7 := add(i_7, /** @src 2:3166:3170  \"true\" */ 0x01)\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                {\n                    let _38 := mload(srcPtr_3)\n                    let newLen_3 := mload(_38)\n                    if gt(newLen_3, /** @src 19:606:618  \"new Merkle()\" */ sub(shl(64, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 1), 1))\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    {\n                        /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                        mstore(_5, shl(224, 0x4e487b71))\n                        mstore(/** @src 19:800:816  \"vm.projectRoot()\" */ 4, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 0x41)\n                        revert(_5, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 36)\n                    }\n                    clean_up_bytearray_end_slots_bytes_storage_ptr(elementSlot_2, extract_byte_array_length(sload(elementSlot_2)), newLen_3)\n                    let srcOffset_3 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _5\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    srcOffset_3 := 0x20\n                    switch gt(newLen_3, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 31)\n                    case /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 1 {\n                        /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                        mstore(_5, elementSlot_2)\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        let dstPtr_3 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ keccak256(_5, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x20)\n                        let i_8 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _5\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        for { } lt(i_8, and(newLen_3, not(31))) { i_8 := add(i_8, 0x20) }\n                        {\n                            sstore(dstPtr_3, mload(add(_38, srcOffset_3)))\n                            dstPtr_3 := add(dstPtr_3, /** @src 2:3166:3170  \"true\" */ 0x01)\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            srcOffset_3 := add(srcOffset_3, 0x20)\n                        }\n                        if lt(and(newLen_3, not(31)), newLen_3)\n                        {\n                            let lastValue_3 := mload(add(_38, srcOffset_3))\n                            sstore(dstPtr_3, and(lastValue_3, not(shr(and(shl(3, newLen_3), 248), not(0)))))\n                        }\n                        sstore(elementSlot_2, add(shl(/** @src 2:3166:3170  \"true\" */ 0x01, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ newLen_3), /** @src 2:3166:3170  \"true\" */ 0x01))\n                    }\n                    default /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    {\n                        let value_3 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _5\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        if newLen_3\n                        {\n                            value_3 := mload(add(_38, srcOffset_3))\n                        }\n                        sstore(elementSlot_2, extract_used_part_and_set_length_of_short_byte_array(value_3, newLen_3))\n                    }\n                    srcPtr_3 := add(srcPtr_3, 0x20)\n                    elementSlot_2 := add(elementSlot_2, /** @src 2:3166:3170  \"true\" */ 0x01)\n                }\n                /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                let _39 := mload(_2)\n                let _40 := datasize(\"MerkleScript_43602_deployed\")\n                codecopy(_39, dataoffset(\"MerkleScript_43602_deployed\"), _40)\n                return(_39, _40)\n            }\n            function extract_byte_array_length(data) -> length\n            {\n                length := shr(1, data)\n                let outOfPlaceEncoding := and(data, 1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                if eq(outOfPlaceEncoding, lt(length, 32))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(0, 0x24)\n                }\n            }\n            function clear_storage_range_bytes1(start, end)\n            {\n                for { } lt(start, end) { start := add(start, 1) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n            function clean_up_bytearray_end_slots_bytes_storage_ptr(array, len, startIndex)\n            {\n                if gt(len, 31)\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ array)\n                    let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 0x20)\n                    let deleteStart := add(data, shr(5, add(startIndex, 31)))\n                    if lt(startIndex, 0x20) { deleteStart := data }\n                    clear_storage_range_bytes1(deleteStart, add(data, shr(5, add(len, 31))))\n                }\n            }\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            function finalize_allocation_12882(memPtr)\n            {\n                let newFreePtr := add(memPtr, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 64)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                if or(gt(newFreePtr, /** @src 19:606:618  \"new Merkle()\" */ sub(shl(64, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 1), 1)), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ lt(newFreePtr, memPtr))\n                {\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                mstore(/** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 64, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, /** @src 19:606:618  \"new Merkle()\" */ sub(shl(64, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 1), 1)), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ lt(newFreePtr, memPtr))\n                {\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                mstore(64, newFreePtr)\n            }\n            function copy_memory_to_memory_with_cleanup(src, dst, length)\n            {\n                let i := 0\n                for { } lt(i, length) { i := add(i, 32) }\n                {\n                    mstore(add(dst, i), mload(add(src, i)))\n                }\n                mstore(add(dst, length), 0)\n            }\n            function abi_decode_string_memory_ptr_fromMemory(offset, end) -> array\n            {\n                if iszero(slt(add(offset, 0x1f), end))\n                {\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    revert(0, 0)\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let _1 := mload(offset)\n                if gt(_1, /** @src 19:606:618  \"new Merkle()\" */ sub(shl(64, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 1), 1))\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                {\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 0x24)\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let memPtr := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ mload(64)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                finalize_allocation(memPtr, add(and(add(_1, 0x1f), not(31)), 0x20))\n                mstore(memPtr, _1)\n                if gt(add(add(offset, _1), 0x20), end)\n                {\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                copy_memory_to_memory_with_cleanup(add(offset, 0x20), add(memPtr, 0x20), _1)\n                array := memPtr\n            }\n            function abi_decode_string_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32)\n                {\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    revert(0, 0)\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let offset := mload(headStart)\n                if gt(offset, /** @src 19:606:618  \"new Merkle()\" */ sub(shl(64, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 1), 1))\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                {\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    revert(0, 0)\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                value0 := abi_decode_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n            }\n            function abi_encode_string(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n            {\n                used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n            }\n            function copy_array_from_storage_to_memory_string() -> memPtr\n            {\n                memPtr := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ mload(64)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let slotValue := sload(/** @src 19:774:829  \"vm.readFile(string.concat(vm.projectRoot(), inputPath))\" */ 0x0f)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let length := extract_byte_array_length(slotValue)\n                mstore(memPtr, length)\n                let _1 := 0x20\n                let _2 := 1\n                switch and(slotValue, 1)\n                case 0 {\n                    mstore(add(memPtr, _1), and(slotValue, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ not(255)))\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    ret := add(add(memPtr, shl(5, iszero(iszero(length)))), _1)\n                }\n                case 1 {\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 19:774:829  \"vm.readFile(string.concat(vm.projectRoot(), inputPath))\" */ 0x0f)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let dataPos := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _1)\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    for { } lt(i, length) { i := add(i, _1) }\n                    {\n                        mstore(add(add(memPtr, i), _1), sload(dataPos))\n                        dataPos := add(dataPos, _2)\n                    }\n                    ret := add(add(memPtr, i), _1)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function array_allocation_size_array_bytes32_dyn(length) -> size\n            {\n                if gt(length, /** @src 19:606:618  \"new Merkle()\" */ sub(shl(64, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 1), 1))\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                {\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                size := add(shl(5, length), 0x20)\n            }\n            function allocate_and_zero_memory_array_array_string_dyn(length) -> memPtr\n            {\n                let _1 := array_allocation_size_array_bytes32_dyn(length)\n                let memPtr_1 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ mload(64)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                finalize_allocation(memPtr_1, _1)\n                mstore(memPtr_1, length)\n                memPtr := memPtr_1\n                let _2 := add(array_allocation_size_array_bytes32_dyn(length), not(31))\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                for { } lt(i, _2) { i := add(i, 32) }\n                {\n                    mstore(add(add(memPtr_1, i), 32), 96)\n                }\n            }\n            /// @src 4:661:724  \"VmSafe(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n            function abi_encode_string_string(headStart, value0, value1) -> tail\n            {\n                mstore(headStart, 64)\n                let tail_1 := abi_encode_string(value0, add(headStart, 64))\n                mstore(add(headStart, 32), sub(tail_1, headStart))\n                tail := abi_encode_string(value1, tail_1)\n            }\n        }\n        /// @use-src 0:\"lib/forge-std/src/Base.sol\", 1:\"lib/forge-std/src/Script.sol\", 4:\"lib/forge-std/src/StdJson.sol\", 10:\"lib/forge-std/src/console.sol\", 19:\"lib/murky/script/Merkle.s.sol\", 20:\"lib/murky/script/common/ScriptHelper.sol\"\n        object \"MerkleScript_43602_deployed\" {\n            code {\n                {\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    let _1 := 64\n                    mstore(_1, 128)\n                    let _2 := 4\n                    if iszero(lt(calldatasize(), _2))\n                    {\n                        let _3 := 0\n                        switch shr(224, calldataload(_3))\n                        case 0xc0406226 {\n                            if callvalue() { revert(_3, _3) }\n                            if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                            /// @src 19:2122:2178  \"console.log(\\\"Generating Merkle Proof for %s\\\", inputPath)\"\n                            let _mpos := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ copy_literal_to_memory_6f9d520e9cf19bc666ddef81ca16a7330a6bfd6ca6826ce99b2cc0293d094d13()\n                            /// @src 19:2122:2178  \"console.log(\\\"Generating Merkle Proof for %s\\\", inputPath)\"\n                            fun_log(_mpos, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ copy_array_from_storage_to_memory_string_6571())\n                            /// @src 19:2194:2207  \"uint256 i = 0\"\n                            let var_i := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _3\n                            /// @src 19:2189:3105  \"for (uint256 i = 0; i < count; ++i) {...\"\n                            for { }\n                            /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 1\n                            /// @src 19:2194:2207  \"uint256 i = 0\"\n                            {\n                                /// @src 19:2220:2223  \"++i\"\n                                var_i := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ add(/** @src 19:2220:2223  \"++i\" */ var_i, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 1)\n                            }\n                            /// @src 19:2220:2223  \"++i\"\n                            {\n                                /// @src 19:2209:2218  \"i < count\"\n                                if iszero(lt(var_i, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ sload(/** @src 19:2213:2218  \"count\" */ 0x11)))\n                                /// @src 19:2209:2218  \"i < count\"\n                                { break }\n                                /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                                let _4 := sload(/** @src 19:2276:2281  \"types\" */ 0x10)\n                                /// @src 19:2263:2289  \"new string[](types.length)\"\n                                let expr_mpos := allocate_and_zero_memory_array_array_string_dyn(/** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _4)\n                                /// @src 19:2327:2354  \"new bytes32[](types.length)\"\n                                let expr_mpos_1 := allocate_and_zero_memory_array_array_bytes32_dyn(/** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _4)\n                                /// @src 19:2374:2387  \"uint256 j = 0\"\n                                let var_j := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _3\n                                /// @src 19:2369:2956  \"for (uint256 j = 0; j < types.length; ++j) {...\"\n                                for { }\n                                /** @src 19:2389:2405  \"j < types.length\" */ lt(var_j, _4)\n                                /// @src 19:2374:2387  \"uint256 j = 0\"\n                                {\n                                    /// @src 19:2407:2410  \"++j\"\n                                    var_j := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ add(/** @src 19:2407:2410  \"++j\" */ var_j, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 1)\n                                }\n                                /// @src 19:2407:2410  \"++j\"\n                                {\n                                    /// @src 19:2449:2457  \"types[j]\"\n                                    let _5, _6 := storage_array_index_access_string__dyn(var_j)\n                                    /// @src 19:2434:2469  \"compareStrings(types[j], \\\"address\\\")\"\n                                    let _mpos_1 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ copy_array_from_storage_to_memory_string(/** @src 19:2434:2469  \"compareStrings(types[j], \\\"address\\\")\" */ _5)\n                                    /// @src 19:2430:2942  \"if (compareStrings(types[j], \\\"address\\\")) {...\"\n                                    switch /** @src 19:2434:2469  \"compareStrings(types[j], \\\"address\\\")\" */ fun_compareStrings(_mpos_1, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ copy_literal_to_memory_421683f821a0574472445355be6d2b769119e8515f8376a1d7878523dfdecf7b())\n                                    case /** @src 19:2430:2942  \"if (compareStrings(types[j], \\\"address\\\")) {...\" */ 0 {\n                                        /// @src 19:2712:2720  \"types[j]\"\n                                        let _7, _8 := storage_array_index_access_string__dyn(var_j)\n                                        /// @src 19:2697:2729  \"compareStrings(types[j], \\\"uint\\\")\"\n                                        let _mpos_2 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ copy_array_from_storage_to_memory_string(/** @src 19:2697:2729  \"compareStrings(types[j], \\\"uint\\\")\" */ _7)\n                                        /// @src 19:2693:2942  \"if (compareStrings(types[j], \\\"uint\\\")) {...\"\n                                        if /** @src 19:2697:2729  \"compareStrings(types[j], \\\"uint\\\")\" */ fun_compareStrings(_mpos_2, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ copy_literal_to_memory_78b9198c2298bca6916a2669592af279cda8160226cf57bc4580c40c0a8b1713())\n                                        /// @src 19:2693:2942  \"if (compareStrings(types[j], \\\"uint\\\")) {...\"\n                                        {\n                                            /// @src 19:2782:2801  \"elements.readString\"\n                                            let expr_self_mpos := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ copy_array_from_storage_to_memory_string_6574()\n                                            /// @src 19:2782:2825  \"elements.readString(getValuesByIndex(i, j))\"\n                                            let expr_mpos_2 := fun_readString(expr_self_mpos, /** @src 19:2802:2824  \"getValuesByIndex(i, j)\" */ fun_getValuesByIndex(var_i, var_j))\n                                            /// @src 19:2769:2826  \"vm.parseUint(elements.readString(getValuesByIndex(i, j)))\"\n                                            let _9 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ mload(_1)\n                                            /// @src 19:2769:2826  \"vm.parseUint(elements.readString(getValuesByIndex(i, j)))\"\n                                            mstore(_9, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(224, 0xfa91454d))\n                                            /// @src 19:3022:3038  \"abi.encode(data)\"\n                                            let _10 := 0x20\n                                            /// @src 19:2769:2826  \"vm.parseUint(elements.readString(getValuesByIndex(i, j)))\"\n                                            let _11 := sub(abi_encode_string(add(_9, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _2), /** @src 19:2769:2826  \"vm.parseUint(elements.readString(getValuesByIndex(i, j)))\" */ expr_mpos_2), _9)\n                                            /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                                            let _12 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                                            /// @src 19:2769:2826  \"vm.parseUint(elements.readString(getValuesByIndex(i, j)))\"\n                                            let _13 := staticcall(gas(), /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _12, /** @src 19:2769:2826  \"vm.parseUint(elements.readString(getValuesByIndex(i, j)))\" */ _9, _11, _9, /** @src 19:3022:3038  \"abi.encode(data)\" */ _10)\n                                            /// @src 19:2769:2826  \"vm.parseUint(elements.readString(getValuesByIndex(i, j)))\"\n                                            if iszero(_13) { revert_forward() }\n                                            let expr := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _3\n                                            /// @src 19:2769:2826  \"vm.parseUint(elements.readString(getValuesByIndex(i, j)))\"\n                                            if _13\n                                            {\n                                                let _14 := /** @src 19:3022:3038  \"abi.encode(data)\" */ _10\n                                                /// @src 19:2769:2826  \"vm.parseUint(elements.readString(getValuesByIndex(i, j)))\"\n                                                if gt(/** @src 19:3022:3038  \"abi.encode(data)\" */ _10, /** @src 19:2769:2826  \"vm.parseUint(elements.readString(getValuesByIndex(i, j)))\" */ returndatasize()) { _14 := returndatasize() }\n                                                finalize_allocation(_9, _14)\n                                                expr := abi_decode_uint256_fromMemory(_9, add(_9, _14))\n                                            }\n                                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                                            mstore(/** @src 19:2848:2872  \"data[j] = bytes32(value)\" */ memory_array_index_access_bytes32_dyn(expr_mpos_1, var_j), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ expr)\n                                            /// @src 19:2905:2923  \"vm.toString(value)\"\n                                            let _15 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ mload(_1)\n                                            /// @src 19:2905:2923  \"vm.toString(value)\"\n                                            mstore(_15, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(225, 0x348051d7))\n                                            /// @src 19:2905:2923  \"vm.toString(value)\"\n                                            let _16 := staticcall(gas(), /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _12, /** @src 19:2905:2923  \"vm.toString(value)\" */ _15, sub(abi_encode_uint256(add(_15, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _2), /** @src 19:2905:2923  \"vm.toString(value)\" */ expr), _15), _15, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _3)\n                                            /// @src 19:2905:2923  \"vm.toString(value)\"\n                                            if iszero(_16) { revert_forward() }\n                                            let expr_mpos_3 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _3\n                                            /// @src 19:2905:2923  \"vm.toString(value)\"\n                                            if _16\n                                            {\n                                                let _17 := returndatasize()\n                                                returndatacopy(_15, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _3, /** @src 19:2905:2923  \"vm.toString(value)\" */ _17)\n                                                finalize_allocation(_15, _17)\n                                                expr_mpos_3 := abi_decode_string_fromMemory(_15, add(_15, _17))\n                                            }\n                                            /// @src 19:2894:2923  \"input[j] = vm.toString(value)\"\n                                            mstore(memory_array_index_access_bytes32_dyn(expr_mpos, var_j), expr_mpos_3)\n                                            pop(memory_array_index_access_bytes32_dyn(expr_mpos, var_j))\n                                        }\n                                    }\n                                    default /// @src 19:2430:2942  \"if (compareStrings(types[j], \\\"address\\\")) {...\"\n                                    {\n                                        /// @src 19:2509:2529  \"elements.readAddress\"\n                                        let expr_self_mpos_1 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ copy_array_from_storage_to_memory_string_6574()\n                                        /// @src 19:2509:2553  \"elements.readAddress(getValuesByIndex(i, j))\"\n                                        let expr_1 := fun_readAddress(expr_self_mpos_1, /** @src 19:2530:2552  \"getValuesByIndex(i, j)\" */ fun_getValuesByIndex(var_i, var_j))\n                                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                                        mstore(/** @src 19:2575:2617  \"data[j] = bytes32(uint256(uint160(value)))\" */ memory_array_index_access_bytes32_dyn(expr_mpos_1, var_j), /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ and(/** @src 19:2601:2615  \"uint160(value)\" */ expr_1, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ sub(shl(160, 1), 1)))\n                                        /// @src 19:2650:2668  \"vm.toString(value)\"\n                                        let _18 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ mload(_1)\n                                        /// @src 19:2650:2668  \"vm.toString(value)\"\n                                        mstore(_18, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(225, 0x2b65311f))\n                                        /// @src 19:2650:2668  \"vm.toString(value)\"\n                                        let _19 := staticcall(gas(), /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 19:2650:2668  \"vm.toString(value)\" */ _18, sub(abi_encode_address(add(_18, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _2), /** @src 19:2650:2668  \"vm.toString(value)\" */ expr_1), _18), _18, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _3)\n                                        /// @src 19:2650:2668  \"vm.toString(value)\"\n                                        if iszero(_19) { revert_forward() }\n                                        let expr_mpos_4 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _3\n                                        /// @src 19:2650:2668  \"vm.toString(value)\"\n                                        if _19\n                                        {\n                                            let _20 := returndatasize()\n                                            returndatacopy(_18, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _3, /** @src 19:2650:2668  \"vm.toString(value)\" */ _20)\n                                            finalize_allocation(_18, _20)\n                                            expr_mpos_4 := abi_decode_string_fromMemory(_18, add(_18, _20))\n                                        }\n                                        /// @src 19:2639:2668  \"input[j] = vm.toString(value)\"\n                                        mstore(memory_array_index_access_bytes32_dyn(expr_mpos, var_j), expr_mpos_4)\n                                        pop(memory_array_index_access_bytes32_dyn(expr_mpos, var_j))\n                                    }\n                                }\n                                /// @src 19:3022:3038  \"abi.encode(data)\"\n                                let expr_mpos_5 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ mload(_1)\n                                /// @src 19:3022:3038  \"abi.encode(data)\"\n                                let _21 := 0x20\n                                let _22 := sub(abi_encode_array_bytes32_dyn(add(expr_mpos_5, _21), expr_mpos_1), expr_mpos_5)\n                                mstore(expr_mpos_5, add(_22, not(31)))\n                                finalize_allocation(expr_mpos_5, _22)\n                                /// @src 19:3014:3039  \"ltrim64(abi.encode(data))\"\n                                let expr_mpos_6 := fun_ltrim64(expr_mpos_5)\n                                /// @src 19:2991:3041  \"bytes.concat(keccak256(ltrim64(abi.encode(data))))\"\n                                let expr_mpos_7 := bytes_concat_bytes32(/** @src 19:3004:3040  \"keccak256(ltrim64(abi.encode(data)))\" */ keccak256(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(/** @src 19:3004:3040  \"keccak256(ltrim64(abi.encode(data)))\" */ expr_mpos_6, /** @src 19:3022:3038  \"abi.encode(data)\" */ _21), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ mload(/** @src 19:3004:3040  \"keccak256(ltrim64(abi.encode(data)))\" */ expr_mpos_6)))\n                                /// @src 19:2981:3042  \"keccak256(bytes.concat(keccak256(ltrim64(abi.encode(data)))))\"\n                                let expr_2 := keccak256(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(/** @src 19:2981:3042  \"keccak256(bytes.concat(keccak256(ltrim64(abi.encode(data)))))\" */ expr_mpos_7, /** @src 19:3022:3038  \"abi.encode(data)\" */ _21), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ mload(/** @src 19:2981:3042  \"keccak256(bytes.concat(keccak256(ltrim64(abi.encode(data)))))\" */ expr_mpos_7))\n                                /// @src 19:2970:2978  \"leafs[i]\"\n                                let _23, _24 := storage_array_index_access_string__dyn_6576(var_i)\n                                /// @src 19:2970:3042  \"leafs[i] = keccak256(bytes.concat(keccak256(ltrim64(abi.encode(data)))))\"\n                                update_storage_value_bytes32_to_bytes32(_23, _24, expr_2)\n                                /// @src 19:3068:3094  \"stringArrayToString(input)\"\n                                let expr_mpos_8 := fun_stringArrayToString(expr_mpos)\n                                /// @src 19:3056:3065  \"inputs[i]\"\n                                let _25, _26 := storage_array_index_access_string_storage_dyn(var_i)\n                                /// @src 19:3056:3094  \"inputs[i] = stringArrayToString(input)\"\n                                update_storage_value_string_to_string(_25, _26, expr_mpos_8)\n                            }\n                            /// @src 19:3120:3133  \"uint256 i = 0\"\n                            let var_i_1 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _3\n                            /// @src 19:3115:3478  \"for (uint256 i = 0; i < count; ++i) {...\"\n                            for { }\n                            /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 1\n                            /// @src 19:3120:3133  \"uint256 i = 0\"\n                            {\n                                /// @src 19:3146:3149  \"++i\"\n                                var_i_1 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ add(/** @src 19:3146:3149  \"++i\" */ var_i_1, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 1)\n                            }\n                            /// @src 19:3146:3149  \"++i\"\n                            {\n                                /// @src 19:3135:3144  \"i < count\"\n                                if iszero(lt(var_i_1, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ sload(/** @src 19:2213:2218  \"count\" */ 0x11)))\n                                /// @src 19:3135:3144  \"i < count\"\n                                { break }\n                                /// @src 19:3208:3218  \"m.getProof\"\n                                let expr_address := convert_contract_Vm_to_address(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ extract_from_storage_value_offsett_contract_Merkle(sload(/** @src 19:3208:3209  \"m\" */ 0x0c)))\n                                /// @src 19:3208:3228  \"m.getProof(leafs, i)\"\n                                let _27 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ mload(_1)\n                                /// @src 19:3208:3228  \"m.getProof(leafs, i)\"\n                                mstore(_27, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(224, 0xb8616195))\n                                /// @src 19:3208:3228  \"m.getProof(leafs, i)\"\n                                let _28 := staticcall(gas(), expr_address, _27, sub(abi_encode_array_bytes32_dyn_storage_uint256(add(_27, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _2), /** @src 19:3208:3228  \"m.getProof(leafs, i)\" */ var_i_1), _27), _27, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _3)\n                                /// @src 19:3208:3228  \"m.getProof(leafs, i)\"\n                                if iszero(_28) { revert_forward() }\n                                let expr_mpos_9 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _3\n                                /// @src 19:3208:3228  \"m.getProof(leafs, i)\"\n                                if _28\n                                {\n                                    let _29 := returndatasize()\n                                    returndatacopy(_27, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _3, /** @src 19:3208:3228  \"m.getProof(leafs, i)\" */ _29)\n                                    finalize_allocation(_27, _29)\n                                    expr_mpos_9 := abi_decode_array_bytes32_dyn_fromMemory(_27, add(_27, _29))\n                                }\n                                /// @src 19:3187:3229  \"bytes32ArrayToString(m.getProof(leafs, i))\"\n                                let expr_mpos_10 := fun_bytes32ArrayToString(expr_mpos_9)\n                                /// @src 19:3276:3292  \"m.getRoot(leafs)\"\n                                let _30 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ mload(_1)\n                                /// @src 19:3276:3292  \"m.getRoot(leafs)\"\n                                mstore(_30, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(225, 0x17046b01))\n                                /// @src 19:3022:3038  \"abi.encode(data)\"\n                                let _31 := 0x20\n                                /// @src 19:3276:3292  \"m.getRoot(leafs)\"\n                                let _32 := staticcall(gas(), expr_address, _30, sub(abi_encode_array_bytes32_dyn_storage_6579(add(_30, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _2)), /** @src 19:3276:3292  \"m.getRoot(leafs)\" */ _30), _30, /** @src 19:3022:3038  \"abi.encode(data)\" */ _31)\n                                /// @src 19:3276:3292  \"m.getRoot(leafs)\"\n                                if iszero(_32) { revert_forward() }\n                                let expr_3 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _3\n                                /// @src 19:3276:3292  \"m.getRoot(leafs)\"\n                                if _32\n                                {\n                                    let _33 := /** @src 19:3022:3038  \"abi.encode(data)\" */ _31\n                                    /// @src 19:3276:3292  \"m.getRoot(leafs)\"\n                                    if gt(/** @src 19:3022:3038  \"abi.encode(data)\" */ _31, /** @src 19:3276:3292  \"m.getRoot(leafs)\" */ returndatasize()) { _33 := returndatasize() }\n                                    finalize_allocation(_30, _33)\n                                    expr_3 := abi_decode_uint256_fromMemory(_30, add(_30, _33))\n                                }\n                                /// @src 19:3264:3293  \"vm.toString(m.getRoot(leafs))\"\n                                let _34 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ mload(_1)\n                                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                                let _35 := shl(227, 0x1623433d)\n                                /// @src 19:3264:3293  \"vm.toString(m.getRoot(leafs))\"\n                                mstore(_34, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _35)\n                                /// @src 19:3264:3293  \"vm.toString(m.getRoot(leafs))\"\n                                let _36 := sub(abi_encode_uint256(add(_34, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _2), /** @src 19:3264:3293  \"vm.toString(m.getRoot(leafs))\" */ expr_3), _34)\n                                /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                                let _37 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                                /// @src 19:3264:3293  \"vm.toString(m.getRoot(leafs))\"\n                                let _38 := staticcall(gas(), /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _37, /** @src 19:3264:3293  \"vm.toString(m.getRoot(leafs))\" */ _34, _36, _34, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _3)\n                                /// @src 19:3264:3293  \"vm.toString(m.getRoot(leafs))\"\n                                if iszero(_38) { revert_forward() }\n                                let expr_mpos_11 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _3\n                                /// @src 19:3264:3293  \"vm.toString(m.getRoot(leafs))\"\n                                if _38\n                                {\n                                    let _39 := returndatasize()\n                                    returndatacopy(_34, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _3, /** @src 19:3264:3293  \"vm.toString(m.getRoot(leafs))\" */ _39)\n                                    finalize_allocation(_34, _39)\n                                    expr_mpos_11 := abi_decode_string_fromMemory(_34, add(_34, _39))\n                                }\n                                /// @src 19:3340:3348  \"leafs[i]\"\n                                let _40, _41 := storage_array_index_access_string__dyn_6576(var_i_1)\n                                let _42 := /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ extract_from_storage_value_dynamict_bytes32(sload(/** @src 19:3340:3348  \"leafs[i]\" */ _40), _41)\n                                /// @src 19:3328:3349  \"vm.toString(leafs[i])\"\n                                let _43 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ mload(_1)\n                                /// @src 19:3328:3349  \"vm.toString(leafs[i])\"\n                                mstore(_43, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _35)\n                                /// @src 19:3328:3349  \"vm.toString(leafs[i])\"\n                                let _44 := staticcall(gas(), /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _37, /** @src 19:3328:3349  \"vm.toString(leafs[i])\" */ _43, sub(abi_encode_uint256(add(_43, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _2), /** @src 19:3328:3349  \"vm.toString(leafs[i])\" */ _42), _43), _43, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _3)\n                                /// @src 19:3328:3349  \"vm.toString(leafs[i])\"\n                                if iszero(_44) { revert_forward() }\n                                let expr_mpos_12 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _3\n                                /// @src 19:3328:3349  \"vm.toString(leafs[i])\"\n                                if _44\n                                {\n                                    let _45 := returndatasize()\n                                    returndatacopy(_43, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _3, /** @src 19:3328:3349  \"vm.toString(leafs[i])\" */ _45)\n                                    finalize_allocation(_43, _45)\n                                    expr_mpos_12 := abi_decode_string_fromMemory(_43, add(_43, _45))\n                                }\n                                /// @src 19:3385:3394  \"inputs[i]\"\n                                let _46, _47 := storage_array_index_access_string_storage_dyn(var_i_1)\n                                /// @src 19:1973:1986  \"return result\"\n                                let var_mpos := /** @src 19:1648:1962  \"string.concat(...\" */ string_concat_stringliteral_a91e_stringliteral_ad4b_string_stringliteral_3e7a_stringliteral_ebb8_string_stringliteral_3e7a_stringliteral_58ce_string_stringliteral_stringliteral_25c0_string_stringliteral_6e9f_stringliteral_8e2f(/** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ copy_array_from_storage_to_memory_string(/** @src 19:3363:3394  \"string memory input = inputs[i]\" */ _46), /** @src 19:1648:1962  \"string.concat(...\" */ expr_mpos_10, expr_mpos_11, expr_mpos_12)\n                                /// @src 19:3409:3419  \"outputs[i]\"\n                                let _48, _49 := storage_array_index_access_string__dyn_6582(var_i_1)\n                                /// @src 19:3409:3467  \"outputs[i] = generateJsonEntries(input, proof, root, leaf)\"\n                                update_storage_value_string_to_string(_48, _49, var_mpos)\n                            }\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            copy_byte_array_to_storage_from_string_to_string(/** @src 19:3497:3530  \"stringArrayToArrayString(outputs)\" */ fun_stringArrayToArrayString(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ copy_array_from_storage_to_memory_array_string__dyn()))\n                            /// @src 19:3567:3583  \"vm.projectRoot()\"\n                            let _50 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ mload(_1)\n                            /// @src 19:3567:3583  \"vm.projectRoot()\"\n                            mstore(_50, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(225, 0x6c985073))\n                            /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                            let _51 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                            /// @src 19:3567:3583  \"vm.projectRoot()\"\n                            let _52 := staticcall(gas(), /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _51, /** @src 19:3567:3583  \"vm.projectRoot()\" */ _50, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _2, /** @src 19:3567:3583  \"vm.projectRoot()\" */ _50, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _3)\n                            /// @src 19:3567:3583  \"vm.projectRoot()\"\n                            if iszero(_52) { revert_forward() }\n                            let expr_mpos_13 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _3\n                            /// @src 19:3567:3583  \"vm.projectRoot()\"\n                            if _52\n                            {\n                                let _53 := returndatasize()\n                                returndatacopy(_50, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _3, /** @src 19:3567:3583  \"vm.projectRoot()\" */ _53)\n                                finalize_allocation(_50, _53)\n                                expr_mpos_13 := abi_decode_string_fromMemory(_50, add(_50, _53))\n                            }\n                            /// @src 19:3553:3596  \"string.concat(vm.projectRoot(), outputPath)\"\n                            let expr_mpos_14 := string_concat_string_string_storage(expr_mpos_13)\n                            /// @src 19:3540:3605  \"vm.writeFile(string.concat(vm.projectRoot(), outputPath), output)\"\n                            if iszero(extcodesize(/** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _51))\n                            /// @src 19:3540:3605  \"vm.writeFile(string.concat(vm.projectRoot(), outputPath), output)\"\n                            {\n                                /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                                revert(_3, _3)\n                            }\n                            /// @src 19:3540:3605  \"vm.writeFile(string.concat(vm.projectRoot(), outputPath), output)\"\n                            let _54 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ mload(_1)\n                            /// @src 19:3540:3605  \"vm.writeFile(string.concat(vm.projectRoot(), outputPath), output)\"\n                            mstore(_54, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(224, 0x897e0a97))\n                            /// @src 19:3540:3605  \"vm.writeFile(string.concat(vm.projectRoot(), outputPath), output)\"\n                            let _55 := call(gas(), /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _51, _3, /** @src 19:3540:3605  \"vm.writeFile(string.concat(vm.projectRoot(), outputPath), output)\" */ _54, sub(abi_encode_string_string_storage(add(_54, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _2), /** @src 19:3540:3605  \"vm.writeFile(string.concat(vm.projectRoot(), outputPath), output)\" */ expr_mpos_14), _54), _54, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _3)\n                            /// @src 19:3540:3605  \"vm.writeFile(string.concat(vm.projectRoot(), outputPath), output)\"\n                            if iszero(_55) { revert_forward() }\n                            if _55\n                            {\n                                finalize_allocation_6587(_54)\n                                abi_decode(_54, _54)\n                            }\n                            /// @src 19:3616:3673  \"console.log(\\\"DONE: The output is found at %s\\\", inputPath)\"\n                            let _mpos_3 := /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ copy_literal_to_memory_37106a7f3a49ca912cf7a53b366425c214abe1e11f3ee05d4f454eaf1d97589e()\n                            /// @src 19:3616:3673  \"console.log(\\\"DONE: The output is found at %s\\\", inputPath)\"\n                            fun_log(_mpos_3, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ copy_array_from_storage_to_memory_string_6571())\n                            return(_3, _3)\n                        }\n                        case 0xf8ccbf47 { external_fun_IS_SCRIPT() }\n                    }\n                    revert(0, 0)\n                }\n                function abi_decode(headStart, dataEnd)\n                {\n                    if slt(sub(dataEnd, headStart), 0) { revert(0, 0) }\n                }\n                function external_fun_IS_SCRIPT()\n                {\n                    if callvalue() { revert(0, 0) }\n                    if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                    let value := and(shr(16, sload(/** @src 1:800:828  \"bool public IS_SCRIPT = true\" */ 12)), /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 0xff)\n                    let memPos := mload(64)\n                    mstore(memPos, iszero(iszero(value)))\n                    return(memPos, 32)\n                }\n                function panic_error_0x41()\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                function finalize_allocation_6587(memPtr)\n                {\n                    if gt(memPtr, 0xffffffffffffffff) { panic_error_0x41() }\n                    mstore(64, memPtr)\n                }\n                function finalize_allocation_13477(memPtr)\n                {\n                    let newFreePtr := add(memPtr, 64)\n                    if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                    mstore(64, newFreePtr)\n                }\n                function finalize_allocation(memPtr, size)\n                {\n                    let newFreePtr := add(memPtr, and(add(size, 31), /** @src 19:3022:3038  \"abi.encode(data)\" */ not(31)))\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                    mstore(64, newFreePtr)\n                }\n                function copy_literal_to_memory_6f9d520e9cf19bc666ddef81ca16a7330a6bfd6ca6826ce99b2cc0293d094d13() -> memPtr\n                {\n                    let memPtr_1 := mload(64)\n                    finalize_allocation_13477(memPtr_1)\n                    mstore(memPtr_1, 30)\n                    memPtr := memPtr_1\n                    mstore(add(memPtr_1, 32), \"Generating Merkle Proof for %s\")\n                }\n                function extract_byte_array_length(data) -> length\n                {\n                    length := shr(1, data)\n                    let outOfPlaceEncoding := and(data, 1)\n                    if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                    if eq(outOfPlaceEncoding, lt(length, 32))\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x22)\n                        revert(0, 0x24)\n                    }\n                }\n                function array_dataslot_string_storage_13482() -> data\n                {\n                    mstore(0, /** @src 19:3488:3530  \"output = stringArrayToArrayString(outputs)\" */ 0x15)\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    data := 38878206584692966203415385907871375197469080758325516314230789535345649042549\n                }\n                function array_dataslot_string_storage(ptr) -> data\n                {\n                    mstore(0, ptr)\n                    data := keccak256(0, 0x20)\n                }\n                function copy_array_from_storage_to_memory_string_6571() -> memPtr\n                {\n                    memPtr := mload(64)\n                    let ret := /** @src -1:-1:-1 */ 0\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    let slotValue := sload(/** @src 19:2168:2177  \"inputPath\" */ 0x0d)\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    let length := extract_byte_array_length(slotValue)\n                    mstore(memPtr, length)\n                    let _1 := 0x20\n                    let _2 := 1\n                    switch and(slotValue, 1)\n                    case 0 {\n                        mstore(add(memPtr, 0x20), and(slotValue, not(255)))\n                        ret := add(add(memPtr, shl(5, iszero(iszero(length)))), 0x20)\n                    }\n                    case 1 {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 19:2168:2177  \"inputPath\" */ 0x0d)\n                        /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                        let dataPos := 97569884605916225051403212656556507955018248777258318895762758024193532305077\n                        let i := /** @src -1:-1:-1 */ 0\n                        /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                        for { } lt(i, length) { i := add(i, _1) }\n                        {\n                            mstore(add(add(memPtr, i), _1), sload(dataPos))\n                            dataPos := add(dataPos, _2)\n                        }\n                        ret := add(add(memPtr, i), 0x20)\n                    }\n                    finalize_allocation(memPtr, sub(ret, memPtr))\n                }\n                function copy_array_from_storage_to_memory_string_6574() -> memPtr\n                {\n                    memPtr := mload(64)\n                    let ret := /** @src -1:-1:-1 */ 0\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    let slotValue := sload(/** @src 19:2782:2790  \"elements\" */ 0x0f)\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    let length := extract_byte_array_length(slotValue)\n                    mstore(memPtr, length)\n                    let _1 := 0x20\n                    let _2 := 1\n                    switch and(slotValue, 1)\n                    case 0 {\n                        mstore(add(memPtr, 0x20), and(slotValue, not(255)))\n                        ret := add(add(memPtr, shl(5, iszero(iszero(length)))), 0x20)\n                    }\n                    case 1 {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 19:2782:2790  \"elements\" */ 0x0f)\n                        /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                        let dataPos := 63806209331542711802848847270949280092855778197726125910674179583545433573378\n                        let i := /** @src -1:-1:-1 */ 0\n                        /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                        for { } lt(i, length) { i := add(i, _1) }\n                        {\n                            mstore(add(add(memPtr, i), _1), sload(dataPos))\n                            dataPos := add(dataPos, _2)\n                        }\n                        ret := add(add(memPtr, i), 0x20)\n                    }\n                    finalize_allocation(memPtr, sub(ret, memPtr))\n                }\n                function copy_array_from_storage_to_memory_string(slot) -> memPtr\n                {\n                    memPtr := mload(64)\n                    let ret := /** @src -1:-1:-1 */ 0\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    let slotValue := sload(slot)\n                    let length := extract_byte_array_length(slotValue)\n                    mstore(memPtr, length)\n                    let _1 := 0x20\n                    let _2 := 1\n                    switch and(slotValue, 1)\n                    case 0 {\n                        mstore(add(memPtr, _1), and(slotValue, not(255)))\n                        ret := add(add(memPtr, shl(5, iszero(iszero(length)))), _1)\n                    }\n                    case 1 {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ slot)\n                        let dataPos := keccak256(/** @src -1:-1:-1 */ 0, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _1)\n                        let i := /** @src -1:-1:-1 */ 0\n                        /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                        for { } lt(i, length) { i := add(i, _1) }\n                        {\n                            mstore(add(add(memPtr, i), _1), sload(dataPos))\n                            dataPos := add(dataPos, _2)\n                        }\n                        ret := add(add(memPtr, i), _1)\n                    }\n                    finalize_allocation(memPtr, sub(ret, memPtr))\n                }\n                function array_allocation_size_array_string_dyn(length) -> size\n                {\n                    if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n                    size := add(shl(5, length), 0x20)\n                }\n                function allocate_and_zero_memory_array_array_string_dyn(length) -> memPtr\n                {\n                    let _1 := array_allocation_size_array_string_dyn(length)\n                    let memPtr_1 := mload(64)\n                    finalize_allocation(memPtr_1, _1)\n                    mstore(memPtr_1, length)\n                    memPtr := memPtr_1\n                    let _2 := add(array_allocation_size_array_string_dyn(length), /** @src 19:3022:3038  \"abi.encode(data)\" */ not(31))\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    for { } lt(i, _2) { i := add(i, 32) }\n                    {\n                        mstore(add(add(memPtr_1, i), 32), 96)\n                    }\n                }\n                function allocate_and_zero_memory_array_array_bytes32_dyn(length) -> memPtr\n                {\n                    let _1 := array_allocation_size_array_string_dyn(length)\n                    let memPtr_1 := mload(64)\n                    finalize_allocation(memPtr_1, _1)\n                    mstore(memPtr_1, length)\n                    memPtr := memPtr_1\n                    calldatacopy(add(memPtr_1, 32), calldatasize(), add(array_allocation_size_array_string_dyn(length), /** @src 19:3022:3038  \"abi.encode(data)\" */ not(31)))\n                }\n                /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                function panic_error_0x32()\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                function storage_array_index_access_string__dyn(index) -> slot, offset\n                {\n                    if iszero(lt(index, sload(/** @src 19:2276:2281  \"types\" */ 0x10)))\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    { panic_error_0x32() }\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 19:2276:2281  \"types\" */ 0x10)\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    slot := add(12396694973890998440467380340983585058878106250672390494374587083972727727730, index)\n                    offset := /** @src -1:-1:-1 */ 0\n                }\n                /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                function storage_array_index_access_string__dyn_6576(index) -> slot, offset\n                {\n                    if iszero(lt(index, sload(/** @src 19:2970:2975  \"leafs\" */ 0x12)))\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    { panic_error_0x32() }\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 19:2970:2975  \"leafs\" */ 0x12)\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    slot := add(84827061063453624289975705683721713058963870421084015214609271099009937454148, index)\n                    offset := /** @src -1:-1:-1 */ 0\n                }\n                /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                function storage_array_index_access_string_storage_dyn(index) -> slot, offset\n                {\n                    if iszero(lt(index, sload(/** @src 19:3056:3062  \"inputs\" */ 0x13)))\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    { panic_error_0x32() }\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 19:3056:3062  \"inputs\" */ 0x13)\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    slot := add(46529144392117707452946260303848603952187628831689540306122340668716214558864, index)\n                    offset := /** @src -1:-1:-1 */ 0\n                }\n                /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                function storage_array_index_access_string__dyn_6582(index) -> slot, offset\n                {\n                    if iszero(lt(index, sload(/** @src 19:3409:3416  \"outputs\" */ 0x14)))\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    { panic_error_0x32() }\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 19:3409:3416  \"outputs\" */ 0x14)\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    slot := add(93369884277498597659590946175997448338802118867485977633968544981113634346220, index)\n                    offset := /** @src -1:-1:-1 */ 0\n                }\n                /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                function copy_literal_to_memory_421683f821a0574472445355be6d2b769119e8515f8376a1d7878523dfdecf7b() -> memPtr\n                {\n                    let memPtr_1 := mload(64)\n                    finalize_allocation_13477(memPtr_1)\n                    mstore(memPtr_1, 7)\n                    memPtr := memPtr_1\n                    mstore(add(memPtr_1, 32), \"address\")\n                }\n                function copy_literal_to_memory_78b9198c2298bca6916a2669592af279cda8160226cf57bc4580c40c0a8b1713() -> memPtr\n                {\n                    let memPtr_1 := mload(64)\n                    finalize_allocation_13477(memPtr_1)\n                    mstore(memPtr_1, 4)\n                    memPtr := memPtr_1\n                    mstore(add(memPtr_1, 32), \"uint\")\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                function convert_contract_Vm_to_address(value) -> converted\n                {\n                    converted := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ value, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ sub(shl(160, 1), 1))\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                function abi_decode_uint256_fromMemory(headStart, dataEnd) -> value0\n                {\n                    if slt(sub(dataEnd, headStart), 32)\n                    {\n                        /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                        revert(0, 0)\n                    }\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    value0 := mload(headStart)\n                }\n                function copy_memory_to_memory_with_cleanup(src, dst, length)\n                {\n                    let i := 0\n                    for { } lt(i, length) { i := add(i, 32) }\n                    {\n                        mstore(add(dst, i), mload(add(src, i)))\n                    }\n                    mstore(add(dst, length), 0)\n                }\n                function abi_encode_string_to_string(value, pos) -> end\n                {\n                    let length := mload(value)\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    mstore(pos, length)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    copy_memory_to_memory_with_cleanup(add(value, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 0x20), add(pos, 0x20), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length)\n                    end := add(add(/** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ pos, and(add(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 31), /** @src 19:3022:3038  \"abi.encode(data)\" */ not(31))), /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 0x20)\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                function abi_encode_string(headStart, value0) -> tail\n                {\n                    mstore(headStart, 32)\n                    tail := abi_encode_string_to_string(value0, add(headStart, 32))\n                }\n                function revert_forward()\n                {\n                    let pos := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ mload(64)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    returndatacopy(pos, 0, returndatasize())\n                    revert(pos, returndatasize())\n                }\n                function memory_array_index_access_bytes32_dyn(baseRef, index) -> addr\n                {\n                    if iszero(lt(index, mload(baseRef))) { panic_error_0x32() }\n                    addr := add(add(baseRef, shl(5, index)), 32)\n                }\n                function abi_decode_string_fromMemory(headStart, dataEnd) -> value0\n                {\n                    if slt(sub(dataEnd, headStart), 32)\n                    {\n                        /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                        revert(0, 0)\n                    }\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let offset := mload(headStart)\n                    let _1 := 0xffffffffffffffff\n                    if gt(offset, _1)\n                    {\n                        /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                        revert(0, 0)\n                    }\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let _2 := add(headStart, offset)\n                    if iszero(slt(add(_2, 0x1f), dataEnd))\n                    {\n                        /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let _3 := mload(_2)\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    if gt(_3, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _1)\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    { panic_error_0x41() }\n                    let memPtr := mload(64)\n                    finalize_allocation(memPtr, add(and(add(_3, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x1f), /** @src 19:3022:3038  \"abi.encode(data)\" */ not(31)), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 32))\n                    mstore(memPtr, _3)\n                    if gt(add(add(_2, _3), 32), dataEnd)\n                    {\n                        /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    copy_memory_to_memory_with_cleanup(add(_2, 32), add(memPtr, 32), _3)\n                    value0 := memPtr\n                }\n                function abi_encode_uint256(headStart, value0) -> tail\n                {\n                    tail := add(headStart, 32)\n                    mstore(headStart, value0)\n                }\n                function abi_encode_address(headStart, value0) -> tail\n                {\n                    tail := add(headStart, 32)\n                    mstore(headStart, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ value0, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ sub(shl(160, 1), 1)))\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                function abi_encode_array_bytes32_dyn(headStart, value0) -> tail\n                {\n                    let _1 := 32\n                    let tail_1 := add(headStart, 32)\n                    mstore(headStart, 32)\n                    let pos := tail_1\n                    let length := mload(value0)\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    mstore(tail_1, length)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    pos := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ add(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ headStart, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 64)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let srcPtr := add(value0, 32)\n                    let i := 0\n                    for { } lt(i, length) { i := add(i, 1) }\n                    {\n                        mstore(pos, mload(srcPtr))\n                        pos := add(pos, _1)\n                        srcPtr := add(srcPtr, _1)\n                    }\n                    tail := pos\n                }\n                function bytes_concat_bytes32(param) -> outPtr\n                {\n                    outPtr := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ mload(64)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    mstore(add(outPtr, 0x20), param)\n                    mstore(outPtr, 0x20)\n                    finalize_allocation_13477(outPtr)\n                }\n                function update_storage_value_bytes32_to_bytes32(slot, offset, value)\n                {\n                    let _1 := sload(slot)\n                    let shiftBits := shl(3, offset)\n                    sstore(slot, or(and(_1, not(shl(shiftBits, not(0)))), shl(shiftBits, value)))\n                }\n                function clean_up_bytearray_end_slots_string_storage_13481(len, startIndex)\n                {\n                    if gt(len, 31)\n                    {\n                        /// @src -1:-1:-1\n                        let _1 := 0\n                        /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 19:3488:3530  \"output = stringArrayToArrayString(outputs)\" */ 0x15)\n                        /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                        let _2 := 38878206584692966203415385907871375197469080758325516314230789535345649042549\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        let deleteStart := add(/** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _2, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shr(5, add(startIndex, 31)))\n                        if lt(startIndex, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 0x20)\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        {\n                            deleteStart := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _2\n                        }\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        let _3 := add(/** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _2, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shr(5, add(len, 31)))\n                        let start := deleteStart\n                        for { } lt(start, _3) { start := add(start, 1) }\n                        {\n                            sstore(start, /** @src -1:-1:-1 */ _1)\n                        }\n                    }\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n                {\n                    if gt(len, 31)\n                    {\n                        /// @src -1:-1:-1\n                        let _1 := 0\n                        /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ array)\n                        let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 0x20)\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        let deleteStart := add(data, shr(5, add(startIndex, 31)))\n                        if lt(startIndex, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 0x20)\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        { deleteStart := data }\n                        let _2 := add(data, shr(5, add(len, 31)))\n                        let start := deleteStart\n                        for { } lt(start, _2) { start := add(start, 1) }\n                        {\n                            sstore(start, /** @src -1:-1:-1 */ _1)\n                        }\n                    }\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n                {\n                    used := or(and(data, not(/** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ shr(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(3, len), not(0)))), shl(1, len))\n                }\n                function copy_byte_array_to_storage_from_string_to_string(src)\n                {\n                    let newLen := mload(src)\n                    if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n                    clean_up_bytearray_end_slots_string_storage_13481(extract_byte_array_length(sload(/** @src 19:3488:3530  \"output = stringArrayToArrayString(outputs)\" */ 0x15)), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ newLen)\n                    let srcOffset := 0\n                    let srcOffset_1 := 0x20\n                    srcOffset := 0x20\n                    switch gt(newLen, 31)\n                    case 1 {\n                        let loopEnd := and(newLen, /** @src 19:3022:3038  \"abi.encode(data)\" */ not(31))\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        let dstPtr := array_dataslot_string_storage_13482()\n                        let i := 0\n                        for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n                        {\n                            sstore(dstPtr, mload(add(src, srcOffset)))\n                            dstPtr := add(dstPtr, 1)\n                            srcOffset := add(srcOffset, srcOffset_1)\n                        }\n                        if lt(loopEnd, newLen)\n                        {\n                            let lastValue := mload(add(src, srcOffset))\n                            sstore(dstPtr, and(lastValue, not(/** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ shr(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ and(shl(3, newLen), 248), not(0)))))\n                        }\n                        sstore(/** @src 19:3488:3530  \"output = stringArrayToArrayString(outputs)\" */ 0x15, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(shl(1, newLen), 1))\n                    }\n                    default {\n                        let value := 0\n                        if newLen\n                        {\n                            value := mload(add(src, srcOffset))\n                        }\n                        sstore(/** @src 19:3488:3530  \"output = stringArrayToArrayString(outputs)\" */ 0x15, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n                    }\n                }\n                function update_storage_value_string_to_string(slot, offset, value)\n                {\n                    if offset\n                    {\n                        mstore(0, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ shl(224, 0x4e487b71))\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        mstore(4, 0)\n                        revert(0, 0x24)\n                    }\n                    let newLen := mload(value)\n                    if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n                    clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n                    let srcOffset := 0\n                    let srcOffset_1 := 0x20\n                    srcOffset := 0x20\n                    switch gt(newLen, 31)\n                    case 1 {\n                        let loopEnd := and(newLen, /** @src 19:3022:3038  \"abi.encode(data)\" */ not(31))\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        let dstPtr := array_dataslot_string_storage(slot)\n                        let i := 0\n                        for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n                        {\n                            sstore(dstPtr, mload(add(value, srcOffset)))\n                            dstPtr := add(dstPtr, 1)\n                            srcOffset := add(srcOffset, srcOffset_1)\n                        }\n                        if lt(loopEnd, newLen)\n                        {\n                            let lastValue := mload(add(value, srcOffset))\n                            sstore(dstPtr, and(lastValue, not(/** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ shr(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ and(shl(3, newLen), 248), not(0)))))\n                        }\n                        sstore(slot, add(shl(1, newLen), 1))\n                    }\n                    default {\n                        let value_1 := 0\n                        if newLen\n                        {\n                            value_1 := mload(add(value, srcOffset))\n                        }\n                        sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value_1, newLen))\n                    }\n                }\n                function extract_from_storage_value_offsett_contract_Merkle(slot_value) -> value\n                {\n                    value := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ and(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shr(24, slot_value), /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ sub(shl(160, 1), 1))\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                function abi_decode_array_bytes32_dyn_fromMemory(headStart, dataEnd) -> value0\n                {\n                    let _1 := 32\n                    if slt(sub(dataEnd, headStart), _1)\n                    {\n                        /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                        revert(0, 0)\n                    }\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let offset := mload(headStart)\n                    if gt(offset, 0xffffffffffffffff)\n                    {\n                        /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                        revert(0, 0)\n                    }\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let _2 := add(headStart, offset)\n                    if iszero(slt(add(_2, 0x1f), dataEnd))\n                    {\n                        /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let _3 := mload(_2)\n                    let _4 := array_allocation_size_array_string_dyn(_3)\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    let memPtr := mload(64)\n                    finalize_allocation(memPtr, _4)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let dst := memPtr\n                    mstore(memPtr, _3)\n                    dst := add(memPtr, _1)\n                    let srcEnd := add(add(_2, shl(5, _3)), _1)\n                    if gt(srcEnd, dataEnd)\n                    {\n                        /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let src := add(_2, _1)\n                    for { } lt(src, srcEnd) { src := add(src, _1) }\n                    {\n                        mstore(dst, mload(src))\n                        dst := add(dst, _1)\n                    }\n                    value0 := memPtr\n                }\n                function abi_encode_array_bytes32_dyn_storage(pos) -> end\n                {\n                    let length := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ sload(/** @src 19:2970:2975  \"leafs\" */ 0x12)\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    mstore(pos, length)\n                    let _1 := 0x20\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    pos := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ add(pos, 0x20)\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 19:2970:2975  \"leafs\" */ 0x12)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let srcPtr := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 84827061063453624289975705683721713058963870421084015214609271099009937454148\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    for { } lt(i, length) { i := add(i, 1) }\n                    {\n                        mstore(pos, sload(srcPtr))\n                        pos := add(pos, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _1)\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        srcPtr := add(srcPtr, 1)\n                    }\n                    end := pos\n                }\n                function abi_encode_array_bytes32_dyn_storage_uint256(headStart, value1) -> tail\n                {\n                    mstore(headStart, 64)\n                    tail := abi_encode_array_bytes32_dyn_storage(add(headStart, 64))\n                    mstore(add(headStart, 32), value1)\n                }\n                function abi_encode_array_bytes32_dyn_storage_6579(headStart) -> tail\n                {\n                    mstore(headStart, 32)\n                    tail := abi_encode_array_bytes32_dyn_storage(add(headStart, 32))\n                }\n                function extract_from_storage_value_dynamict_bytes32(slot_value, offset) -> value\n                {\n                    value := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ shr(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(3, offset), slot_value)\n                }\n                function copy_array_from_storage_to_memory_array_string__dyn() -> memPtr\n                {\n                    let length := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ sload(/** @src 19:3409:3416  \"outputs\" */ 0x14)\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    let _1 := array_allocation_size_array_string_dyn(length)\n                    let memPtr_1 := mload(64)\n                    finalize_allocation(memPtr_1, _1)\n                    mstore(memPtr_1, length)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    memPtr := memPtr_1\n                    let mpos := memPtr_1\n                    let _2 := 0x20\n                    mpos := add(memPtr_1, 0x20)\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 19:3409:3416  \"outputs\" */ 0x14)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let spos := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 93369884277498597659590946175997448338802118867485977633968544981113634346220\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    for { } lt(i, length) { i := add(i, 1) }\n                    {\n                        mstore(mpos, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ copy_array_from_storage_to_memory_string(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ spos))\n                        mpos := add(mpos, _2)\n                        spos := add(spos, 1)\n                    }\n                }\n                function abi_encode_string_memory_ptr(value, pos) -> end\n                {\n                    let length := mload(value)\n                    copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n                    end := add(pos, length)\n                }\n                function string_concat_string_string_storage(param) -> outPtr\n                {\n                    outPtr := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ mload(64)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let _1 := 0x20\n                    let length := mload(param)\n                    copy_memory_to_memory_with_cleanup(add(param, _1), add(outPtr, _1), length)\n                    let _2 := add(outPtr, length)\n                    let ret := /** @src -1:-1:-1 */ 0\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let slotValue := sload(/** @src 19:3585:3595  \"outputPath\" */ 0x0e)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let length_1 := extract_byte_array_length(slotValue)\n                    let _3 := 1\n                    switch and(slotValue, 1)\n                    case 0 {\n                        mstore(add(_2, _1), and(slotValue, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ not(255)))\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        ret := add(add(_2, mul(length_1, iszero(iszero(length_1)))), _1)\n                    }\n                    case 1 {\n                        /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 19:3585:3595  \"outputPath\" */ 0x0e)\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        let dataPos := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 84800337471693920904250232874319843718400766719524250287777680170677855896573\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        let i := /** @src -1:-1:-1 */ 0\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        for { } lt(i, length_1) { i := add(i, _1) }\n                        {\n                            mstore(add(add(_2, i), _1), sload(dataPos))\n                            dataPos := add(dataPos, _3)\n                        }\n                        ret := add(add(_2, length_1), _1)\n                    }\n                    let _4 := sub(ret, outPtr)\n                    mstore(outPtr, add(_4, /** @src 19:3022:3038  \"abi.encode(data)\" */ not(31)))\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    finalize_allocation(outPtr, _4)\n                }\n                function abi_encode_string_string_storage(headStart, value0) -> tail\n                {\n                    mstore(headStart, 64)\n                    let tail_1 := abi_encode_string_to_string(value0, add(headStart, 64))\n                    let _1 := 32\n                    mstore(add(headStart, _1), sub(tail_1, headStart))\n                    let ret := 0\n                    let slotValue := sload(/** @src 19:3488:3530  \"output = stringArrayToArrayString(outputs)\" */ 0x15)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let length := extract_byte_array_length(slotValue)\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    mstore(tail_1, length)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let _2 := 1\n                    switch and(slotValue, 1)\n                    case 0 {\n                        mstore(/** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ add(tail_1, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _1), and(slotValue, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ not(255)))\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        ret := add(add(/** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ tail_1, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(5, iszero(iszero(length)))), _1)\n                    }\n                    case 1 {\n                        /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                        mstore(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 0, /** @src 19:3488:3530  \"output = stringArrayToArrayString(outputs)\" */ 0x15)\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        let dataPos := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 38878206584692966203415385907871375197469080758325516314230789535345649042549\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        let i := 0\n                        for { } lt(i, length) { i := add(i, _1) }\n                        {\n                            mstore(add(add(/** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ tail_1, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ i), _1), sload(dataPos))\n                            dataPos := add(dataPos, _2)\n                        }\n                        ret := add(add(/** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ tail_1, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ i), _1)\n                    }\n                    tail := ret\n                }\n                function copy_literal_to_memory_37106a7f3a49ca912cf7a53b366425c214abe1e11f3ee05d4f454eaf1d97589e() -> memPtr\n                {\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    let memPtr_1 := mload(64)\n                    finalize_allocation_13477(memPtr_1)\n                    mstore(memPtr_1, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 31)\n                    memPtr := memPtr_1\n                    mstore(add(memPtr_1, 32), \"DONE: The output is found at %s\")\n                }\n                /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                function abi_encode_string_string(headStart, value0, value1) -> tail\n                {\n                    mstore(headStart, 64)\n                    let tail_1 := abi_encode_string_to_string(value0, add(headStart, 64))\n                    mstore(add(headStart, 32), sub(tail_1, headStart))\n                    tail := abi_encode_string_to_string(value1, tail_1)\n                }\n                /// @ast-id 13014 @src 10:6693:6843  \"function log(string memory p0, string memory p1) internal view {...\"\n                function fun_log(var_p0_mpos, var_p1_mpos)\n                {\n                    /// @src 10:6782:6835  \"abi.encodeWithSignature(\\\"log(string,string)\\\", p0, p1)\"\n                    let expr_13010_mpos := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ mload(64)\n                    /// @src 10:6782:6835  \"abi.encodeWithSignature(\\\"log(string,string)\\\", p0, p1)\"\n                    let _1 := add(expr_13010_mpos, 0x20)\n                    mstore(_1, shl(224, 0x4b5c4277))\n                    let _2 := sub(abi_encode_string_string(add(expr_13010_mpos, 36), var_p0_mpos, var_p1_mpos), expr_13010_mpos)\n                    mstore(expr_13010_mpos, add(_2, /** @src 19:3022:3038  \"abi.encode(data)\" */ not(31)))\n                    /// @src 10:6782:6835  \"abi.encodeWithSignature(\\\"log(string,string)\\\", p0, p1)\"\n                    finalize_allocation(expr_13010_mpos, _2)\n                    /// @src 10:392:551  \"assembly {...\"\n                    pop(staticcall(gas(), /** @src 10:131:173  \"0x000000000000000000636F6e736F6c652e6c6f67\" */ 0x636f6e736f6c652e6c6f67, /** @src 10:392:551  \"assembly {...\" */ _1, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ mload(/** @src 10:275:289  \"payload.length\" */ expr_13010_mpos), /** @src 10:392:551  \"assembly {...\" */ 0, 0))\n                }\n                /// @ast-id 43636 @src 20:240:421  \"function compareStrings(string memory a, string memory b) internal pure returns (bool) {...\"\n                function fun_compareStrings(var_a_mpos, var_b_mpos) -> var_\n                {\n                    /// @src 20:355:376  \"abi.encodePacked((a))\"\n                    let expr_43623_mpos := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ mload(64)\n                    /// @src 20:355:376  \"abi.encodePacked((a))\"\n                    let _1 := 0x20\n                    let _2 := add(expr_43623_mpos, _1)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let length := mload(var_a_mpos)\n                    copy_memory_to_memory_with_cleanup(add(var_a_mpos, /** @src 20:355:376  \"abi.encodePacked((a))\" */ _1), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _2, length)\n                    /// @src 20:355:376  \"abi.encodePacked((a))\"\n                    let _3 := sub(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(/** @src 20:355:376  \"abi.encodePacked((a))\" */ expr_43623_mpos, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length), /** @src 20:355:376  \"abi.encodePacked((a))\" */ expr_43623_mpos)\n                    mstore(expr_43623_mpos, _3)\n                    finalize_allocation(expr_43623_mpos, add(_3, _1))\n                    /// @src 20:345:377  \"keccak256(abi.encodePacked((a)))\"\n                    let expr := keccak256(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _2, mload(/** @src 20:345:377  \"keccak256(abi.encodePacked((a)))\" */ expr_43623_mpos))\n                    /// @src 20:391:412  \"abi.encodePacked((b))\"\n                    let expr_43630_mpos := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ mload(64)\n                    /// @src 20:391:412  \"abi.encodePacked((b))\"\n                    let _4 := add(expr_43630_mpos, /** @src 20:355:376  \"abi.encodePacked((a))\" */ _1)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let length_1 := mload(var_b_mpos)\n                    copy_memory_to_memory_with_cleanup(add(var_b_mpos, /** @src 20:355:376  \"abi.encodePacked((a))\" */ _1), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _4, length_1)\n                    /// @src 20:391:412  \"abi.encodePacked((b))\"\n                    let _5 := sub(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(/** @src 20:391:412  \"abi.encodePacked((b))\" */ expr_43630_mpos, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length_1), /** @src 20:391:412  \"abi.encodePacked((b))\" */ expr_43630_mpos)\n                    mstore(expr_43630_mpos, _5)\n                    finalize_allocation(expr_43630_mpos, add(_5, /** @src 20:355:376  \"abi.encodePacked((a))\" */ _1))\n                    /// @src 20:337:414  \"return (keccak256(abi.encodePacked((a))) == keccak256(abi.encodePacked((b))))\"\n                    var_ := /** @src 20:345:413  \"keccak256(abi.encodePacked((a))) == keccak256(abi.encodePacked((b)))\" */ eq(expr, /** @src 20:381:413  \"keccak256(abi.encodePacked((b)))\" */ keccak256(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _4, mload(/** @src 20:381:413  \"keccak256(abi.encodePacked((b)))\" */ expr_43630_mpos)))\n                }\n                /// @ast-id 43309 @src 19:1196:1368  \"function getValuesByIndex(uint256 i, uint256 j) internal pure returns (string memory) {...\"\n                function fun_getValuesByIndex(var_i, var_j) -> var_43291_mpos\n                {\n                    /// @src 19:1325:1339  \"vm.toString(i)\"\n                    let _1 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ mload(64)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let _2 := shl(225, 0x348051d7)\n                    /// @src 19:1325:1339  \"vm.toString(i)\"\n                    mstore(_1, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _2)\n                    mstore(/** @src 19:1325:1339  \"vm.toString(i)\" */ add(_1, 4), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ var_i)\n                    /// @src 19:1325:1339  \"vm.toString(i)\"\n                    let _3 := 0\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    let _4 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                    /// @src 19:1325:1339  \"vm.toString(i)\"\n                    let _5 := staticcall(gas(), /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _4, /** @src 19:1325:1339  \"vm.toString(i)\" */ _1, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 36, /** @src 19:1325:1339  \"vm.toString(i)\" */ _1, _3)\n                    if iszero(_5) { revert_forward() }\n                    let expr_43300_mpos := _3\n                    if _5\n                    {\n                        let _6 := returndatasize()\n                        returndatacopy(_1, _3, _6)\n                        finalize_allocation(_1, _6)\n                        expr_43300_mpos := abi_decode_string_fromMemory(_1, add(_1, _6))\n                    }\n                    /// @src 19:1346:1360  \"vm.toString(j)\"\n                    let _7 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ mload(64)\n                    /// @src 19:1346:1360  \"vm.toString(j)\"\n                    mstore(_7, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _2)\n                    mstore(/** @src 19:1346:1360  \"vm.toString(j)\" */ add(_7, /** @src 19:1325:1339  \"vm.toString(i)\" */ 4), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ var_j)\n                    /// @src 19:1346:1360  \"vm.toString(j)\"\n                    let _8 := staticcall(gas(), /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _4, /** @src 19:1346:1360  \"vm.toString(j)\" */ _7, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 36, /** @src 19:1346:1360  \"vm.toString(j)\" */ _7, /** @src 19:1325:1339  \"vm.toString(i)\" */ _3)\n                    /// @src 19:1346:1360  \"vm.toString(j)\"\n                    if iszero(_8) { revert_forward() }\n                    let expr_43305_mpos := /** @src 19:1325:1339  \"vm.toString(i)\" */ _3\n                    /// @src 19:1346:1360  \"vm.toString(j)\"\n                    if _8\n                    {\n                        let _9 := returndatasize()\n                        returndatacopy(_7, /** @src 19:1325:1339  \"vm.toString(i)\" */ _3, /** @src 19:1346:1360  \"vm.toString(j)\" */ _9)\n                        finalize_allocation(_7, _9)\n                        expr_43305_mpos := abi_decode_string_fromMemory(_7, add(_7, _9))\n                    }\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    let outPtr := mload(64)\n                    mstore(add(outPtr, 0x20), \".values.\")\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let length := mload(expr_43300_mpos)\n                    copy_memory_to_memory_with_cleanup(add(expr_43300_mpos, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 0x20), add(outPtr, 40), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length)\n                    let _10 := add(/** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ outPtr, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length)\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    mstore(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(_10, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 40), \".\")\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let length_1 := mload(expr_43305_mpos)\n                    copy_memory_to_memory_with_cleanup(add(expr_43305_mpos, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 0x20), add(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _10, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 41), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length_1)\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    let _11 := sub(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(_10, length_1), /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ outPtr)\n                    mstore(outPtr, add(_11, 9))\n                    finalize_allocation(outPtr, add(_11, 41))\n                    /// @src 19:1292:1361  \"return string.concat(\\\".values.\\\", vm.toString(i), \\\".\\\", vm.toString(j))\"\n                    var_43291_mpos := outPtr\n                }\n                /// @ast-id 3901 @src 4:1817:1967  \"function readString(string memory json, string memory key) internal pure returns (string memory) {...\"\n                function fun_readString(var_json_3887_mpos, var_key_mpos) -> var_3892_mpos\n                {\n                    /// @src 4:1931:1960  \"vm.parseJsonString(json, key)\"\n                    let _1 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ mload(64)\n                    /// @src 4:1931:1960  \"vm.parseJsonString(json, key)\"\n                    mstore(_1, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(227, 0x09389f59))\n                    /// @src 4:1931:1960  \"vm.parseJsonString(json, key)\"\n                    let _2 := staticcall(gas(), /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 4:1931:1960  \"vm.parseJsonString(json, key)\" */ _1, sub(abi_encode_string_string(add(_1, 4), var_json_3887_mpos, var_key_mpos), _1), _1, 0)\n                    if iszero(_2) { revert_forward() }\n                    let expr_3898_mpos := 0\n                    if _2\n                    {\n                        let _3 := returndatasize()\n                        returndatacopy(_1, 0, _3)\n                        finalize_allocation(_1, _3)\n                        expr_3898_mpos := abi_decode_string_fromMemory(_1, add(_1, _3))\n                    }\n                    /// @src 4:1924:1960  \"return vm.parseJsonString(json, key)\"\n                    var_3892_mpos := expr_3898_mpos\n                }\n                /// @ast-id 3934 @src 4:2141:2287  \"function readAddress(string memory json, string memory key) internal pure returns (address) {...\"\n                function fun_readAddress(var_json_mpos, var_key_3922_mpos) -> var\n                {\n                    /// @src 4:2250:2280  \"vm.parseJsonAddress(json, key)\"\n                    let _1 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ mload(64)\n                    /// @src 4:2250:2280  \"vm.parseJsonAddress(json, key)\"\n                    mstore(_1, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(224, 0x1e19e657))\n                    /// @src 4:2250:2280  \"vm.parseJsonAddress(json, key)\"\n                    let _2 := staticcall(gas(), /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 4:2250:2280  \"vm.parseJsonAddress(json, key)\" */ _1, sub(abi_encode_string_string(add(_1, 4), var_json_mpos, var_key_3922_mpos), _1), _1, 32)\n                    if iszero(_2) { revert_forward() }\n                    let expr := /** @src -1:-1:-1 */ 0\n                    /// @src 4:2250:2280  \"vm.parseJsonAddress(json, key)\"\n                    if _2\n                    {\n                        let _3 := 32\n                        if gt(32, returndatasize()) { _3 := returndatasize() }\n                        finalize_allocation(_1, _3)\n                        /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                        if slt(sub(/** @src 4:2250:2280  \"vm.parseJsonAddress(json, key)\" */ add(_1, _3), /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _1), /** @src 4:2250:2280  \"vm.parseJsonAddress(json, key)\" */ 32)\n                        /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                        {\n                            revert(/** @src -1:-1:-1 */ expr, expr)\n                        }\n                        /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                        let value := mload(_1)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                        {\n                            revert(/** @src -1:-1:-1 */ expr, expr)\n                        }\n                        /// @src 4:2250:2280  \"vm.parseJsonAddress(json, key)\"\n                        expr := value\n                    }\n                    /// @src 4:2243:2280  \"return vm.parseJsonAddress(json, key)\"\n                    var := expr\n                }\n                /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                function panic_error_0x11()\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n                function checked_sub_uint256(x) -> diff\n                {\n                    diff := add(x, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ not(0))\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    if gt(diff, x) { panic_error_0x11() }\n                }\n                /// @ast-id 43654 @src 20:501:637  \"function ltrim64(bytes memory _bytes) internal pure returns (bytes memory) {...\"\n                function fun_ltrim64(var_bytes_mpos) -> var_43642_mpos\n                {\n                    /// @src 20:611:624  \"_bytes.length\"\n                    let expr := /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ mload(/** @src 20:611:624  \"_bytes.length\" */ var_bytes_mpos)\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    let _1 := not(63)\n                    let diff := add(expr, _1)\n                    if gt(diff, expr) { panic_error_0x11() }\n                    /// @src 20:992:1042  \"require(_length + 31 >= _length, \\\"slice_overflow\\\")\"\n                    require_helper_stringliteral_5d3d(/** @src 20:1000:1023  \"_length + 31 >= _length\" */ iszero(lt(/** @src 20:1000:1012  \"_length + 31\" */ checked_add_uint256(diff), /** @src 20:1000:1023  \"_length + 31 >= _length\" */ diff)))\n                    /// @src 20:1060:1073  \"_bytes.length\"\n                    let expr_1 := /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ mload(/** @src 20:1060:1073  \"_bytes.length\" */ var_bytes_mpos)\n                    /// @src 20:1052:1115  \"require(_bytes.length >= _start + _length, \\\"slice_outOfBounds\\\")\"\n                    require_helper_stringliteral_cca2(/** @src 20:1060:1093  \"_bytes.length >= _start + _length\" */ iszero(lt(expr_1, /** @src 20:1077:1093  \"_start + _length\" */ checked_add_uint256_6633(diff))))\n                    /// @src 20:1126:1148  \"bytes memory tempBytes\"\n                    let var_tempBytes_mpos := /** @src -1:-1:-1 */ 0\n                    /// @src 20:1159:1982  \"assembly {...\"\n                    switch iszero(diff)\n                    case 0 {\n                        var_tempBytes_mpos := mload(/** @src 20:607:609  \"64\" */ 0x40)\n                        /// @src 20:1159:1982  \"assembly {...\"\n                        let usr$lengthmod := and(diff, /** @src 20:1010:1012  \"31\" */ 0x1f)\n                        /// @src 20:1159:1982  \"assembly {...\"\n                        let _2 := shl(5, iszero(usr$lengthmod))\n                        let usr$mc := add(add(var_tempBytes_mpos, usr$lengthmod), _2)\n                        let usr$end := add(add(usr$mc, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ expr), _1)\n                        /// @src 20:1159:1982  \"assembly {...\"\n                        let usr$cc := add(add(add(var_bytes_mpos, usr$lengthmod), _2), /** @src 20:607:609  \"64\" */ 0x40)\n                        /// @src 20:1159:1982  \"assembly {...\"\n                        for { }\n                        lt(usr$mc, usr$end)\n                        {\n                            let _3 := 0x20\n                            usr$mc := add(usr$mc, _3)\n                            usr$cc := add(usr$cc, _3)\n                        }\n                        { mstore(usr$mc, mload(usr$cc)) }\n                        mstore(var_tempBytes_mpos, diff)\n                        mstore(/** @src 20:607:609  \"64\" */ 0x40, /** @src 20:1159:1982  \"assembly {...\" */ and(add(usr$mc, /** @src 20:1010:1012  \"31\" */ 0x1f), /** @src 19:3022:3038  \"abi.encode(data)\" */ not(31)))\n                    }\n                    default /// @src 20:1159:1982  \"assembly {...\"\n                    {\n                        var_tempBytes_mpos := mload(/** @src 20:607:609  \"64\" */ 0x40)\n                        /// @src 20:1159:1982  \"assembly {...\"\n                        mstore(var_tempBytes_mpos, /** @src -1:-1:-1 */ 0)\n                        /// @src 20:1159:1982  \"assembly {...\"\n                        mstore(/** @src 20:607:609  \"64\" */ 0x40, /** @src 20:1159:1982  \"assembly {...\" */ add(var_tempBytes_mpos, 0x20))\n                    }\n                    /// @src 20:586:630  \"return slice(_bytes, 64, _bytes.length - 64)\"\n                    var_43642_mpos := var_tempBytes_mpos\n                }\n                /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                function copy_literal_to_memory_9f50164828976b6baa479ea39c718c745bbc0d2521b67dfde8474cbdc9711057() -> memPtr\n                {\n                    let memPtr_1 := mload(64)\n                    finalize_allocation_13477(memPtr_1)\n                    mstore(memPtr_1, 1)\n                    memPtr := memPtr_1\n                    mstore(add(memPtr_1, 32), \"[\")\n                }\n                function abi_encode_stringliteral_6e9f(pos)\n                { mstore(pos, shl(249, 17)) }\n                function string_concat_string_stringliteral_6e9f_string_stringliteral_6e9f(param, param_1) -> outPtr\n                {\n                    outPtr := mload(64)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let length := mload(param)\n                    copy_memory_to_memory_with_cleanup(add(param, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 0x20), add(outPtr, 0x20), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length)\n                    let _1 := add(/** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ outPtr, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length)\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    let _2 := shl(249, 17)\n                    mstore(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(_1, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 0x20), _2)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let length_1 := mload(param_1)\n                    copy_memory_to_memory_with_cleanup(add(param_1, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 0x20), add(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _1, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 33), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length_1)\n                    let _3 := add(_1, length_1)\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    mstore(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(_3, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 33), _2)\n                    let _4 := sub(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _3, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ outPtr)\n                    mstore(outPtr, add(_4, 2))\n                    finalize_allocation(outPtr, add(_4, 34))\n                }\n                function abi_encode_stringliteral(pos)\n                { mstore(pos, shl(242, 2187)) }\n                function string_concat_string_stringliteral_6e9f_string_stringliteral(param, param_1) -> outPtr\n                {\n                    outPtr := mload(64)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let length := mload(param)\n                    copy_memory_to_memory_with_cleanup(add(param, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 0x20), add(outPtr, 0x20), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length)\n                    let _1 := add(/** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ outPtr, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length)\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    mstore(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(_1, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 0x20), shl(249, 17))\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let length_1 := mload(param_1)\n                    copy_memory_to_memory_with_cleanup(add(param_1, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 0x20), add(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _1, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 33), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length_1)\n                    let _2 := add(_1, length_1)\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    mstore(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(_2, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 33), shl(242, 2187))\n                    let _3 := sub(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _2, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ outPtr)\n                    mstore(outPtr, add(_3, 3))\n                    finalize_allocation(outPtr, add(_3, 35))\n                }\n                function string_concat_string_stringliteral_b36b(param) -> outPtr\n                {\n                    outPtr := mload(64)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let length := mload(param)\n                    copy_memory_to_memory_with_cleanup(add(param, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 0x20), add(outPtr, 0x20), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length)\n                    let _1 := add(/** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ outPtr, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length)\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    mstore(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(_1, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 0x20), \"]\")\n                    let _2 := sub(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _1, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ outPtr)\n                    mstore(outPtr, add(_2, 1))\n                    finalize_allocation(outPtr, add(_2, 33))\n                }\n                /// @ast-id 43761 @src 20:2083:2541  \"function stringArrayToString(string[] memory array) internal pure returns (string memory) {...\"\n                function fun_stringArrayToString(var_array_43696_mpos) -> var_43699_mpos\n                {\n                    /// @src 20:2183:2209  \"string memory result = \\\"[\\\"\"\n                    let var_result_43702_mpos := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ copy_literal_to_memory_9f50164828976b6baa479ea39c718c745bbc0d2521b67dfde8474cbdc9711057()\n                    /// @src 20:2225:2238  \"uint256 i = 0\"\n                    let var_i := /** @src 20:2237:2238  \"0\" */ 0x00\n                    /// @src 20:2220:2491  \"for (uint256 i = 0; i < array.length; i++) {...\"\n                    for { }\n                    /** @src 20:2301:2302  \"1\" */ 0x01\n                    /// @src 20:2225:2238  \"uint256 i = 0\"\n                    {\n                        /// @src 20:2258:2261  \"i++\"\n                        var_i := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ add(/** @src 20:2258:2261  \"i++\" */ var_i, /** @src 20:2301:2302  \"1\" */ 0x01)\n                    }\n                    /// @src 20:2258:2261  \"i++\"\n                    {\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        let _1 := mload(/** @src 20:2244:2256  \"array.length\" */ var_array_43696_mpos)\n                        /// @src 20:2240:2256  \"i < array.length\"\n                        if iszero(lt(var_i, _1)) { break }\n                        /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                        let diff := add(_1, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ not(0))\n                        /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                        if gt(diff, _1) { panic_error_0x11() }\n                        /// @src 20:2277:2481  \"if (i != array.length - 1) {...\"\n                        switch /** @src 20:2281:2302  \"i != array.length - 1\" */ iszero(eq(var_i, diff))\n                        case /** @src 20:2277:2481  \"if (i != array.length - 1) {...\" */ 0 {\n                            /// @src 20:2414:2466  \"result = string.concat(result, \\\"\\\\\\\"\\\", array[i], \\\"\\\\\\\"\\\")\"\n                            var_result_43702_mpos := /** @src 20:2423:2466  \"string.concat(result, \\\"\\\\\\\"\\\", array[i], \\\"\\\\\\\"\\\")\" */ string_concat_string_stringliteral_6e9f_string_stringliteral_6e9f(var_result_43702_mpos, /** @src 20:2451:2459  \"array[i]\" */ mload(memory_array_index_access_bytes32_dyn(var_array_43696_mpos, var_i)))\n                        }\n                        default /// @src 20:2277:2481  \"if (i != array.length - 1) {...\"\n                        {\n                            /// @src 20:2322:2375  \"result = string.concat(result, \\\"\\\\\\\"\\\", array[i], \\\"\\\\\\\",\\\")\"\n                            var_result_43702_mpos := /** @src 20:2331:2375  \"string.concat(result, \\\"\\\\\\\"\\\", array[i], \\\"\\\\\\\",\\\")\" */ string_concat_string_stringliteral_6e9f_string_stringliteral(var_result_43702_mpos, /** @src 20:2359:2367  \"array[i]\" */ mload(memory_array_index_access_bytes32_dyn(var_array_43696_mpos, var_i)))\n                        }\n                    }\n                    /// @src 20:2501:2534  \"return string.concat(result, \\\"]\\\")\"\n                    var_43699_mpos := /** @src 20:2508:2534  \"string.concat(result, \\\"]\\\")\" */ string_concat_string_stringliteral_b36b(var_result_43702_mpos)\n                }\n                /// @ast-id 43902 @src 20:3164:3650  \"function bytes32ArrayToString(bytes32[] memory array) internal pure returns (string memory) {...\"\n                function fun_bytes32ArrayToString(var_array_43831_mpos) -> var_mpos\n                {\n                    /// @src 20:3266:3292  \"string memory result = \\\"[\\\"\"\n                    let var_result_mpos := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ copy_literal_to_memory_9f50164828976b6baa479ea39c718c745bbc0d2521b67dfde8474cbdc9711057()\n                    /// @src 20:3308:3321  \"uint256 i = 0\"\n                    let var_i := /** @src 20:3320:3321  \"0\" */ 0x00\n                    /// @src 20:3303:3600  \"for (uint256 i = 0; i < array.length; i++) {...\"\n                    for { }\n                    /** @src 20:3384:3385  \"1\" */ 0x01\n                    /// @src 20:3308:3321  \"uint256 i = 0\"\n                    {\n                        /// @src 20:3341:3344  \"i++\"\n                        var_i := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ add(/** @src 20:3341:3344  \"i++\" */ var_i, /** @src 20:3384:3385  \"1\" */ 0x01)\n                    }\n                    /// @src 20:3341:3344  \"i++\"\n                    {\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        let _1 := mload(/** @src 20:3327:3339  \"array.length\" */ var_array_43831_mpos)\n                        /// @src 20:3323:3339  \"i < array.length\"\n                        if iszero(lt(var_i, _1)) { break }\n                        /// @src 20:3360:3590  \"if (i != array.length - 1) {...\"\n                        switch /** @src 20:3364:3385  \"i != array.length - 1\" */ iszero(eq(var_i, /** @src 20:3369:3385  \"array.length - 1\" */ checked_sub_uint256(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _1)))\n                        case /** @src 20:3360:3590  \"if (i != array.length - 1) {...\" */ 0 {\n                            /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                            let _2 := mload(/** @src 20:3559:3567  \"array[i]\" */ memory_array_index_access_bytes32_dyn(var_array_43831_mpos, var_i))\n                            /// @src 20:3547:3568  \"vm.toString(array[i])\"\n                            let _3 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ mload(64)\n                            /// @src 20:3547:3568  \"vm.toString(array[i])\"\n                            mstore(_3, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(227, 0x1623433d))\n                            /// @src 20:3547:3568  \"vm.toString(array[i])\"\n                            let _4 := staticcall(gas(), /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 20:3547:3568  \"vm.toString(array[i])\" */ _3, sub(abi_encode_uint256(add(_3, 4), _2), _3), _3, /** @src 20:3320:3321  \"0\" */ 0x00)\n                            /// @src 20:3547:3568  \"vm.toString(array[i])\"\n                            if iszero(_4) { revert_forward() }\n                            let expr_mpos := /** @src 20:3320:3321  \"0\" */ 0x00\n                            /// @src 20:3547:3568  \"vm.toString(array[i])\"\n                            if _4\n                            {\n                                let _5 := returndatasize()\n                                returndatacopy(_3, /** @src 20:3320:3321  \"0\" */ expr_mpos, /** @src 20:3547:3568  \"vm.toString(array[i])\" */ _5)\n                                finalize_allocation(_3, _5)\n                                expr_mpos := abi_decode_string_fromMemory(_3, add(_3, _5))\n                            }\n                            /// @src 20:3510:3575  \"result = string.concat(result, \\\"\\\\\\\"\\\", vm.toString(array[i]), \\\"\\\\\\\"\\\")\"\n                            var_result_mpos := /** @src 20:3519:3575  \"string.concat(result, \\\"\\\\\\\"\\\", vm.toString(array[i]), \\\"\\\\\\\"\\\")\" */ string_concat_string_stringliteral_6e9f_string_stringliteral_6e9f(var_result_mpos, expr_mpos)\n                        }\n                        default /// @src 20:3360:3590  \"if (i != array.length - 1) {...\"\n                        {\n                            /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                            let _6 := mload(/** @src 20:3454:3462  \"array[i]\" */ memory_array_index_access_bytes32_dyn(var_array_43831_mpos, var_i))\n                            /// @src 20:3442:3463  \"vm.toString(array[i])\"\n                            let _7 := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ mload(64)\n                            /// @src 20:3442:3463  \"vm.toString(array[i])\"\n                            mstore(_7, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(227, 0x1623433d))\n                            /// @src 20:3442:3463  \"vm.toString(array[i])\"\n                            let _8 := staticcall(gas(), /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 20:3442:3463  \"vm.toString(array[i])\" */ _7, sub(abi_encode_uint256(add(_7, 4), _6), _7), _7, /** @src 20:3320:3321  \"0\" */ 0x00)\n                            /// @src 20:3442:3463  \"vm.toString(array[i])\"\n                            if iszero(_8) { revert_forward() }\n                            let expr_43868_mpos := /** @src 20:3320:3321  \"0\" */ 0x00\n                            /// @src 20:3442:3463  \"vm.toString(array[i])\"\n                            if _8\n                            {\n                                let _9 := returndatasize()\n                                returndatacopy(_7, /** @src 20:3320:3321  \"0\" */ expr_43868_mpos, /** @src 20:3442:3463  \"vm.toString(array[i])\" */ _9)\n                                finalize_allocation(_7, _9)\n                                expr_43868_mpos := abi_decode_string_fromMemory(_7, add(_7, _9))\n                            }\n                            /// @src 20:3405:3471  \"result = string.concat(result, \\\"\\\\\\\"\\\", vm.toString(array[i]), \\\"\\\\\\\",\\\")\"\n                            var_result_mpos := /** @src 20:3414:3471  \"string.concat(result, \\\"\\\\\\\"\\\", vm.toString(array[i]), \\\"\\\\\\\",\\\")\" */ string_concat_string_stringliteral_6e9f_string_stringliteral(var_result_mpos, expr_43868_mpos)\n                        }\n                    }\n                    /// @src 20:3610:3643  \"return string.concat(result, \\\"]\\\")\"\n                    var_mpos := /** @src 20:3617:3643  \"string.concat(result, \\\"]\\\")\" */ string_concat_string_stringliteral_b36b(var_result_mpos)\n                }\n                /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                function abi_encode_stringliteral_3e7a(pos)\n                { mstore(pos, \",\") }\n                function abi_encode_stringliteral_58ce(pos)\n                {\n                    mstore(pos, shl(193, 0x113937b7ba111d11))\n                }\n                function abi_encode_stringliteral_25c0(pos)\n                {\n                    mstore(pos, shl(193, 0x113632b0b3111d11))\n                }\n                function abi_encode_stringliteral_8e2f(pos)\n                { mstore(pos, \"}\") }\n                function string_concat_stringliteral_a91e_stringliteral_ad4b_string_stringliteral_3e7a_stringliteral_ebb8_string_stringliteral_3e7a_stringliteral_58ce_string_stringliteral_stringliteral_25c0_string_stringliteral_6e9f_stringliteral_8e2f(param, param_1, param_2, param_3) -> outPtr\n                {\n                    outPtr := mload(64)\n                    mstore(add(outPtr, 0x20), \"{\")\n                    mstore(add(outPtr, 33), shl(185, 0x1134b7383aba39911d))\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let length := mload(param)\n                    copy_memory_to_memory_with_cleanup(add(param, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 0x20), add(outPtr, 42), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length)\n                    let _1 := add(/** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ outPtr, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length)\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    mstore(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(_1, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 42), \",\")\n                    mstore(add(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _1, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 43), shl(193, 0x11383937b7b3111d))\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let length_1 := mload(param_1)\n                    copy_memory_to_memory_with_cleanup(add(param_1, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 0x20), add(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _1, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 51), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length_1)\n                    let _2 := add(_1, length_1)\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    abi_encode_stringliteral_3e7a(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(_2, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 51))\n                    abi_encode_stringliteral_58ce(add(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _2, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 52))\n                    let pos := abi_encode_string_memory_ptr(param_2, add(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _2, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 60))\n                    abi_encode_stringliteral(pos)\n                    abi_encode_stringliteral_25c0(add(pos, 2))\n                    let pos_1 := abi_encode_string_memory_ptr(param_3, add(pos, 10))\n                    abi_encode_stringliteral_6e9f(pos_1)\n                    abi_encode_stringliteral_8e2f(add(pos_1, 1))\n                    let _3 := sub(pos_1, outPtr)\n                    mstore(outPtr, add(_3, not(29)))\n                    finalize_allocation(outPtr, add(_3, 2))\n                }\n                function string_concat_string_string_stringliteral_3e7a(param, param_1) -> outPtr\n                {\n                    outPtr := mload(64)\n                    /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                    let length := mload(param)\n                    copy_memory_to_memory_with_cleanup(add(param, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 0x20), add(outPtr, 0x20), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length)\n                    let _1 := add(/** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ outPtr, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length)\n                    let length_1 := mload(param_1)\n                    copy_memory_to_memory_with_cleanup(add(param_1, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 0x20), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(_1, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 0x20), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length_1)\n                    let _2 := add(_1, length_1)\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    mstore(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(_2, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ 0x20), \",\")\n                    let _3 := sub(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _2, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ outPtr)\n                    mstore(outPtr, add(_3, 1))\n                    finalize_allocation(outPtr, add(_3, 33))\n                }\n                /// @ast-id 43827 @src 20:2651:3094  \"function stringArrayToArrayString(string[] memory array) internal pure returns (string memory) {...\"\n                function fun_stringArrayToArrayString(var_array_mpos) -> var_43768_mpos\n                {\n                    /// @src 20:2756:2782  \"string memory result = \\\"[\\\"\"\n                    let var_result_43771_mpos := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ copy_literal_to_memory_9f50164828976b6baa479ea39c718c745bbc0d2521b67dfde8474cbdc9711057()\n                    /// @src 20:2798:2811  \"uint256 i = 0\"\n                    let var_i := /** @src 20:2810:2811  \"0\" */ 0x00\n                    /// @src 20:2793:3044  \"for (uint256 i = 0; i < array.length; i++) {...\"\n                    for { }\n                    /** @src 20:2874:2875  \"1\" */ 0x01\n                    /// @src 20:2798:2811  \"uint256 i = 0\"\n                    {\n                        /// @src 20:2831:2834  \"i++\"\n                        var_i := /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ add(/** @src 20:2831:2834  \"i++\" */ var_i, /** @src 20:2874:2875  \"1\" */ 0x01)\n                    }\n                    /// @src 20:2831:2834  \"i++\"\n                    {\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        let _1 := mload(/** @src 20:2817:2829  \"array.length\" */ var_array_mpos)\n                        /// @src 20:2813:2829  \"i < array.length\"\n                        if iszero(lt(var_i, _1)) { break }\n                        /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                        let diff := add(_1, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ not(0))\n                        /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                        if gt(diff, _1) { panic_error_0x11() }\n                        /// @src 20:2850:3034  \"if (i != array.length - 1) {...\"\n                        switch /** @src 20:2854:2875  \"i != array.length - 1\" */ iszero(eq(var_i, diff))\n                        case /** @src 20:2850:3034  \"if (i != array.length - 1) {...\" */ 0 {\n                            /// @src 20:3010:3018  \"array[i]\"\n                            let _2 := mload(memory_array_index_access_bytes32_dyn(var_array_mpos, var_i))\n                            /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                            let outPtr := mload(64)\n                            let _3 := 0x20\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            let length := mload(var_result_43771_mpos)\n                            copy_memory_to_memory_with_cleanup(add(var_result_43771_mpos, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _3), add(outPtr, _3), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length)\n                            let _4 := add(/** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ outPtr, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length)\n                            let length_1 := mload(_2)\n                            copy_memory_to_memory_with_cleanup(add(_2, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _3), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(_4, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ _3), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ length_1)\n                            /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                            let _5 := sub(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(_4, length_1), /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ outPtr)\n                            mstore(outPtr, _5)\n                            finalize_allocation(outPtr, add(_5, _3))\n                            /// @src 20:2979:3019  \"result = string.concat(result, array[i])\"\n                            var_result_43771_mpos := outPtr\n                        }\n                        default /// @src 20:2850:3034  \"if (i != array.length - 1) {...\"\n                        {\n                            /// @src 20:2895:2940  \"result = string.concat(result, array[i], \\\",\\\")\"\n                            var_result_43771_mpos := /** @src 20:2904:2940  \"string.concat(result, array[i], \\\",\\\")\" */ string_concat_string_string_stringliteral_3e7a(var_result_43771_mpos, /** @src 20:2926:2934  \"array[i]\" */ mload(memory_array_index_access_bytes32_dyn(var_array_mpos, var_i)))\n                        }\n                    }\n                    /// @src 20:3054:3087  \"return string.concat(result, \\\"]\\\")\"\n                    var_43768_mpos := /** @src 20:3061:3087  \"string.concat(result, \\\"]\\\")\" */ string_concat_string_stringliteral_b36b(var_result_43771_mpos)\n                }\n                /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                function checked_add_uint256(x) -> sum\n                {\n                    sum := add(x, /** @src 20:1010:1012  \"31\" */ 0x1f)\n                    /// @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\"\n                    if gt(x, sum) { panic_error_0x11() }\n                }\n                function checked_add_uint256_6633(y) -> sum\n                {\n                    sum := add(/** @src 20:607:609  \"64\" */ 0x40, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ y)\n                    if gt(/** @src 20:607:609  \"64\" */ 0x40, /** @src 19:504:3682  \"contract MerkleScript is Script, ScriptHelper {...\" */ sum) { panic_error_0x11() }\n                }\n                function require_helper_stringliteral_5d3d(condition)\n                {\n                    if iszero(condition)\n                    {\n                        let memPtr := mload(64)\n                        mstore(memPtr, shl(229, 4594637))\n                        mstore(add(memPtr, 4), 32)\n                        mstore(add(memPtr, 36), 14)\n                        mstore(add(memPtr, 68), \"slice_overflow\")\n                        revert(memPtr, 100)\n                    }\n                }\n                function require_helper_stringliteral_cca2(condition)\n                {\n                    if iszero(condition)\n                    {\n                        let memPtr := mload(64)\n                        mstore(memPtr, shl(229, 4594637))\n                        mstore(add(memPtr, 4), 32)\n                        mstore(add(memPtr, 36), 17)\n                        mstore(add(memPtr, 68), \"slice_outOfBounds\")\n                        revert(memPtr, 100)\n                    }\n                }\n            }\n            data \".metadata\" hex\"a164736f6c6343000818000a\"\n        }\n        /// @use-src 21:\"lib/murky/src/Merkle.sol\", 22:\"lib/murky/src/common/MurkyBase.sol\"\n        object \"Merkle_43923\" {\n            code {\n                {\n                    /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                    let _1 := memoryguard(0x80)\n                    mstore(64, _1)\n                    if callvalue() { revert(0, 0) }\n                    let _2 := datasize(\"Merkle_43923_deployed\")\n                    codecopy(_1, dataoffset(\"Merkle_43923_deployed\"), _2)\n                    return(_1, _2)\n                }\n            }\n            /// @use-src 21:\"lib/murky/src/Merkle.sol\", 22:\"lib/murky/src/common/MurkyBase.sol\"\n            object \"Merkle_43923_deployed\" {\n                code {\n                    {\n                        /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                        mstore(64, 128)\n                        if iszero(lt(calldatasize(), 4))\n                        {\n                            let _1 := 0\n                            switch shr(224, calldataload(_1))\n                            case 0x2e08d602 {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_1, _1) }\n                                let offset := calldataload(4)\n                                if gt(offset, 0xffffffffffffffff) { revert(_1, _1) }\n                                let var_data_mpos := abi_decode_array_bytes32_dyn(add(4, offset), calldatasize())\n                                /// @src 22:1061:1062  \"1\"\n                                let _2 := 0x01\n                                /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                                if iszero(/** @src 22:1047:1062  \"data.length > 1\" */ gt(/** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ mload(/** @src 22:1047:1058  \"data.length\" */ var_data_mpos), /** @src 22:1061:1062  \"1\" */ 0x01))\n                                /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                                {\n                                    let memPtr := mload(64)\n                                    mstore(memPtr, shl(229, 4594637))\n                                    mstore(add(memPtr, 4), 32)\n                                    mstore(add(memPtr, 36), 35)\n                                    mstore(add(memPtr, 68), \"won't generate root for single l\")\n                                    mstore(add(memPtr, 100), \"eaf\")\n                                    revert(memPtr, 132)\n                                }\n                                /// @src 22:1112:1183  \"while (data.length > 1) {...\"\n                                for { }\n                                /** @src 22:1061:1062  \"1\" */ _2\n                                /// @src 22:1112:1183  \"while (data.length > 1) {...\"\n                                { }\n                                {\n                                    /// @src 22:1119:1134  \"data.length > 1\"\n                                    if iszero(gt(/** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ mload(/** @src 22:1119:1130  \"data.length\" */ var_data_mpos), /** @src 22:1061:1062  \"1\" */ _2))\n                                    /// @src 22:1119:1134  \"data.length > 1\"\n                                    { break }\n                                    /// @src 22:1150:1172  \"data = hashLevel(data)\"\n                                    var_data_mpos := /** @src 22:1157:1172  \"hashLevel(data)\" */ fun_hashLevel(var_data_mpos)\n                                }\n                                /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                                let _3 := mload(/** @src 22:1199:1206  \"data[0]\" */ memory_array_index_access_bytes32_dyn_2729(var_data_mpos))\n                                /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                                let memPos := mload(64)\n                                return(memPos, sub(abi_encode_bytes32(memPos, _3), memPos))\n                            }\n                            case 0x58161a42 { external_fun_verifyProof() }\n                            case 0xb8616195 { external_fun_getProof() }\n                            case 0xcf06c7b7 {\n                                external_fun_log2ceilBitMagic()\n                            }\n                            case 0xdd1d2599 { external_fun_hashLeafPairs() }\n                            case 0xe27d5153 { external_fun_log2ceil() }\n                        }\n                        revert(0, 0)\n                    }\n                    function panic_error_0x41()\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    function allocate_memory(size) -> memPtr\n                    {\n                        memPtr := mload(64)\n                        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                        mstore(64, newFreePtr)\n                    }\n                    function array_allocation_size_array_bytes32_dyn(length) -> size\n                    {\n                        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n                        size := add(shl(5, length), 0x20)\n                    }\n                    function abi_decode_array_bytes32_dyn(offset, end) -> array\n                    {\n                        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                        let _1 := calldataload(offset)\n                        let _2 := 0x20\n                        let dst := allocate_memory(array_allocation_size_array_bytes32_dyn(_1))\n                        let dst_1 := dst\n                        mstore(dst, _1)\n                        dst := add(dst, 0x20)\n                        let srcEnd := add(add(offset, shl(5, _1)), 0x20)\n                        if gt(srcEnd, end)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                        let src := add(offset, 0x20)\n                        for { } lt(src, srcEnd) { src := add(src, _2) }\n                        {\n                            mstore(dst, calldataload(src))\n                            dst := add(dst, _2)\n                        }\n                        array := dst_1\n                    }\n                    function abi_encode_bytes32(headStart, value0) -> tail\n                    {\n                        tail := add(headStart, 32)\n                        mstore(headStart, value0)\n                    }\n                    function abi_encode_bool(headStart, value0) -> tail\n                    {\n                        tail := add(headStart, 32)\n                        mstore(headStart, iszero(iszero(value0)))\n                    }\n                    function external_fun_verifyProof()\n                    {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 96)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                        let offset := calldataload(36)\n                        if gt(offset, 0xffffffffffffffff)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                        let value1 := abi_decode_array_bytes32_dyn(add(4, offset), calldatasize())\n                        /// @src 22:610:644  \"bytes32 rollingHash = valueToProve\"\n                        let var_rollingHash := /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ calldataload(68)\n                        /// @src 22:671:683  \"proof.length\"\n                        let expr := /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ mload(/** @src 22:671:683  \"proof.length\" */ value1)\n                        /// @src 22:722:735  \"uint256 i = 0\"\n                        let var_i := /** @src -1:-1:-1 */ 0\n                        /// @src 22:717:837  \"for (uint256 i = 0; i < length; ++i) {...\"\n                        for { }\n                        /** @src 22:737:747  \"i < length\" */ lt(var_i, expr)\n                        /// @src 22:722:735  \"uint256 i = 0\"\n                        {\n                            /// @src 22:749:752  \"++i\"\n                            var_i := /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ add(/** @src 22:749:752  \"++i\" */ var_i, /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ 1)\n                        }\n                        /// @src 22:749:752  \"++i\"\n                        {\n                            /// @src 22:772:822  \"rollingHash = hashLeafPairs(rollingHash, proof[i])\"\n                            var_rollingHash := /** @src 22:786:822  \"hashLeafPairs(rollingHash, proof[i])\" */ fun_hashLeafPairs(var_rollingHash, /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ mload(/** @src 22:813:821  \"proof[i]\" */ memory_array_index_access_bytes32_dyn(value1, var_i)))\n                        }\n                        /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                        let memPos := mload(64)\n                        return(memPos, sub(abi_encode_bool(memPos, /** @src 22:863:882  \"root == rollingHash\" */ eq(/** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ calldataload(4), /** @src 22:863:882  \"root == rollingHash\" */ var_rollingHash)), /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ memPos))\n                    }\n                    function abi_encode_array_bytes32_dyn(headStart, value0) -> tail\n                    {\n                        let _1 := 32\n                        let tail_1 := add(headStart, 32)\n                        mstore(headStart, 32)\n                        let pos := tail_1\n                        let length := mload(value0)\n                        mstore(tail_1, length)\n                        pos := add(headStart, 64)\n                        let srcPtr := add(value0, 32)\n                        let i := 0\n                        for { } lt(i, length) { i := add(i, 1) }\n                        {\n                            mstore(pos, mload(srcPtr))\n                            pos := add(pos, _1)\n                            srcPtr := add(srcPtr, _1)\n                        }\n                        tail := pos\n                    }\n                    function external_fun_getProof()\n                    {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                        let offset := calldataload(4)\n                        if gt(offset, 0xffffffffffffffff)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                        let value0 := abi_decode_array_bytes32_dyn(add(4, offset), calldatasize())\n                        let var_node := calldataload(36)\n                        let var_data_mpos := value0\n                        /// @src 22:1353:1354  \"1\"\n                        let _1 := 0x01\n                        /// @src 22:1331:1395  \"require(data.length > 1, \\\"won't generate proof for single leaf\\\")\"\n                        require_helper_stringliteral_65df(/** @src 22:1339:1354  \"data.length > 1\" */ gt(/** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ mload(/** @src 22:1339:1350  \"data.length\" */ value0), /** @src 22:1353:1354  \"1\" */ _1))\n                        /// @src 22:1507:1551  \"new bytes32[](log2ceilBitMagic(data.length))\"\n                        let expr_mpos := allocate_and_zero_memory_array_array_bytes32_dyn(/** @src 22:1521:1550  \"log2ceilBitMagic(data.length)\" */ fun_log2ceilBitMagic(/** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ mload(/** @src 22:1538:1549  \"data.length\" */ value0)))\n                        /// @src 22:1561:1576  \"uint256 pos = 0\"\n                        let var_pos := /** @src -1:-1:-1 */ 0\n                        /// @src 22:1561:1576  \"uint256 pos = 0\"\n                        let var_pos_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 22:1887:2328  \"while (data.length > 1) {...\"\n                        for { }\n                        /** @src 22:1353:1354  \"1\" */ _1\n                        /// @src 22:1887:2328  \"while (data.length > 1) {...\"\n                        { }\n                        {\n                            /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                            let _2 := mload(/** @src 22:1894:1905  \"data.length\" */ var_data_mpos)\n                            /// @src 22:1894:1909  \"data.length > 1\"\n                            if iszero(gt(_2, /** @src 22:1353:1354  \"1\" */ _1))\n                            /// @src 22:1894:1909  \"data.length > 1\"\n                            { break }\n                            /// @src 22:1953:2218  \"if (node & 0x1 == 1) {...\"\n                            switch /** @src 22:1957:1972  \"node & 0x1 == 1\" */ eq(/** @src 22:1957:1967  \"node & 0x1\" */ and(var_node, /** @src 22:1353:1354  \"1\" */ _1), _1)\n                            case /** @src 22:1953:2218  \"if (node & 0x1 == 1) {...\" */ 0 {\n                                /// @src 22:2053:2061  \"node + 1\"\n                                let expr := /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ add(/** @src 22:2053:2061  \"node + 1\" */ var_node, /** @src 22:1353:1354  \"1\" */ _1)\n                                /// @src 22:2049:2218  \"if (node + 1 == data.length) {...\"\n                                switch /** @src 22:2053:2076  \"node + 1 == data.length\" */ eq(expr, _2)\n                                case /** @src 22:2049:2218  \"if (node + 1 == data.length) {...\" */ 0 {\n                                    /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                                    mstore(/** @src 22:2171:2199  \"result[pos] = data[node + 1]\" */ memory_array_index_access_bytes32_dyn(expr_mpos, var_pos_1), /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ mload(/** @src 22:2185:2199  \"data[node + 1]\" */ memory_array_index_access_bytes32_dyn(var_data_mpos, expr)))\n                                }\n                                default /// @src 22:2049:2218  \"if (node + 1 == data.length) {...\"\n                                {\n                                    /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                                    mstore(/** @src 22:2100:2124  \"result[pos] = bytes32(0)\" */ memory_array_index_access_bytes32_dyn(expr_mpos, var_pos_1), /** @src -1:-1:-1 */ var_pos)\n                                }\n                            }\n                            default /// @src 22:1953:2218  \"if (node & 0x1 == 1) {...\"\n                            {\n                                /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                                mstore(/** @src 22:1996:2024  \"result[pos] = data[node - 1]\" */ memory_array_index_access_bytes32_dyn(expr_mpos, var_pos_1), /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ mload(/** @src 22:2010:2024  \"data[node - 1]\" */ memory_array_index_access_bytes32_dyn(var_data_mpos, /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ add(/** @src 22:2015:2023  \"node - 1\" */ var_node, /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ not(0)))))\n                            }\n                            /// @src 22:2235:2240  \"++pos\"\n                            var_pos_1 := /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ add(/** @src 22:2235:2240  \"++pos\" */ var_pos_1, /** @src 22:1353:1354  \"1\" */ _1)\n                            /// @src 22:2258:2267  \"node /= 2\"\n                            var_node := /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ shr(/** @src 22:1353:1354  \"1\" */ _1, /** @src 22:2258:2267  \"node /= 2\" */ var_node)\n                            /// @src 22:2295:2317  \"data = hashLevel(data)\"\n                            var_data_mpos := /** @src 22:2302:2317  \"hashLevel(data)\" */ fun_hashLevel(var_data_mpos)\n                        }\n                        /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                        let memPos := mload(64)\n                        return(memPos, sub(abi_encode_array_bytes32_dyn(memPos, expr_mpos), memPos))\n                    }\n                    function external_fun_log2ceilBitMagic()\n                    {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                        let ret := fun_log2ceilBitMagic(calldataload(4))\n                        let memPos := mload(64)\n                        mstore(memPos, ret)\n                        return(memPos, 32)\n                    }\n                    function external_fun_hashLeafPairs()\n                    {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                        let ret := fun_hashLeafPairs(calldataload(4), calldataload(36))\n                        let memPos := mload(64)\n                        mstore(memPos, ret)\n                        return(memPos, 32)\n                    }\n                    function external_fun_log2ceil()\n                    {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32)\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                        let var_x := calldataload(4)\n                        let var_x_1 := var_x\n                        /// @src 22:3612:3628  \"uint256 ceil = 0\"\n                        let var_ceil := /** @src -1:-1:-1 */ 0\n                        /// @src 22:3875:4644  \"assembly {...\"\n                        let _1 := 1\n                        /// @src 22:4804:4882  \"while (x > 0) {...\"\n                        for { }\n                        /** @src 22:4811:4816  \"x > 0\" */ var_x\n                        /// @src 22:4804:4882  \"while (x > 0) {...\"\n                        { }\n                        {\n                            /// @src 22:4836:4843  \"x >>= 1\"\n                            var_x := /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ shr(/** @src 22:3875:4644  \"assembly {...\" */ _1, /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ var_x)\n                            /// @src 22:4861:4867  \"ceil++\"\n                            var_ceil := /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ add(/** @src 22:4861:4867  \"ceil++\" */ var_ceil, /** @src 22:3875:4644  \"assembly {...\" */ _1)\n                        }\n                        /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                        let memPos := mload(64)\n                        mstore(memPos, sub(/** @src 22:4895:4907  \"ceil -= pOf2\" */ var_ceil, /** @src 22:3875:4644  \"assembly {...\" */ eq(and(add(not(var_x_1), 1), var_x_1), var_x_1)))\n                        /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                        return(memPos, 32)\n                    }\n                    function memory_array_index_access_bytes32_dyn_2729(baseRef) -> addr\n                    {\n                        if iszero(mload(baseRef))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x32)\n                            revert(0, 0x24)\n                        }\n                        addr := add(baseRef, 32)\n                    }\n                    function memory_array_index_access_bytes32_dyn(baseRef, index) -> addr\n                    {\n                        if iszero(lt(index, mload(baseRef)))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x32)\n                            revert(0, 0x24)\n                        }\n                        addr := add(add(baseRef, shl(5, index)), 32)\n                    }\n                    function require_helper_stringliteral_65df(condition)\n                    {\n                        if iszero(condition)\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), 32)\n                            mstore(add(memPtr, 36), 36)\n                            mstore(add(memPtr, 68), \"won't generate proof for single \")\n                            mstore(add(memPtr, 100), \"leaf\")\n                            revert(memPtr, 132)\n                        }\n                    }\n                    function allocate_and_zero_memory_array_array_bytes32_dyn(length) -> memPtr\n                    {\n                        let memPtr_1 := allocate_memory(array_allocation_size_array_bytes32_dyn(length))\n                        mstore(memPtr_1, length)\n                        memPtr := memPtr_1\n                        calldatacopy(add(memPtr_1, 32), calldatasize(), add(array_allocation_size_array_bytes32_dyn(length), not(31)))\n                    }\n                    function checked_add_uint256(x) -> sum\n                    {\n                        sum := add(x, /** @src 22:5414:5416  \"64\" */ 0x40)\n                        /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                        if gt(x, sum)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                    }\n                    function checked_add_uint256_2746(x) -> sum\n                    {\n                        sum := add(x, /** @src 22:5497:5499  \"32\" */ 0x20)\n                        /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                        if gt(x, sum)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                    }\n                    function checked_add_uint256_2748(x) -> sum\n                    {\n                        sum := add(x, /** @src 22:5580:5582  \"16\" */ 0x10)\n                        /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                        if gt(x, sum)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                    }\n                    function checked_add_uint256_2750(x) -> sum\n                    {\n                        sum := add(x, /** @src 22:5662:5663  \"8\" */ 0x08)\n                        /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                        if gt(x, sum)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                    }\n                    function checked_add_uint256_2752(x) -> sum\n                    {\n                        sum := add(x, /** @src 22:5742:5743  \"4\" */ 0x04)\n                        /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                        if gt(x, sum)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(/** @src 22:5742:5743  \"4\" */ 0x04, /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ 0x11)\n                            revert(0, 0x24)\n                        }\n                    }\n                    function checked_add_uint256_2754(x) -> sum\n                    {\n                        sum := add(x, /** @src 22:5822:5823  \"2\" */ 0x02)\n                        /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                        if gt(x, sum)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                    }\n                    function checked_add_uint256_2755(x) -> sum\n                    {\n                        sum := add(x, /** @src 22:5196:5197  \"1\" */ 0x01)\n                        /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                        if gt(x, sum)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                    }\n                    /// @ast-id 44443 @src 22:5110:6079  \"function log2ceilBitMagic(uint256 x) public pure returns (uint256) {...\"\n                    function fun_log2ceilBitMagic(var_x) -> var\n                    {\n                        /// @src 22:5187:5232  \"if (x <= 1) {...\"\n                        if /** @src 22:5191:5197  \"x <= 1\" */ iszero(gt(var_x, /** @src 22:5196:5197  \"1\" */ 0x01))\n                        /// @src 22:5187:5232  \"if (x <= 1) {...\"\n                        {\n                            /// @src 22:5213:5221  \"return 0\"\n                            var := /** @src 22:5220:5221  \"0\" */ 0x00\n                            /// @src 22:5213:5221  \"return 0\"\n                            leave\n                        }\n                        /// @src 22:5241:5256  \"uint256 msb = 0\"\n                        let var_msb := /** @src 22:5255:5256  \"0\" */ 0x00\n                        /// @src 22:5266:5280  \"uint256 _x = x\"\n                        let var_x_1 := var_x\n                        /// @src 22:5290:5367  \"if (x >= 2 ** 128) {...\"\n                        if /** @src 22:5294:5307  \"x >= 2 ** 128\" */ iszero(lt(var_x, /** @src 22:5299:5307  \"2 ** 128\" */ shl(128, /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ 1)))\n                        /// @src 22:5290:5367  \"if (x >= 2 ** 128) {...\"\n                        {\n                            /// @src 22:5323:5332  \"x >>= 128\"\n                            var_x := /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ shr(128, /** @src 22:5323:5332  \"x >>= 128\" */ var_x)\n                            /// @src 22:5346:5356  \"msb += 128\"\n                            var_msb := /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ 128\n                        }\n                        /// @src 22:5376:5450  \"if (x >= 2 ** 64) {...\"\n                        if /** @src 22:5380:5392  \"x >= 2 ** 64\" */ iszero(lt(var_x, /** @src 22:5385:5392  \"2 ** 64\" */ 0x010000000000000000))\n                        /// @src 22:5376:5450  \"if (x >= 2 ** 64) {...\"\n                        {\n                            /// @src 22:5408:5416  \"x >>= 64\"\n                            var_x := /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ shr(64, /** @src 22:5408:5416  \"x >>= 64\" */ var_x)\n                            /// @src 22:5430:5439  \"msb += 64\"\n                            var_msb := checked_add_uint256(var_msb)\n                        }\n                        /// @src 22:5459:5533  \"if (x >= 2 ** 32) {...\"\n                        if /** @src 22:5463:5475  \"x >= 2 ** 32\" */ iszero(lt(var_x, /** @src 22:5468:5475  \"2 ** 32\" */ 0x0100000000))\n                        /// @src 22:5459:5533  \"if (x >= 2 ** 32) {...\"\n                        {\n                            /// @src 22:5491:5499  \"x >>= 32\"\n                            var_x := /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ shr(32, /** @src 22:5491:5499  \"x >>= 32\" */ var_x)\n                            /// @src 22:5513:5522  \"msb += 32\"\n                            var_msb := checked_add_uint256_2746(var_msb)\n                        }\n                        /// @src 22:5542:5616  \"if (x >= 2 ** 16) {...\"\n                        if /** @src 22:5546:5558  \"x >= 2 ** 16\" */ iszero(lt(var_x, /** @src 22:5551:5558  \"2 ** 16\" */ 0x010000))\n                        /// @src 22:5542:5616  \"if (x >= 2 ** 16) {...\"\n                        {\n                            /// @src 22:5574:5582  \"x >>= 16\"\n                            var_x := /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ shr(16, /** @src 22:5574:5582  \"x >>= 16\" */ var_x)\n                            /// @src 22:5596:5605  \"msb += 16\"\n                            var_msb := checked_add_uint256_2748(var_msb)\n                        }\n                        /// @src 22:5625:5696  \"if (x >= 2 ** 8) {...\"\n                        if /** @src 22:5629:5640  \"x >= 2 ** 8\" */ iszero(lt(var_x, /** @src 22:5634:5640  \"2 ** 8\" */ 0x0100))\n                        /// @src 22:5625:5696  \"if (x >= 2 ** 8) {...\"\n                        {\n                            /// @src 22:5656:5663  \"x >>= 8\"\n                            var_x := /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ shr(8, /** @src 22:5656:5663  \"x >>= 8\" */ var_x)\n                            /// @src 22:5677:5685  \"msb += 8\"\n                            var_msb := checked_add_uint256_2750(var_msb)\n                        }\n                        /// @src 22:5705:5776  \"if (x >= 2 ** 4) {...\"\n                        if /** @src 22:5709:5720  \"x >= 2 ** 4\" */ iszero(lt(var_x, /** @src 22:5714:5720  \"2 ** 4\" */ 0x10))\n                        /// @src 22:5705:5776  \"if (x >= 2 ** 4) {...\"\n                        {\n                            /// @src 22:5736:5743  \"x >>= 4\"\n                            var_x := /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ shr(4, /** @src 22:5736:5743  \"x >>= 4\" */ var_x)\n                            /// @src 22:5757:5765  \"msb += 4\"\n                            var_msb := checked_add_uint256_2752(var_msb)\n                        }\n                        /// @src 22:5785:5856  \"if (x >= 2 ** 2) {...\"\n                        if /** @src 22:5789:5800  \"x >= 2 ** 2\" */ iszero(lt(var_x, /** @src 22:5794:5800  \"2 ** 2\" */ 0x04))\n                        /// @src 22:5785:5856  \"if (x >= 2 ** 2) {...\"\n                        {\n                            /// @src 22:5816:5823  \"x >>= 2\"\n                            var_x := /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ shr(2, /** @src 22:5816:5823  \"x >>= 2\" */ var_x)\n                            /// @src 22:5837:5845  \"msb += 2\"\n                            var_msb := checked_add_uint256_2754(var_msb)\n                        }\n                        /// @src 22:5865:5915  \"if (x >= 2 ** 1) {...\"\n                        if /** @src 22:5869:5880  \"x >= 2 ** 1\" */ iszero(lt(var_x, /** @src 22:5874:5880  \"2 ** 1\" */ 0x02))\n                        /// @src 22:5865:5915  \"if (x >= 2 ** 1) {...\"\n                        {\n                            /// @src 22:5896:5904  \"msb += 1\"\n                            var_msb := checked_add_uint256_2755(var_msb)\n                        }\n                        /// @src 22:5967:5991  \"(lsb == _x) && (msb > 0)\"\n                        let expr := /** @src 22:5968:5977  \"lsb == _x\" */ eq(/** @src 22:5939:5953  \"(~_x + 1) & _x\" */ and(/** @src 22:5940:5947  \"~_x + 1\" */ checked_add_uint256_2755(/** @src 22:5940:5943  \"~_x\" */ not(var_x_1)), /** @src 22:5939:5953  \"(~_x + 1) & _x\" */ var_x_1), /** @src 22:5968:5977  \"lsb == _x\" */ var_x_1)\n                        /// @src 22:5967:5991  \"(lsb == _x) && (msb > 0)\"\n                        if expr\n                        {\n                            expr := /** @src 22:5983:5990  \"msb > 0\" */ iszero(iszero(var_msb))\n                        }\n                        /// @src 22:5963:6073  \"if ((lsb == _x) && (msb > 0)) {...\"\n                        switch expr\n                        case 0 {\n                            /// @src 22:6048:6062  \"return msb + 1\"\n                            var := /** @src 22:6055:6062  \"msb + 1\" */ checked_add_uint256_2755(var_msb)\n                            /// @src 22:6048:6062  \"return msb + 1\"\n                            leave\n                        }\n                        default /// @src 22:5963:6073  \"if ((lsb == _x) && (msb > 0)) {...\"\n                        {\n                            /// @src 22:6007:6017  \"return msb\"\n                            var := var_msb\n                            leave\n                        }\n                    }\n                    /// @ast-id 43922 @src 21:385:806  \"function hashLeafPairs(bytes32 left, bytes32 right) public pure override returns (bytes32 _hash) {...\"\n                    function fun_hashLeafPairs(var_left, var_right) -> var_hash\n                    {\n                        /// @src 21:492:800  \"assembly {...\"\n                        switch lt(var_left, var_right)\n                        case 0 {\n                            mstore(0x0, var_right)\n                            mstore(0x20, var_left)\n                        }\n                        default {\n                            mstore(0x0, var_left)\n                            mstore(0x20, var_right)\n                        }\n                        var_hash := keccak256(0x0, 0x40)\n                    }\n                    /// @ast-id 44239 @src 22:2436:3441  \"function hashLevel(bytes32[] memory data) private pure returns (bytes32[] memory) {...\"\n                    function fun_hashLevel(var_data_44132_mpos) -> var_mpos\n                    {\n                        /// @src 22:2528:2551  \"bytes32[] memory result\"\n                        let var_result_mpos := /** @src -1:-1:-1 */ 0\n                        /// @src 22:2837:2848  \"data.length\"\n                        let expr := /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ mload(/** @src 22:2837:2848  \"data.length\" */ var_data_44132_mpos)\n                        /// @src 22:2875:2878  \"0x1\"\n                        let _1 := 0x01\n                        /// @src 22:2862:3118  \"if (length & 0x1 == 1) {...\"\n                        switch /** @src 22:2866:2883  \"length & 0x1 == 1\" */ eq(/** @src 22:2866:2878  \"length & 0x1\" */ and(expr, /** @src 22:2875:2878  \"0x1\" */ _1), _1)\n                        case /** @src 22:2862:3118  \"if (length & 0x1 == 1) {...\" */ 0 {\n                            /// @src 22:3069:3103  \"result = new bytes32[](length / 2)\"\n                            var_result_mpos := /** @src 22:3078:3103  \"new bytes32[](length / 2)\" */ allocate_and_zero_memory_array_array_bytes32_dyn(/** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ shr(/** @src 22:2875:2878  \"0x1\" */ _1, /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ expr))\n                        }\n                        default /// @src 22:2862:3118  \"if (length & 0x1 == 1) {...\"\n                        {\n                            /// @src 22:2903:2941  \"result = new bytes32[](length / 2 + 1)\"\n                            var_result_mpos := /** @src 22:2912:2941  \"new bytes32[](length / 2 + 1)\" */ allocate_and_zero_memory_array_array_bytes32_dyn(/** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ add(shr(/** @src 22:2875:2878  \"0x1\" */ _1, /** @src 22:2926:2936  \"length / 2\" */ expr), /** @src 22:2875:2878  \"0x1\" */ _1))\n                            /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                            let _2 := not(0)\n                            let _3 := mload(/** @src 22:3001:3017  \"data[length - 1]\" */ memory_array_index_access_bytes32_dyn(var_data_44132_mpos, /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ add(/** @src 22:3006:3016  \"length - 1\" */ expr, /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ _2)))\n                            /// @src 21:492:800  \"assembly {...\"\n                            mstore(/** @src -1:-1:-1 */ 0, 0)\n                            /// @src 21:492:800  \"assembly {...\"\n                            mstore(0x20, _3)\n                            /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                            mstore(/** @src 22:2959:3030  \"result[result.length - 1] = hashLeafPairs(data[length - 1], bytes32(0))\" */ memory_array_index_access_bytes32_dyn(var_result_mpos, /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ add(mload(/** @src 22:2966:2979  \"result.length\" */ var_result_mpos), /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ _2)), /** @src 21:492:800  \"assembly {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 21:492:800  \"assembly {...\" */ 0x40))\n                        }\n                        /// @src 22:3224:3239  \"uint256 pos = 0\"\n                        let var_pos := /** @src -1:-1:-1 */ 0\n                        /// @src 22:3258:3271  \"uint256 i = 0\"\n                        let var_i := /** @src -1:-1:-1 */ 0\n                        /// @src 22:3273:3287  \"i < length - 1\"\n                        let _4 := /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ add(/** @src 22:3277:3287  \"length - 1\" */ expr, /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ not(0))\n                        /// @src 22:3253:3402  \"for (uint256 i = 0; i < length - 1; i += 2) {...\"\n                        for { }\n                        /** @src 22:3273:3287  \"i < length - 1\" */ lt(var_i, _4)\n                        /// @src 22:3258:3271  \"uint256 i = 0\"\n                        {\n                            /// @src 22:3289:3295  \"i += 2\"\n                            var_i := /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ add(/** @src 22:3289:3295  \"i += 2\" */ var_i, /** @src 22:3294:3295  \"2\" */ 0x02)\n                        }\n                        /// @src 22:3289:3295  \"i += 2\"\n                        {\n                            /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                            let _5 := mload(/** @src 22:3343:3350  \"data[i]\" */ memory_array_index_access_bytes32_dyn(var_data_44132_mpos, var_i))\n                            /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                            mstore(/** @src 22:3315:3364  \"result[pos] = hashLeafPairs(data[i], data[i + 1])\" */ memory_array_index_access_bytes32_dyn(var_result_mpos, var_pos), /** @src 22:3329:3364  \"hashLeafPairs(data[i], data[i + 1])\" */ fun_hashLeafPairs(_5, /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ mload(/** @src 22:3352:3363  \"data[i + 1]\" */ memory_array_index_access_bytes32_dyn(var_data_44132_mpos, /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ add(/** @src 22:3357:3362  \"i + 1\" */ var_i, /** @src 22:2875:2878  \"0x1\" */ _1)))))\n                            /// @src 22:3382:3387  \"++pos\"\n                            var_pos := /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ add(/** @src 22:3382:3387  \"++pos\" */ var_pos, /** @src 22:2875:2878  \"0x1\" */ _1)\n                        }\n                        /// @src 22:3421:3434  \"return result\"\n                        var_mpos := var_result_mpos\n                    }\n                }\n                data \".metadata\" hex\"a164736f6c6343000818000a\"\n            }\n        }\n    }\n    /// @use-src 21:\"lib/murky/src/Merkle.sol\", 22:\"lib/murky/src/common/MurkyBase.sol\"\n    object \"Merkle_43923\" {\n        code {\n            {\n                /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if callvalue() { revert(0, 0) }\n                let _2 := datasize(\"Merkle_43923_deployed\")\n                codecopy(_1, dataoffset(\"Merkle_43923_deployed\"), _2)\n                return(_1, _2)\n            }\n        }\n        /// @use-src 21:\"lib/murky/src/Merkle.sol\", 22:\"lib/murky/src/common/MurkyBase.sol\"\n        object \"Merkle_43923_deployed\" {\n            code {\n                {\n                    /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                    mstore(64, 128)\n                    if iszero(lt(calldatasize(), 4))\n                    {\n                        let _1 := 0\n                        switch shr(224, calldataload(_1))\n                        case 0x2e08d602 {\n                            if callvalue() { revert(_1, _1) }\n                            if slt(add(calldatasize(), not(3)), 32) { revert(_1, _1) }\n                            let offset := calldataload(4)\n                            if gt(offset, 0xffffffffffffffff) { revert(_1, _1) }\n                            let var_data_mpos := abi_decode_array_bytes32_dyn(add(4, offset), calldatasize())\n                            /// @src 22:1061:1062  \"1\"\n                            let _2 := 0x01\n                            /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                            if iszero(/** @src 22:1047:1062  \"data.length > 1\" */ gt(/** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ mload(/** @src 22:1047:1058  \"data.length\" */ var_data_mpos), /** @src 22:1061:1062  \"1\" */ 0x01))\n                            /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                            {\n                                let memPtr := mload(64)\n                                mstore(memPtr, shl(229, 4594637))\n                                mstore(add(memPtr, 4), 32)\n                                mstore(add(memPtr, 36), 35)\n                                mstore(add(memPtr, 68), \"won't generate root for single l\")\n                                mstore(add(memPtr, 100), \"eaf\")\n                                revert(memPtr, 132)\n                            }\n                            /// @src 22:1112:1183  \"while (data.length > 1) {...\"\n                            for { }\n                            /** @src 22:1061:1062  \"1\" */ _2\n                            /// @src 22:1112:1183  \"while (data.length > 1) {...\"\n                            { }\n                            {\n                                /// @src 22:1119:1134  \"data.length > 1\"\n                                if iszero(gt(/** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ mload(/** @src 22:1119:1130  \"data.length\" */ var_data_mpos), /** @src 22:1061:1062  \"1\" */ _2))\n                                /// @src 22:1119:1134  \"data.length > 1\"\n                                { break }\n                                /// @src 22:1150:1172  \"data = hashLevel(data)\"\n                                var_data_mpos := /** @src 22:1157:1172  \"hashLevel(data)\" */ fun_hashLevel(var_data_mpos)\n                            }\n                            /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                            let _3 := mload(/** @src 22:1199:1206  \"data[0]\" */ memory_array_index_access_bytes32_dyn_2729(var_data_mpos))\n                            /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                            let memPos := mload(64)\n                            return(memPos, sub(abi_encode_bytes32(memPos, _3), memPos))\n                        }\n                        case 0x58161a42 { external_fun_verifyProof() }\n                        case 0xb8616195 { external_fun_getProof() }\n                        case 0xcf06c7b7 {\n                            external_fun_log2ceilBitMagic()\n                        }\n                        case 0xdd1d2599 { external_fun_hashLeafPairs() }\n                        case 0xe27d5153 { external_fun_log2ceil() }\n                    }\n                    revert(0, 0)\n                }\n                function panic_error_0x41()\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                function allocate_memory(size) -> memPtr\n                {\n                    memPtr := mload(64)\n                    let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                    if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                    mstore(64, newFreePtr)\n                }\n                function array_allocation_size_array_bytes32_dyn(length) -> size\n                {\n                    if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n                    size := add(shl(5, length), 0x20)\n                }\n                function abi_decode_array_bytes32_dyn(offset, end) -> array\n                {\n                    if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                    let _1 := calldataload(offset)\n                    let _2 := 0x20\n                    let dst := allocate_memory(array_allocation_size_array_bytes32_dyn(_1))\n                    let dst_1 := dst\n                    mstore(dst, _1)\n                    dst := add(dst, 0x20)\n                    let srcEnd := add(add(offset, shl(5, _1)), 0x20)\n                    if gt(srcEnd, end)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                    let src := add(offset, 0x20)\n                    for { } lt(src, srcEnd) { src := add(src, _2) }\n                    {\n                        mstore(dst, calldataload(src))\n                        dst := add(dst, _2)\n                    }\n                    array := dst_1\n                }\n                function abi_encode_bytes32(headStart, value0) -> tail\n                {\n                    tail := add(headStart, 32)\n                    mstore(headStart, value0)\n                }\n                function abi_encode_bool(headStart, value0) -> tail\n                {\n                    tail := add(headStart, 32)\n                    mstore(headStart, iszero(iszero(value0)))\n                }\n                function external_fun_verifyProof()\n                {\n                    if callvalue() { revert(0, 0) }\n                    if slt(add(calldatasize(), not(3)), 96)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                    let offset := calldataload(36)\n                    if gt(offset, 0xffffffffffffffff)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                    let value1 := abi_decode_array_bytes32_dyn(add(4, offset), calldatasize())\n                    /// @src 22:610:644  \"bytes32 rollingHash = valueToProve\"\n                    let var_rollingHash := /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ calldataload(68)\n                    /// @src 22:671:683  \"proof.length\"\n                    let expr := /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ mload(/** @src 22:671:683  \"proof.length\" */ value1)\n                    /// @src 22:722:735  \"uint256 i = 0\"\n                    let var_i := /** @src -1:-1:-1 */ 0\n                    /// @src 22:717:837  \"for (uint256 i = 0; i < length; ++i) {...\"\n                    for { }\n                    /** @src 22:737:747  \"i < length\" */ lt(var_i, expr)\n                    /// @src 22:722:735  \"uint256 i = 0\"\n                    {\n                        /// @src 22:749:752  \"++i\"\n                        var_i := /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ add(/** @src 22:749:752  \"++i\" */ var_i, /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ 1)\n                    }\n                    /// @src 22:749:752  \"++i\"\n                    {\n                        /// @src 22:772:822  \"rollingHash = hashLeafPairs(rollingHash, proof[i])\"\n                        var_rollingHash := /** @src 22:786:822  \"hashLeafPairs(rollingHash, proof[i])\" */ fun_hashLeafPairs(var_rollingHash, /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ mload(/** @src 22:813:821  \"proof[i]\" */ memory_array_index_access_bytes32_dyn(value1, var_i)))\n                    }\n                    /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                    let memPos := mload(64)\n                    return(memPos, sub(abi_encode_bool(memPos, /** @src 22:863:882  \"root == rollingHash\" */ eq(/** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ calldataload(4), /** @src 22:863:882  \"root == rollingHash\" */ var_rollingHash)), /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ memPos))\n                }\n                function abi_encode_array_bytes32_dyn(headStart, value0) -> tail\n                {\n                    let _1 := 32\n                    let tail_1 := add(headStart, 32)\n                    mstore(headStart, 32)\n                    let pos := tail_1\n                    let length := mload(value0)\n                    mstore(tail_1, length)\n                    pos := add(headStart, 64)\n                    let srcPtr := add(value0, 32)\n                    let i := 0\n                    for { } lt(i, length) { i := add(i, 1) }\n                    {\n                        mstore(pos, mload(srcPtr))\n                        pos := add(pos, _1)\n                        srcPtr := add(srcPtr, _1)\n                    }\n                    tail := pos\n                }\n                function external_fun_getProof()\n                {\n                    if callvalue() { revert(0, 0) }\n                    if slt(add(calldatasize(), not(3)), 64)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                    let offset := calldataload(4)\n                    if gt(offset, 0xffffffffffffffff)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                    let value0 := abi_decode_array_bytes32_dyn(add(4, offset), calldatasize())\n                    let var_node := calldataload(36)\n                    let var_data_mpos := value0\n                    /// @src 22:1353:1354  \"1\"\n                    let _1 := 0x01\n                    /// @src 22:1331:1395  \"require(data.length > 1, \\\"won't generate proof for single leaf\\\")\"\n                    require_helper_stringliteral_65df(/** @src 22:1339:1354  \"data.length > 1\" */ gt(/** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ mload(/** @src 22:1339:1350  \"data.length\" */ value0), /** @src 22:1353:1354  \"1\" */ _1))\n                    /// @src 22:1507:1551  \"new bytes32[](log2ceilBitMagic(data.length))\"\n                    let expr_mpos := allocate_and_zero_memory_array_array_bytes32_dyn(/** @src 22:1521:1550  \"log2ceilBitMagic(data.length)\" */ fun_log2ceilBitMagic(/** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ mload(/** @src 22:1538:1549  \"data.length\" */ value0)))\n                    /// @src 22:1561:1576  \"uint256 pos = 0\"\n                    let var_pos := /** @src -1:-1:-1 */ 0\n                    /// @src 22:1561:1576  \"uint256 pos = 0\"\n                    let var_pos_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 22:1887:2328  \"while (data.length > 1) {...\"\n                    for { }\n                    /** @src 22:1353:1354  \"1\" */ _1\n                    /// @src 22:1887:2328  \"while (data.length > 1) {...\"\n                    { }\n                    {\n                        /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                        let _2 := mload(/** @src 22:1894:1905  \"data.length\" */ var_data_mpos)\n                        /// @src 22:1894:1909  \"data.length > 1\"\n                        if iszero(gt(_2, /** @src 22:1353:1354  \"1\" */ _1))\n                        /// @src 22:1894:1909  \"data.length > 1\"\n                        { break }\n                        /// @src 22:1953:2218  \"if (node & 0x1 == 1) {...\"\n                        switch /** @src 22:1957:1972  \"node & 0x1 == 1\" */ eq(/** @src 22:1957:1967  \"node & 0x1\" */ and(var_node, /** @src 22:1353:1354  \"1\" */ _1), _1)\n                        case /** @src 22:1953:2218  \"if (node & 0x1 == 1) {...\" */ 0 {\n                            /// @src 22:2053:2061  \"node + 1\"\n                            let expr := /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ add(/** @src 22:2053:2061  \"node + 1\" */ var_node, /** @src 22:1353:1354  \"1\" */ _1)\n                            /// @src 22:2049:2218  \"if (node + 1 == data.length) {...\"\n                            switch /** @src 22:2053:2076  \"node + 1 == data.length\" */ eq(expr, _2)\n                            case /** @src 22:2049:2218  \"if (node + 1 == data.length) {...\" */ 0 {\n                                /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                                mstore(/** @src 22:2171:2199  \"result[pos] = data[node + 1]\" */ memory_array_index_access_bytes32_dyn(expr_mpos, var_pos_1), /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ mload(/** @src 22:2185:2199  \"data[node + 1]\" */ memory_array_index_access_bytes32_dyn(var_data_mpos, expr)))\n                            }\n                            default /// @src 22:2049:2218  \"if (node + 1 == data.length) {...\"\n                            {\n                                /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                                mstore(/** @src 22:2100:2124  \"result[pos] = bytes32(0)\" */ memory_array_index_access_bytes32_dyn(expr_mpos, var_pos_1), /** @src -1:-1:-1 */ var_pos)\n                            }\n                        }\n                        default /// @src 22:1953:2218  \"if (node & 0x1 == 1) {...\"\n                        {\n                            /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                            mstore(/** @src 22:1996:2024  \"result[pos] = data[node - 1]\" */ memory_array_index_access_bytes32_dyn(expr_mpos, var_pos_1), /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ mload(/** @src 22:2010:2024  \"data[node - 1]\" */ memory_array_index_access_bytes32_dyn(var_data_mpos, /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ add(/** @src 22:2015:2023  \"node - 1\" */ var_node, /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ not(0)))))\n                        }\n                        /// @src 22:2235:2240  \"++pos\"\n                        var_pos_1 := /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ add(/** @src 22:2235:2240  \"++pos\" */ var_pos_1, /** @src 22:1353:1354  \"1\" */ _1)\n                        /// @src 22:2258:2267  \"node /= 2\"\n                        var_node := /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ shr(/** @src 22:1353:1354  \"1\" */ _1, /** @src 22:2258:2267  \"node /= 2\" */ var_node)\n                        /// @src 22:2295:2317  \"data = hashLevel(data)\"\n                        var_data_mpos := /** @src 22:2302:2317  \"hashLevel(data)\" */ fun_hashLevel(var_data_mpos)\n                    }\n                    /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                    let memPos := mload(64)\n                    return(memPos, sub(abi_encode_array_bytes32_dyn(memPos, expr_mpos), memPos))\n                }\n                function external_fun_log2ceilBitMagic()\n                {\n                    if callvalue() { revert(0, 0) }\n                    if slt(add(calldatasize(), not(3)), 32)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                    let ret := fun_log2ceilBitMagic(calldataload(4))\n                    let memPos := mload(64)\n                    mstore(memPos, ret)\n                    return(memPos, 32)\n                }\n                function external_fun_hashLeafPairs()\n                {\n                    if callvalue() { revert(0, 0) }\n                    if slt(add(calldatasize(), not(3)), 64)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                    let ret := fun_hashLeafPairs(calldataload(4), calldataload(36))\n                    let memPos := mload(64)\n                    mstore(memPos, ret)\n                    return(memPos, 32)\n                }\n                function external_fun_log2ceil()\n                {\n                    if callvalue() { revert(0, 0) }\n                    if slt(add(calldatasize(), not(3)), 32)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                    let var_x := calldataload(4)\n                    let var_x_1 := var_x\n                    /// @src 22:3612:3628  \"uint256 ceil = 0\"\n                    let var_ceil := /** @src -1:-1:-1 */ 0\n                    /// @src 22:3875:4644  \"assembly {...\"\n                    let _1 := 1\n                    /// @src 22:4804:4882  \"while (x > 0) {...\"\n                    for { }\n                    /** @src 22:4811:4816  \"x > 0\" */ var_x\n                    /// @src 22:4804:4882  \"while (x > 0) {...\"\n                    { }\n                    {\n                        /// @src 22:4836:4843  \"x >>= 1\"\n                        var_x := /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ shr(/** @src 22:3875:4644  \"assembly {...\" */ _1, /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ var_x)\n                        /// @src 22:4861:4867  \"ceil++\"\n                        var_ceil := /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ add(/** @src 22:4861:4867  \"ceil++\" */ var_ceil, /** @src 22:3875:4644  \"assembly {...\" */ _1)\n                    }\n                    /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                    let memPos := mload(64)\n                    mstore(memPos, sub(/** @src 22:4895:4907  \"ceil -= pOf2\" */ var_ceil, /** @src 22:3875:4644  \"assembly {...\" */ eq(and(add(not(var_x_1), 1), var_x_1), var_x_1)))\n                    /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                    return(memPos, 32)\n                }\n                function memory_array_index_access_bytes32_dyn_2729(baseRef) -> addr\n                {\n                    if iszero(mload(baseRef))\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x32)\n                        revert(0, 0x24)\n                    }\n                    addr := add(baseRef, 32)\n                }\n                function memory_array_index_access_bytes32_dyn(baseRef, index) -> addr\n                {\n                    if iszero(lt(index, mload(baseRef)))\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x32)\n                        revert(0, 0x24)\n                    }\n                    addr := add(add(baseRef, shl(5, index)), 32)\n                }\n                function require_helper_stringliteral_65df(condition)\n                {\n                    if iszero(condition)\n                    {\n                        let memPtr := mload(64)\n                        mstore(memPtr, shl(229, 4594637))\n                        mstore(add(memPtr, 4), 32)\n                        mstore(add(memPtr, 36), 36)\n                        mstore(add(memPtr, 68), \"won't generate proof for single \")\n                        mstore(add(memPtr, 100), \"leaf\")\n                        revert(memPtr, 132)\n                    }\n                }\n                function allocate_and_zero_memory_array_array_bytes32_dyn(length) -> memPtr\n                {\n                    let memPtr_1 := allocate_memory(array_allocation_size_array_bytes32_dyn(length))\n                    mstore(memPtr_1, length)\n                    memPtr := memPtr_1\n                    calldatacopy(add(memPtr_1, 32), calldatasize(), add(array_allocation_size_array_bytes32_dyn(length), not(31)))\n                }\n                function checked_add_uint256(x) -> sum\n                {\n                    sum := add(x, /** @src 22:5414:5416  \"64\" */ 0x40)\n                    /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                    if gt(x, sum)\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x11)\n                        revert(0, 0x24)\n                    }\n                }\n                function checked_add_uint256_2746(x) -> sum\n                {\n                    sum := add(x, /** @src 22:5497:5499  \"32\" */ 0x20)\n                    /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                    if gt(x, sum)\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x11)\n                        revert(0, 0x24)\n                    }\n                }\n                function checked_add_uint256_2748(x) -> sum\n                {\n                    sum := add(x, /** @src 22:5580:5582  \"16\" */ 0x10)\n                    /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                    if gt(x, sum)\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x11)\n                        revert(0, 0x24)\n                    }\n                }\n                function checked_add_uint256_2750(x) -> sum\n                {\n                    sum := add(x, /** @src 22:5662:5663  \"8\" */ 0x08)\n                    /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                    if gt(x, sum)\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x11)\n                        revert(0, 0x24)\n                    }\n                }\n                function checked_add_uint256_2752(x) -> sum\n                {\n                    sum := add(x, /** @src 22:5742:5743  \"4\" */ 0x04)\n                    /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                    if gt(x, sum)\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(/** @src 22:5742:5743  \"4\" */ 0x04, /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ 0x11)\n                        revert(0, 0x24)\n                    }\n                }\n                function checked_add_uint256_2754(x) -> sum\n                {\n                    sum := add(x, /** @src 22:5822:5823  \"2\" */ 0x02)\n                    /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                    if gt(x, sum)\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x11)\n                        revert(0, 0x24)\n                    }\n                }\n                function checked_add_uint256_2755(x) -> sum\n                {\n                    sum := add(x, /** @src 22:5196:5197  \"1\" */ 0x01)\n                    /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                    if gt(x, sum)\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x11)\n                        revert(0, 0x24)\n                    }\n                }\n                /// @ast-id 44443 @src 22:5110:6079  \"function log2ceilBitMagic(uint256 x) public pure returns (uint256) {...\"\n                function fun_log2ceilBitMagic(var_x) -> var\n                {\n                    /// @src 22:5187:5232  \"if (x <= 1) {...\"\n                    if /** @src 22:5191:5197  \"x <= 1\" */ iszero(gt(var_x, /** @src 22:5196:5197  \"1\" */ 0x01))\n                    /// @src 22:5187:5232  \"if (x <= 1) {...\"\n                    {\n                        /// @src 22:5213:5221  \"return 0\"\n                        var := /** @src 22:5220:5221  \"0\" */ 0x00\n                        /// @src 22:5213:5221  \"return 0\"\n                        leave\n                    }\n                    /// @src 22:5241:5256  \"uint256 msb = 0\"\n                    let var_msb := /** @src 22:5255:5256  \"0\" */ 0x00\n                    /// @src 22:5266:5280  \"uint256 _x = x\"\n                    let var_x_1 := var_x\n                    /// @src 22:5290:5367  \"if (x >= 2 ** 128) {...\"\n                    if /** @src 22:5294:5307  \"x >= 2 ** 128\" */ iszero(lt(var_x, /** @src 22:5299:5307  \"2 ** 128\" */ shl(128, /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ 1)))\n                    /// @src 22:5290:5367  \"if (x >= 2 ** 128) {...\"\n                    {\n                        /// @src 22:5323:5332  \"x >>= 128\"\n                        var_x := /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ shr(128, /** @src 22:5323:5332  \"x >>= 128\" */ var_x)\n                        /// @src 22:5346:5356  \"msb += 128\"\n                        var_msb := /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ 128\n                    }\n                    /// @src 22:5376:5450  \"if (x >= 2 ** 64) {...\"\n                    if /** @src 22:5380:5392  \"x >= 2 ** 64\" */ iszero(lt(var_x, /** @src 22:5385:5392  \"2 ** 64\" */ 0x010000000000000000))\n                    /// @src 22:5376:5450  \"if (x >= 2 ** 64) {...\"\n                    {\n                        /// @src 22:5408:5416  \"x >>= 64\"\n                        var_x := /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ shr(64, /** @src 22:5408:5416  \"x >>= 64\" */ var_x)\n                        /// @src 22:5430:5439  \"msb += 64\"\n                        var_msb := checked_add_uint256(var_msb)\n                    }\n                    /// @src 22:5459:5533  \"if (x >= 2 ** 32) {...\"\n                    if /** @src 22:5463:5475  \"x >= 2 ** 32\" */ iszero(lt(var_x, /** @src 22:5468:5475  \"2 ** 32\" */ 0x0100000000))\n                    /// @src 22:5459:5533  \"if (x >= 2 ** 32) {...\"\n                    {\n                        /// @src 22:5491:5499  \"x >>= 32\"\n                        var_x := /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ shr(32, /** @src 22:5491:5499  \"x >>= 32\" */ var_x)\n                        /// @src 22:5513:5522  \"msb += 32\"\n                        var_msb := checked_add_uint256_2746(var_msb)\n                    }\n                    /// @src 22:5542:5616  \"if (x >= 2 ** 16) {...\"\n                    if /** @src 22:5546:5558  \"x >= 2 ** 16\" */ iszero(lt(var_x, /** @src 22:5551:5558  \"2 ** 16\" */ 0x010000))\n                    /// @src 22:5542:5616  \"if (x >= 2 ** 16) {...\"\n                    {\n                        /// @src 22:5574:5582  \"x >>= 16\"\n                        var_x := /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ shr(16, /** @src 22:5574:5582  \"x >>= 16\" */ var_x)\n                        /// @src 22:5596:5605  \"msb += 16\"\n                        var_msb := checked_add_uint256_2748(var_msb)\n                    }\n                    /// @src 22:5625:5696  \"if (x >= 2 ** 8) {...\"\n                    if /** @src 22:5629:5640  \"x >= 2 ** 8\" */ iszero(lt(var_x, /** @src 22:5634:5640  \"2 ** 8\" */ 0x0100))\n                    /// @src 22:5625:5696  \"if (x >= 2 ** 8) {...\"\n                    {\n                        /// @src 22:5656:5663  \"x >>= 8\"\n                        var_x := /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ shr(8, /** @src 22:5656:5663  \"x >>= 8\" */ var_x)\n                        /// @src 22:5677:5685  \"msb += 8\"\n                        var_msb := checked_add_uint256_2750(var_msb)\n                    }\n                    /// @src 22:5705:5776  \"if (x >= 2 ** 4) {...\"\n                    if /** @src 22:5709:5720  \"x >= 2 ** 4\" */ iszero(lt(var_x, /** @src 22:5714:5720  \"2 ** 4\" */ 0x10))\n                    /// @src 22:5705:5776  \"if (x >= 2 ** 4) {...\"\n                    {\n                        /// @src 22:5736:5743  \"x >>= 4\"\n                        var_x := /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ shr(4, /** @src 22:5736:5743  \"x >>= 4\" */ var_x)\n                        /// @src 22:5757:5765  \"msb += 4\"\n                        var_msb := checked_add_uint256_2752(var_msb)\n                    }\n                    /// @src 22:5785:5856  \"if (x >= 2 ** 2) {...\"\n                    if /** @src 22:5789:5800  \"x >= 2 ** 2\" */ iszero(lt(var_x, /** @src 22:5794:5800  \"2 ** 2\" */ 0x04))\n                    /// @src 22:5785:5856  \"if (x >= 2 ** 2) {...\"\n                    {\n                        /// @src 22:5816:5823  \"x >>= 2\"\n                        var_x := /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ shr(2, /** @src 22:5816:5823  \"x >>= 2\" */ var_x)\n                        /// @src 22:5837:5845  \"msb += 2\"\n                        var_msb := checked_add_uint256_2754(var_msb)\n                    }\n                    /// @src 22:5865:5915  \"if (x >= 2 ** 1) {...\"\n                    if /** @src 22:5869:5880  \"x >= 2 ** 1\" */ iszero(lt(var_x, /** @src 22:5874:5880  \"2 ** 1\" */ 0x02))\n                    /// @src 22:5865:5915  \"if (x >= 2 ** 1) {...\"\n                    {\n                        /// @src 22:5896:5904  \"msb += 1\"\n                        var_msb := checked_add_uint256_2755(var_msb)\n                    }\n                    /// @src 22:5967:5991  \"(lsb == _x) && (msb > 0)\"\n                    let expr := /** @src 22:5968:5977  \"lsb == _x\" */ eq(/** @src 22:5939:5953  \"(~_x + 1) & _x\" */ and(/** @src 22:5940:5947  \"~_x + 1\" */ checked_add_uint256_2755(/** @src 22:5940:5943  \"~_x\" */ not(var_x_1)), /** @src 22:5939:5953  \"(~_x + 1) & _x\" */ var_x_1), /** @src 22:5968:5977  \"lsb == _x\" */ var_x_1)\n                    /// @src 22:5967:5991  \"(lsb == _x) && (msb > 0)\"\n                    if expr\n                    {\n                        expr := /** @src 22:5983:5990  \"msb > 0\" */ iszero(iszero(var_msb))\n                    }\n                    /// @src 22:5963:6073  \"if ((lsb == _x) && (msb > 0)) {...\"\n                    switch expr\n                    case 0 {\n                        /// @src 22:6048:6062  \"return msb + 1\"\n                        var := /** @src 22:6055:6062  \"msb + 1\" */ checked_add_uint256_2755(var_msb)\n                        /// @src 22:6048:6062  \"return msb + 1\"\n                        leave\n                    }\n                    default /// @src 22:5963:6073  \"if ((lsb == _x) && (msb > 0)) {...\"\n                    {\n                        /// @src 22:6007:6017  \"return msb\"\n                        var := var_msb\n                        leave\n                    }\n                }\n                /// @ast-id 43922 @src 21:385:806  \"function hashLeafPairs(bytes32 left, bytes32 right) public pure override returns (bytes32 _hash) {...\"\n                function fun_hashLeafPairs(var_left, var_right) -> var_hash\n                {\n                    /// @src 21:492:800  \"assembly {...\"\n                    switch lt(var_left, var_right)\n                    case 0 {\n                        mstore(0x0, var_right)\n                        mstore(0x20, var_left)\n                    }\n                    default {\n                        mstore(0x0, var_left)\n                        mstore(0x20, var_right)\n                    }\n                    var_hash := keccak256(0x0, 0x40)\n                }\n                /// @ast-id 44239 @src 22:2436:3441  \"function hashLevel(bytes32[] memory data) private pure returns (bytes32[] memory) {...\"\n                function fun_hashLevel(var_data_44132_mpos) -> var_mpos\n                {\n                    /// @src 22:2528:2551  \"bytes32[] memory result\"\n                    let var_result_mpos := /** @src -1:-1:-1 */ 0\n                    /// @src 22:2837:2848  \"data.length\"\n                    let expr := /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ mload(/** @src 22:2837:2848  \"data.length\" */ var_data_44132_mpos)\n                    /// @src 22:2875:2878  \"0x1\"\n                    let _1 := 0x01\n                    /// @src 22:2862:3118  \"if (length & 0x1 == 1) {...\"\n                    switch /** @src 22:2866:2883  \"length & 0x1 == 1\" */ eq(/** @src 22:2866:2878  \"length & 0x1\" */ and(expr, /** @src 22:2875:2878  \"0x1\" */ _1), _1)\n                    case /** @src 22:2862:3118  \"if (length & 0x1 == 1) {...\" */ 0 {\n                        /// @src 22:3069:3103  \"result = new bytes32[](length / 2)\"\n                        var_result_mpos := /** @src 22:3078:3103  \"new bytes32[](length / 2)\" */ allocate_and_zero_memory_array_array_bytes32_dyn(/** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ shr(/** @src 22:2875:2878  \"0x1\" */ _1, /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ expr))\n                    }\n                    default /// @src 22:2862:3118  \"if (length & 0x1 == 1) {...\"\n                    {\n                        /// @src 22:2903:2941  \"result = new bytes32[](length / 2 + 1)\"\n                        var_result_mpos := /** @src 22:2912:2941  \"new bytes32[](length / 2 + 1)\" */ allocate_and_zero_memory_array_array_bytes32_dyn(/** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ add(shr(/** @src 22:2875:2878  \"0x1\" */ _1, /** @src 22:2926:2936  \"length / 2\" */ expr), /** @src 22:2875:2878  \"0x1\" */ _1))\n                        /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                        let _2 := not(0)\n                        let _3 := mload(/** @src 22:3001:3017  \"data[length - 1]\" */ memory_array_index_access_bytes32_dyn(var_data_44132_mpos, /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ add(/** @src 22:3006:3016  \"length - 1\" */ expr, /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ _2)))\n                        /// @src 21:492:800  \"assembly {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, 0)\n                        /// @src 21:492:800  \"assembly {...\"\n                        mstore(0x20, _3)\n                        /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                        mstore(/** @src 22:2959:3030  \"result[result.length - 1] = hashLeafPairs(data[length - 1], bytes32(0))\" */ memory_array_index_access_bytes32_dyn(var_result_mpos, /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ add(mload(/** @src 22:2966:2979  \"result.length\" */ var_result_mpos), /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ _2)), /** @src 21:492:800  \"assembly {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 21:492:800  \"assembly {...\" */ 0x40))\n                    }\n                    /// @src 22:3224:3239  \"uint256 pos = 0\"\n                    let var_pos := /** @src -1:-1:-1 */ 0\n                    /// @src 22:3258:3271  \"uint256 i = 0\"\n                    let var_i := /** @src -1:-1:-1 */ 0\n                    /// @src 22:3273:3287  \"i < length - 1\"\n                    let _4 := /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ add(/** @src 22:3277:3287  \"length - 1\" */ expr, /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ not(0))\n                    /// @src 22:3253:3402  \"for (uint256 i = 0; i < length - 1; i += 2) {...\"\n                    for { }\n                    /** @src 22:3273:3287  \"i < length - 1\" */ lt(var_i, _4)\n                    /// @src 22:3258:3271  \"uint256 i = 0\"\n                    {\n                        /// @src 22:3289:3295  \"i += 2\"\n                        var_i := /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ add(/** @src 22:3289:3295  \"i += 2\" */ var_i, /** @src 22:3294:3295  \"2\" */ 0x02)\n                    }\n                    /// @src 22:3289:3295  \"i += 2\"\n                    {\n                        /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                        let _5 := mload(/** @src 22:3343:3350  \"data[i]\" */ memory_array_index_access_bytes32_dyn(var_data_44132_mpos, var_i))\n                        /// @src 21:242:808  \"contract Merkle is MurkyBase {...\"\n                        mstore(/** @src 22:3315:3364  \"result[pos] = hashLeafPairs(data[i], data[i + 1])\" */ memory_array_index_access_bytes32_dyn(var_result_mpos, var_pos), /** @src 22:3329:3364  \"hashLeafPairs(data[i], data[i + 1])\" */ fun_hashLeafPairs(_5, /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ mload(/** @src 22:3352:3363  \"data[i + 1]\" */ memory_array_index_access_bytes32_dyn(var_data_44132_mpos, /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ add(/** @src 22:3357:3362  \"i + 1\" */ var_i, /** @src 22:2875:2878  \"0x1\" */ _1)))))\n                        /// @src 22:3382:3387  \"++pos\"\n                        var_pos := /** @src 21:242:808  \"contract Merkle is MurkyBase {...\" */ add(/** @src 22:3382:3387  \"++pos\" */ var_pos, /** @src 22:2875:2878  \"0x1\" */ _1)\n                    }\n                    /// @src 22:3421:3434  \"return result\"\n                    var_mpos := var_result_mpos\n                }\n            }\n            data \".metadata\" hex\"a164736f6c6343000818000a\"\n        }\n    }\n}\n","hash":"0100072b59d2aaeb62d07f050a7e50e513c7417eacb2290ae81ee9d31f5d895f","factoryDependencies":{"010000f197b470fb605b5043547d4be18596909b957c006e7fb31c2b04980875":"lib/murky/src/Merkle.sol:Merkle","010006f9529f37ca834e3318e83a8b29dce93e850c15d2aef9edc5cb2cb24a27":"lib/murky/script/Merkle.s.sol:MerkleScript"},"id":37}